hkBvTreeAgent3::initAgentFunc(hkpCollisionDispatcher::Agent3Funcs&)
std::vector<rglMesh_face, std::allocator<rglMesh_face> >::operator=(std::vector<rglMesh_face, std::allocator<rglMesh_face> > const&)
void std::vector<rglWidget_base*, std::allocator<rglWidget_base*> >::_M_insert_aux<rglWidget_base* const&>(__gnu_cxx::__normal_iterator<rglWidget_base**, std::vector<rglWidget_base*, std::allocator<rglWidget_base*> > >, rglWidget_base* const&)
void std::vector<rglString, std::allocator<rglString> >::_M_insert_aux<rglString const&>(__gnu_cxx::__normal_iterator<rglString*, std::vector<rglString, std::allocator<rglString> > >, rglString const&)
std::vector<rglVertex_group_couple, std::allocator<rglVertex_group_couple> >::operator=(std::vector<rglVertex_group_couple, std::allocator<rglVertex_group_couple> > const&)
std::vector<rglMesh_vertex, std::allocator<rglMesh_vertex> >::_M_default_append(unsigned long)
neosmart::SetEvent(neosmart::neosmart_event_t_*)
void std::vector<directx_thread_call, std::allocator<directx_thread_call> >::emplace_back<directx_thread_call>(directx_thread_call&&)
std::vector<rglLight*, std::allocator<rglLight*> >::operator=(std::vector<rglLight*, std::allocator<rglLight*> > const&)
std::vector<rglCorner, std::allocator<rglCorner> >::operator=(std::vector<rglCorner, std::allocator<rglCorner> > const&)
std::vector<rglCorner_skin_data, std::allocator<rglCorner_skin_data> >::operator=(std::vector<rglCorner_skin_data, std::allocator<rglCorner_skin_data> > const&)
std::vector<rglMesh_vertex, std::allocator<rglMesh_vertex> >::operator=(std::vector<rglMesh_vertex, std::allocator<rglMesh_vertex> > const&)
std::vector<rglVertex_group, std::allocator<rglVertex_group> >::operator=(std::vector<rglVertex_group, std::allocator<rglVertex_group> > const&)
std::vector<rglMesh_face, std::allocator<rglMesh_face> >::_M_default_append(unsigned long)
void std::__stable_sort_adaptive<__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, rglRender_rec**, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglRender_rec const*, rglRender_rec const*)> >(__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, rglRender_rec**, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglRender_rec const*, rglRender_rec const*)>)
neosmart::ResetEvent(neosmart::neosmart_event_t_*)
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > > std::__upper_bound<__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, rglRender_rec*, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(rglRender_rec const*, rglRender_rec const*)> >(__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, rglRender_rec* const&, __gnu_cxx::__ops::_Val_comp_iter<bool (*)(rglRender_rec const*, rglRender_rec const*)>)
__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > > std::_V2::__rotate<__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > > >(__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, std::random_access_iterator_tag)
void std::__merge_without_buffer<__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglRender_rec const*, rglRender_rec const*)> >(__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, long, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglRender_rec const*, rglRender_rec const*)>)
void std::__inplace_stable_sort<__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglRender_rec const*, rglRender_rec const*)> >(__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglRender_rec const*, rglRender_rec const*)>)
void std::__merge_adaptive<__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, long, rglRender_rec**, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglRender_rec const*, rglRender_rec const*)> >(__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, long, long, rglRender_rec**, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglRender_rec const*, rglRender_rec const*)>)
__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > > std::__lower_bound<__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, rglRender_rec*, __gnu_cxx::__ops::_Iter_comp_val<bool (*)(rglRender_rec const*, rglRender_rec const*)> >(__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, rglRender_rec* const&, __gnu_cxx::__ops::_Iter_comp_val<bool (*)(rglRender_rec const*, rglRender_rec const*)>)
void std::__insertion_sort<__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglRender_rec const*, rglRender_rec const*)> >(__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglRender_rec const*, rglRender_rec const*)>)
rglRender_rec** std::__move_merge<__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, rglRender_rec**, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglRender_rec const*, rglRender_rec const*)> >(__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, rglRender_rec**, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglRender_rec const*, rglRender_rec const*)>)
__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > > std::__move_merge<rglRender_rec**, __gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglRender_rec const*, rglRender_rec const*)> >(rglRender_rec**, rglRender_rec**, rglRender_rec**, rglRender_rec**, __gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglRender_rec const*, rglRender_rec const*)>)
void std::__merge_sort_with_buffer<__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, rglRender_rec**, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglRender_rec const*, rglRender_rec const*)> >(__gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, __gnu_cxx::__normal_iterator<rglRender_rec**, std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > >, rglRender_rec**, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglRender_rec const*, rglRender_rec const*)>)
std::vector<rglTexture*, std::allocator<rglTexture*> >::_M_erase(__gnu_cxx::__normal_iterator<rglTexture**, std::vector<rglTexture*, std::allocator<rglTexture*> > >)
std::vector<rglMaterial*, std::allocator<rglMaterial*> >::_M_erase(__gnu_cxx::__normal_iterator<rglMaterial**, std::vector<rglMaterial*, std::allocator<rglMaterial*> > >)
std::vector<rglMesh*, std::allocator<rglMesh*> >::_M_default_append(unsigned long)
void std::vector<rglMesh*, std::allocator<rglMesh*> >::_M_emplace_back_aux<rglMesh*>(rglMesh*&&)
void std::vector<rglShader*, std::allocator<rglShader*> >::emplace_back<rglShader*>(rglShader*&&)
void std::__introsort_loop<__gnu_cxx::__normal_iterator<rglMesh**, std::vector<rglMesh*, std::allocator<rglMesh*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglMesh const*, rglMesh const*)> >(__gnu_cxx::__normal_iterator<rglMesh**, std::vector<rglMesh*, std::allocator<rglMesh*> > >, __gnu_cxx::__normal_iterator<rglMesh**, std::vector<rglMesh*, std::allocator<rglMesh*> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglMesh const*, rglMesh const*)>)
void std::__insertion_sort<__gnu_cxx::__normal_iterator<rglMesh**, std::vector<rglMesh*, std::allocator<rglMesh*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglMesh const*, rglMesh const*)> >(__gnu_cxx::__normal_iterator<rglMesh**, std::vector<rglMesh*, std::allocator<rglMesh*> > >, __gnu_cxx::__normal_iterator<rglMesh**, std::vector<rglMesh*, std::allocator<rglMesh*> > >, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglMesh const*, rglMesh const*)>)
rglResource_manager::delete_special_chunks(std::vector<rglResource*, std::allocator<rglResource*> >&, rglResource_type)
void std::__adjust_heap<__gnu_cxx::__normal_iterator<rglMesh**, std::vector<rglMesh*, std::allocator<rglMesh*> > >, long, rglMesh*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglMesh const*, rglMesh const*)> >(__gnu_cxx::__normal_iterator<rglMesh**, std::vector<rglMesh*, std::allocator<rglMesh*> > >, long, long, rglMesh*, __gnu_cxx::__ops::_Iter_comp_iter<bool (*)(rglMesh const*, rglMesh const*)>)
nv_dds::CDDSImage::clear()
nv_dds::CDDSImage::~CDDSImage()
nv_dds::CSurface::operator unsigned char*() const
nv_dds::CSurface::~CSurface()
nv_dds::CDDSImage::CDDSImage()
nv_dds::CDDSImage::load_from_file(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool)
rglTGA_loader::load_from_file(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >*)
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > >*)
hkpWorldCinfo::setupSolverInfo(hkpWorldCinfo::SolverType)
hkMemorySystem::FrameInfo::FrameInfo(int, int)
hkMemoryInitUtil::initFreeListLargeBlock(hkMemoryAllocator*, hkMemorySystem::FrameInfo const&, hkFreeListAllocator::Cinfo const*, hkFreeListMemorySystem::SetupFlags)
hkpConstraintInstance::hkpConstraintInstance(hkpEntity*, hkpEntity*, hkpConstraintData*, hkpConstraintInstance::ConstraintPriority)
rglPhysicsManager::get_havok_body_shapes(std::vector<hkpShape*, std::allocator<hkpShape*> >*, rglBody_part const*)
void std::vector<int, std::allocator<int> >::emplace_back<int>(int&&)
void std::vector<rglVec3, std::allocator<rglVec3> >::emplace_back<rglVec3>(rglVec3&&)
hkpConvexTransformShapeBase::hkpConvexTransformShapeBase(hkcdShapeType::ShapeTypeEnum, float, hkpConvexShape const*, hkpShapeContainer::ReferencePolicy)
void std::vector<rglParticle, std::allocator<rglParticle> >::_M_emplace_back_aux<rglParticle const&>(rglParticle const&)
std::_Deque_base<Control_stream_element, std::allocator<Control_stream_element> >::_M_initialize_map(unsigned long)
hkContainerHeapAllocator::Allocator::bufFree(void*, int)
std::vector<rglMesh*, std::allocator<rglMesh*> >::push_back(rglMesh* const&)
void std::__adjust_heap<__gnu_cxx::__normal_iterator<que_element*, std::vector<que_element, std::allocator<que_element> > >, long, que_element, __gnu_cxx::__ops::_Iter_comp_iter<std::less<que_element> > >(__gnu_cxx::__normal_iterator<que_element*, std::vector<que_element, std::allocator<que_element> > >, long, long, que_element, __gnu_cxx::__ops::_Iter_comp_iter<std::less<que_element> >)
void std::vector<que_element, std::allocator<que_element> >::_M_emplace_back_aux<que_element>(que_element&&)
void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int>(int&&)
std::vector<Server_info, std::allocator<Server_info> >::~vector()
void std::vector<unsigned int, std::allocator<unsigned int> >::_M_emplace_back_aux<unsigned int const&>(unsigned int const&)
std::vector<MPL_event, std::allocator<MPL_event> >::_M_erase(__gnu_cxx::__normal_iterator<MPL_event*, std::vector<MPL_event, std::allocator<MPL_event> > >, __gnu_cxx::__normal_iterator<MPL_event*, std::vector<MPL_event, std::allocator<MPL_event> > >)
void std::vector<MPL_event, std::allocator<MPL_event> >::_M_emplace_back_aux<MPL_event const&>(MPL_event const&)
std::vector<int, std::allocator<int> >::push_back(int const&)
void std::vector<Server_info, std::allocator<Server_info> >::emplace_back<Server_info>(Server_info&&)
std::vector<int, std::allocator<int> >::operator=(std::vector<int, std::allocator<int> > const&)
std::vector<unsigned int, std::allocator<unsigned int> >::_M_erase(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, __gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >)
void std::vector<Packet_contents_rec*, std::allocator<Packet_contents_rec*> >::_M_emplace_back_aux<Packet_contents_rec* const&>(Packet_contents_rec* const&)
neosmart::UnlockedWaitForEvent(neosmart::neosmart_event_t_*, unsigned long)
neosmart::WaitForEvent(neosmart::neosmart_event_t_*, unsigned long)
void std::vector<SteamWorkshopItem, std::allocator<SteamWorkshopItem> >::_M_emplace_back_aux<SteamWorkshopItem const&>(SteamWorkshopItem const&)
std::vector<rglBone_body, std::allocator<rglBone_body> >::operator=(std::vector<rglBone_body, std::allocator<rglBone_body> > const&)
void std::vector<rglBone_body*, std::allocator<rglBone_body*> >::emplace_back<rglBone_body*>(rglBone_body*&&)
std::vector<__gnu_cxx::_Hashtable_node<std::pair<int const, rglSymbol_data> >*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<int const, rglSymbol_data> >*> >::_M_fill_insert(__gnu_cxx::__normal_iterator<__gnu_cxx::_Hashtable_node<std::pair<int const, rglSymbol_data> >**, std::vector<__gnu_cxx::_Hashtable_node<std::pair<int const, rglSymbol_data> >*, std::allocator<__gnu_cxx::_Hashtable_node<std::pair<int const, rglSymbol_data> >*> > >, unsigned long, __gnu_cxx::_Hashtable_node<std::pair<int const, rglSymbol_data> >* const&)
std::vector<rglString, std::allocator<rglString> >::~vector()
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >*)
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> >*)
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> >*)
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> > >::_M_erase(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> >*)
std::vector<rglMeta_mesh*, std::allocator<rglMeta_mesh*> >::push_back(rglMeta_mesh* const&)
__gnu_cxx::__normal_iterator<rglMeta_mesh**, std::vector<rglMeta_mesh*, std::allocator<rglMeta_mesh*> > > std::__remove_if<__gnu_cxx::__normal_iterator<rglMeta_mesh**, std::vector<rglMeta_mesh*, std::allocator<rglMeta_mesh*> > >, __gnu_cxx::__ops::_Iter_equals_val<rglMeta_mesh* const> >(__gnu_cxx::__normal_iterator<rglMeta_mesh**, std::vector<rglMeta_mesh*, std::allocator<rglMeta_mesh*> > >, __gnu_cxx::__normal_iterator<rglMeta_mesh**, std::vector<rglMeta_mesh*, std::allocator<rglMeta_mesh*> > >, __gnu_cxx::__ops::_Iter_equals_val<rglMeta_mesh* const>)
std::vector<rglMeta_mesh*, std::allocator<rglMeta_mesh*> >::_M_erase(__gnu_cxx::__normal_iterator<rglMeta_mesh**, std::vector<rglMeta_mesh*, std::allocator<rglMeta_mesh*> > >, __gnu_cxx::__normal_iterator<rglMeta_mesh**, std::vector<rglMeta_mesh*, std::allocator<rglMeta_mesh*> > >)
std::vector<Party_stack, std::allocator<Party_stack> >::resize(unsigned long)
std::_Deque_base<int, std::allocator<int> >::~_Deque_base()
std::deque<int, std::allocator<int> >::pop_back()
__gnu_cxx::hashtable<std::pair<int const, rglSymbol_data>, int, __gnu_cxx::hash<int>, std::_Select1st<std::pair<int const, rglSymbol_data> >, std::equal_to<int>, std::allocator<rglSymbol_data> >::resize(unsigned long)
std::vector<rglSkeleton_bone_fix, std::allocator<rglSkeleton_bone_fix> >::~vector()
void std::vector<rglSkeleton_fix, std::allocator<rglSkeleton_fix> >::_M_emplace_back_aux<rglSkeleton_fix>(rglSkeleton_fix&&)
std::_Deque_base<int, std::allocator<int> >::_M_initialize_map(unsigned long)
std::vector<Mission_object, std::allocator<Mission_object> >::~vector()
void std::vector<rglWidget_base*, std::allocator<rglWidget_base*> >::emplace_back<rglWidget_base*>(rglWidget_base*&&)
std::vector<Server_info, std::allocator<Server_info> >::_M_erase(__gnu_cxx::__normal_iterator<Server_info*, std::vector<Server_info, std::allocator<Server_info> > >)
std::vector<int, std::allocator<int> >::resize(unsigned long)
std::vector<int, std::allocator<int> >::_M_erase(__gnu_cxx::__normal_iterator<int*, std::vector<int, std::allocator<int> > >)
void std::vector<rglManifold_face, std::allocator<rglManifold_face> >::_M_emplace_back_aux<rglManifold_face const&>(rglManifold_face const&)
void std::vector<Server_info, std::allocator<Server_info> >::_M_emplace_back_aux<Server_info const&>(Server_info const&)
std::vector<rglString, std::allocator<rglString> >::insert(__gnu_cxx::__normal_iterator<rglString const*, std::vector<rglString, std::allocator<rglString> > >, rglString const&)
rglString* std::__uninitialized_copy<false>::__uninit_copy<rglString*, rglString*>(rglString*, rglString*, rglString*)
std::vector<Vertex_map_rec_group, std::allocator<Vertex_map_rec_group> >::~vector()
Face_key_constraint* std::__uninitialized_default_n_1<true>::__uninit_default_n<Face_key_constraint*, unsigned long>(Face_key_constraint*, unsigned long)
void std::vector<Multiplayer_profile, std::allocator<Multiplayer_profile> >::emplace_back<Multiplayer_profile>(Multiplayer_profile&&)
void std::vector<rglMesh*, std::allocator<rglMesh*> >::_M_emplace_back_aux<rglMesh* const&>(rglMesh* const&)
std::vector<rglMesh_face, std::allocator<rglMesh_face> >::reserve(unsigned long)
std::vector<rglCorner, std::allocator<rglCorner> >::reserve(unsigned long)
std::vector<rglMesh_vertex, std::allocator<rglMesh_vertex> >::reserve(unsigned long)
void std::vector<rglHyperlink_value_types, std::allocator<rglHyperlink_value_types> >::emplace_back<rglHyperlink_value_types>(rglHyperlink_value_types&&)
rglFont::add_hypertext(rglString const&, float const&, rglVec2 const&, rglMesh&, unsigned int const&, unsigned int const&, unsigned int const&, float const&, float const&, unsigned int, int, std::vector<rglVec3, std::allocator<rglVec3> >&, std::vector<rglVec3, std::allocator<rglVec3> >&, std::vector<int, std::allocator<int> >&, std::vector<rglHyperlink_value_types, std::allocator<rglHyperlink_value_types> >&, std::vector<int, std::allocator<int> >&)
Presentation_container::init(rglPopup*, int, std::vector<Presentation_container*, std::allocator<Presentation_container*> >*)
std::vector<Missile, std::allocator<Missile> >::_M_erase(__gnu_cxx::__normal_iterator<Missile*, std::vector<Missile, std::allocator<Missile> > >, __gnu_cxx::__normal_iterator<Missile*, std::vector<Missile, std::allocator<Missile> > >)
void std::vector<Presentation_container*, std::allocator<Presentation_container*> >::emplace_back<Presentation_container*>(Presentation_container*&&)
std::vector<long long, std::allocator<long long> >::operator=(std::vector<long long, std::allocator<long long> > const&)
std::vector<Client_data_cell, std::allocator<Client_data_cell> >::_M_default_append(unsigned long)
void std::vector<rglString, std::allocator<rglString> >::_M_emplace_back_aux<rglString const&>(rglString const&)
void std::vector<Server_info, std::allocator<Server_info> >::_M_emplace_back_aux<Server_info>(Server_info&&)
void std::vector<Server_player_data_cell, std::allocator<Server_player_data_cell> >::_M_emplace_back_aux<Server_player_data_cell>(Server_player_data_cell&&)
std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rglMatrix_frame, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> > >::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, rglVec3, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> > >::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, float, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> > >::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::operator[](std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&)
void std::vector<Window_change_info, std::allocator<Window_change_info> >::emplace_back<Window_change_info>(Window_change_info&&)
void std::deque<int, std::allocator<int> >::emplace_back<int>(int&&)
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>&&, std::tuple<>&&)
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>&&, std::tuple<>&&)
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>&&, std::tuple<>&&)
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>&&, std::tuple<>&&)
void std::__adjust_heap<__gnu_cxx::__normal_iterator<rglAIque_element2*, std::vector<rglAIque_element2, std::allocator<rglAIque_element2> > >, long, rglAIque_element2, __gnu_cxx::__ops::_Iter_comp_iter<std::less<rglAIque_element2> > >(__gnu_cxx::__normal_iterator<rglAIque_element2*, std::vector<rglAIque_element2, std::allocator<rglAIque_element2> > >, long, long, rglAIque_element2, __gnu_cxx::__ops::_Iter_comp_iter<std::less<rglAIque_element2> >)
rglScene_map::get_entities_near_box(rglVec3 const&, rglVec3 const&, std::vector<rglEntity*, std::allocator<rglEntity*> >&) const
void std::__adjust_heap<__gnu_cxx::__normal_iterator<rglAIque_element*, std::vector<rglAIque_element, std::allocator<rglAIque_element> > >, long, rglAIque_element, __gnu_cxx::__ops::_Iter_comp_iter<std::less<rglAIque_element> > >(__gnu_cxx::__normal_iterator<rglAIque_element*, std::vector<rglAIque_element, std::allocator<rglAIque_element> > >, long, long, rglAIque_element, __gnu_cxx::__ops::_Iter_comp_iter<std::less<rglAIque_element> >)
void std::__push_heap<__gnu_cxx::__normal_iterator<rglAIque_element2*, std::vector<rglAIque_element2, std::allocator<rglAIque_element2> > >, long, rglAIque_element2, __gnu_cxx::__ops::_Iter_comp_val<std::less<rglAIque_element2> > >(__gnu_cxx::__normal_iterator<rglAIque_element2*, std::vector<rglAIque_element2, std::allocator<rglAIque_element2> > >, long, long, rglAIque_element2, __gnu_cxx::__ops::_Iter_comp_val<std::less<rglAIque_element2> >)
void std::__adjust_heap<__gnu_cxx::__normal_iterator<rglEntity**, std::vector<rglEntity*, std::allocator<rglEntity*> > >, long, rglEntity*, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<rglEntity**, std::vector<rglEntity*, std::allocator<rglEntity*> > >, long, long, rglEntity*, __gnu_cxx::__ops::_Iter_less_iter)
void std::__insertion_sort<__gnu_cxx::__normal_iterator<rglEntity**, std::vector<rglEntity*, std::allocator<rglEntity*> > >, __gnu_cxx::__ops::_Iter_less_iter>(__gnu_cxx::__normal_iterator<rglEntity**, std::vector<rglEntity*, std::allocator<rglEntity*> > >, __gnu_cxx::__normal_iterator<rglEntity**, std::vector<rglEntity*, std::allocator<rglEntity*> > >, __gnu_cxx::__ops::_Iter_less_iter)
std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >* std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::_M_copy<std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::_Reuse_or_alloc_node>(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > const*, std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >*, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, int> > >::_Reuse_or_alloc_node&)
std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> >* std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> > >::_M_copy<std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> > >::_Reuse_or_alloc_node>(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> > const*, std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> >*, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, float> > >::_Reuse_or_alloc_node&)
std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> >* std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> > >::_M_copy<std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> > >::_Reuse_or_alloc_node>(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> > const*, std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> >*, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglVec3> > >::_Reuse_or_alloc_node&)
std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> >* std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> > >::_M_copy<std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> > >::_Reuse_or_alloc_node>(std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> > const*, std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> >*, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, rglMatrix_frame> > >::_Reuse_or_alloc_node&)
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > > >::_M_get_insert_unique_pos(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > > >::_M_insert_<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > >&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > > >::_Alloc_node>(std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > >&, std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > > >::_Alloc_node&)
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > > >::find(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
void std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> >::_M_emplace_back_aux<GLSLConstantMap const&>(GLSLConstantMap const&)
TiXmlNode::TiXmlNode(TiXmlNode::NodeType)
nv_dds::CDDSImage::upload_texture2D(unsigned int, unsigned int)
nv_dds::CDDSImage::swap(void*, void*, unsigned int)
nv_dds::CDDSImage::flip_dxt5_alpha(nv_dds::DXT5AlphaBlock*)
std::_Rb_tree<unsigned char*, std::pair<unsigned char* const, int>, std::_Select1st<std::pair<unsigned char* const, int> >, std::less<unsigned char*>, std::allocator<std::pair<unsigned char* const, int> > >::_M_erase(std::_Rb_tree_node<std::pair<unsigned char* const, int> >*)
nv_dds::CSurface::create(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char const*)
std::_Deque_base<nv_dds::CSurface, std::allocator<nv_dds::CSurface> >::_M_initialize_map(unsigned long)
nv_dds::CSurface::operator=(nv_dds::CSurface const&)
std::deque<nv_dds::CSurface, std::allocator<nv_dds::CSurface> >::_M_destroy_data_aux(std::_Deque_iterator<nv_dds::CSurface, nv_dds::CSurface&, nv_dds::CSurface*>, std::_Deque_iterator<nv_dds::CSurface, nv_dds::CSurface&, nv_dds::CSurface*>)
nv_dds::CSurface::CSurface(nv_dds::CSurface const&)
std::deque<nv_dds::CSurface, std::allocator<nv_dds::CSurface> >::~deque()
nv_dds::CTexture::CTexture(nv_dds::CTexture const&)
nv_dds::CDDSImage::flip_texture(nv_dds::CTexture&)
nv_dds::CDDSImage::write_texture(nv_dds::CTexture const&, _IO_FILE*)
nv_dds::CTexture::~CTexture()
nv_dds::CTexture::CTexture()
std::_Rb_tree_iterator<std::pair<unsigned char* const, int> > std::_Rb_tree<unsigned char*, std::pair<unsigned char* const, int>, std::_Select1st<std::pair<unsigned char* const, int> >, std::less<unsigned char*>, std::allocator<std::pair<unsigned char* const, int> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<unsigned char* const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<unsigned char* const, int> >, std::piecewise_construct_t const&, std::tuple<unsigned char* const&>&&, std::tuple<>&&)
nv_dds::CTexture::operator=(nv_dds::CTexture const&)
nv_dds::CDDSImage::load_from_file_in_memory(unsigned char*, unsigned int, bool)
std::_Rb_tree<unsigned char*, std::pair<unsigned char* const, int>, std::_Select1st<std::pair<unsigned char* const, int> >, std::less<unsigned char*>, std::allocator<std::pair<unsigned char* const, int> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned char* const, int> >, unsigned char* const&)
std::_Rb_tree<unsigned char*, std::pair<unsigned char* const, int>, std::_Select1st<std::pair<unsigned char* const, int> >, std::less<unsigned char*>, std::allocator<std::pair<unsigned char* const, int> > >::_M_get_insert_unique_pos(unsigned char* const&)
hkClassMember::getClassMemberTypeProperties(hkClassMember::Type)
hkFileSystem::Iterator::nameAcceptable(char const*, char const*)
hkStackTracer::CallTree::removeNodeIfUnused(int)
hkStackTracer::CallTree::getFreeNode()
hkStackTracer::CallTree::getCallStack(int, unsigned long*, int) const
hkStackTracer::CallTree::insertCallStack(unsigned long const*, int)
hkVariantDataUtil::calcElementSize(hkClassMember::Type, hkClass const*)
hkVariantDataUtil::deleteArray(hkTypeInfoRegistry const*, hkClassMember::Type, hkClass const*, void*, int, int)
hkVariantDataUtil::newArray(hkTypeInfoRegistry const*, hkClassMember::Type, hkClass const*, void*, int, int)
hkVariantDataUtil::calcBasicElementSize(hkClassMember::Type, hkClass const*)
hkVariantDataUtil::convertTypeToInt32Array(hkClassMember::Type, void const*, int*, int)
hkVariantDataUtil::convertInt32ToTypeArray(int const*, hkClassMember::Type, void*, int)
hkVariantDataUtil::convertTypeToTypeArray(hkClassMember::Type, void const*, hkClassMember::Type, void*, int)
hkBufferedStreamReader::Buffer::~Buffer()
hkFreeList::addToSnapshot(hkMemorySnapshot&, hkEnum<hkMemorySnapshot::StatusBits, signed char>, int)
hkFreeListAllocator::Cinfo::findInfoIndex(unsigned long) const
hkFreeListAllocator::_construct(hkFreeListAllocator::Cinfo const*)
hkFreeList::calcNumBlocks(hkFreeList::Block const*)
void hkAlgorithm::quickSortRecursive<void*, hkAlgorithm::less<void*> >(void**, int, int, hkAlgorithm::less<void*>)
hkMemorySnapshot::addItem(int, hkEnum<hkMemorySnapshot::StatusBits, signed char>, void const*, int)
hkRecallAllocator::getMemoryStatistics(hkMemoryAllocator::MemoryStatistics&) const
hkThreadMemory::getMemoryStatistics(hkMemoryAllocator::MemoryStatistics&) const
hkLargeBlockAllocator::_unlinkLargeChunk(hkLargeBlockAllocator::MemTreeChunk*)
hkLargeBlockAllocator::_insertLargeChunk(hkLargeBlockAllocator::MemTreeChunk*, unsigned long)
hkLargeBlockAllocator::nextBlock(hkLargeBlockAllocator::Iterator&)
hkMonitorStreamAnalyzer::Node::Node(hkMonitorStreamAnalyzer::Node*, char const*, hkMonitorStreamAnalyzer::Node::NodeType)
hkMonitorStreamAnalyzer::Node::~Node()
hkMonitorStreamAnalyzer::findMaxTimerNameIndent(hkMonitorStreamAnalyzer::Node*, int, int, bool)
hkMonitorStreamAnalyzer::traverseCompleteTreeToFindTotalCallCounts(hkMonitorStreamAnalyzer::Node*, unsigned int)
hkMonitorStreamAnalyzer::getTimerLimits(hkArrayBase<hkMonitorStreamAnalyzer::Node*> const&, hkMonitorStreamAnalyzer::ThreadDrawInput const&, hkArray<hkArray<hkMonitorStreamFrameInfo, hkContainerHeapAllocator>, hkContainerHeapAllocator>&, float&, hkArray<float, hkContainerHeapAllocator>&)
hkMonitorStreamAnalyzer::Node::setTimers(hkMonitorStreamFrameInfo const&, hkMonitorStream::TimerCommand const&, hkMonitorStream::TimerCommand const&)
hkMonitorStreamAnalyzer::Node::setTimers(hkMonitorStreamFrameInfo const&, hkMonitorStream::MultiTimerCommand const&)
hkMonitorStream::readCommandUInt32(char const**, hkMonitorStream::CommandStreamConfig const&)
hkMonitorStream::readCommandString(char const**, hkMonitorStream::CommandStreamConfig const&)
hkMonitorStream::padCommand(char const**, hkMonitorStream::CommandStreamConfig const&)
hkMonitorStream::readCommandTimer(char const**, hkMonitorStream::CommandStreamConfig const&)
hkMonitorStreamAnalyzer::makeStatisticsTreeForSingleFrame(hkMonitorStream::CommandStreamConfig const&, char const*, char const*, hkMonitorStreamFrameInfo const&, char const*, bool)
hkMonitorStreamAnalyzer::writeStatisticsDetailsToTga(hkArrayBase<hkMonitorStreamAnalyzer::Node*> const&, hkMonitorStreamAnalyzer::ThreadDrawInput const&, hkArray<hkArray<hkMonitorStreamFrameInfo, hkContainerHeapAllocator>, hkContainerHeapAllocator>&, hkOstream&, hkMonitorStreamAnalyzer::SampleInfo*)
hkMonitorStreamAnalyzer::showCombinedThreadSummaryRec(hkOstream&, hkMonitorStreamAnalyzer::Node*, int, int, int, hkMonitorStreamAnalyzer::CombinedThreadSummaryOptions const&)
hkMonitorStreamAnalyzer::mergeTreesForCombinedThreadSummary(hkMonitorStreamAnalyzer::Node*, hkMonitorStreamAnalyzer::Node*, int, int, float)
hkMonitorStreamAnalyzer::showCombinedThreadSummaryForSingleFrame(hkMonitorStreamAnalyzer::Node*, int, int, hkOstream&, hkMonitorStreamAnalyzer::CombinedThreadSummaryOptions&)
hkStackTracer::CallTree::quit()
hkStackTracer::CallTree::~CallTree()
hkMultiThreadCheck::accessCheck(hkMultiThreadCheck::AccessType) const
hkAlgorithm::_sortList(hkAlgorithm::ListElement*)
hkFreeList::_calcBlockFree(hkFreeList::Block*)
hkcdPlanarSolid::hkcdPlanarSolid(hkcdPlanarSolid::NodeStorage*, hkHandle<unsigned int, 4294967295u, hkcdPlanarSolid::NodeIdDiscriminant>, hkcdPlanarGeometryPlanesCollection const*, hkcdPlanarEntityDebugger*)
void hkAlgorithm::quickSortRecursive<unsigned int, hkAlgorithm::less<unsigned int> >(unsigned int*, int, int, hkAlgorithm::less<unsigned int>)
hkcdPlanarGeometry::keepPolygons(hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator> const&)
hkcdPlanarSolid::buildBVHTree(hkcdPlanarGeometry&, hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator> const&, int, hkcdPlanarEntityDebugger*)
hkcdPlanarSolid::classifyPolygons(hkcdPlanarGeometry&, hkHandle<unsigned int, 4294967295u, hkcdPlanarSolid::NodeIdDiscriminant>, hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator> const&, hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator>&, hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator>&, hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator>&, hkcdPlanarSolid::ArrayMgr&) const
hkcdPlanarGeometryPrimitives::Collection<28>::getNextAllocatedAddress(unsigned int) const
hkcdPlanarGeometryPlanesCollection::getPlane(hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, hkcdPlanarGeometryPrimitives::Plane&) const
hkcdPlanarGeometry::approxClassify(hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkcdPlanarGeometryPrimitives::Plane const&) const
hkcdPlanarGeometryPrimitives::Plane::setOpposite(hkcdPlanarGeometryPrimitives::Plane const&)
hkcdPlanarGeometryPredicates::sameOrientation(hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&)
hkcdPlanarGeometryPrimitives::Collection<28>::getPrevAllocatedAddress(int) const
hkcdPlanarGeometryPrimitives::Collection<28>::blockFree(unsigned int, unsigned int)
hkcdPlanarGeometryPredicates::approximateIntersectionFast(hkcdPlanarGeometryPrimitives::Plane const (&) [3], hkVector4d&)
hkcdPlanarGeometryPredicates::computeIntersectionDeterminants(hkVector4d const&, hkVector4d const&, hkVector4d const&, hkcdMathErrorBoundsCalculator::Vector&)
hkcdMathErrorBoundsCalculator::Scalar::setDiv(hkcdMathErrorBoundsCalculator::Scalar const&, hkcdMathErrorBoundsCalculator::Scalar const&)
hkcdPlanarGeometryPredicates::computeIntersectionDeterminants(hkcdPlanarGeometryPrimitives::Plane const (&) [3], hkSimdInt<256>*, hkSimdInt<256>*, hkSimdInt<256>*, hkSimdInt<256>*)
hkArray<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, hkContainerHeapAllocator>::hkArray(int)
hkcdPlanarGeometryPredicates::computeExactDet4(hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkVector4dComparison&, hkVector4dComparison&)
hkcdPlanarGeometryPredicates::computeApproxDet3(hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkVector4dComparison&, hkVector4dComparison&)
hkcdPlanarGeometryPredicates::computeApproxDet4(hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkVector4dComparison&, hkVector4dComparison&)
hkArray<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, hkContainerHeapAllocator>::clearAndDeallocate()
hkcdPlanarGeometry::computePolygonApproxVertices(hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant> const&)
hkArray<hkcdPlanarGeometryPredicates::Orientation, hkContainerHeapAllocator>::clearAndDeallocate()
int hkAlgorithm::removeDuplicatesFromSortedList<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, hkAlgorithm::eq<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant> > >(hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>*, int, hkAlgorithm::eq<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant> >)
hkInt64Vector4Impl::Shr<(hkMathValueType)0>::shr(hkInt64Vector4 const&, hkInt64Vector4&, int)
hkcdPlanarGeometryPrimitives::Plane::getExactOffset(hkSimdInt<128>&) const
hkcdPlanarGeometryPrimitives::Plane::setExactOffset(hkSimdInt<128> const&)
hkcdMathErrorBoundsCalculator::Vector::setMul(hkcdMathErrorBoundsCalculator::Vector const&, hkcdMathErrorBoundsCalculator::Vector const&)
hkcdMathErrorBoundsCalculator::Vector::setSub(hkcdMathErrorBoundsCalculator::Vector const&, hkcdMathErrorBoundsCalculator::Vector const&)
hkcdPlanarGeometryPrimitives::Collection<28>::remove(unsigned int, unsigned int, unsigned int)
hkcdPlanarGeometryPrimitives::Collection<28>::insert(unsigned int)
hkcdPlanarGeometryPrimitives::Collection<28>::searchForSuitableBlock(unsigned int&, unsigned int&) const
hkcdPlanarGeometryPrimitives::Collection<28>::expandStorage(unsigned int)
hkcdPlanarGeometryPrimitives::Collection<28>::blockAlloc(unsigned int&)
hkcdPlanarGeometryPrimitives::Plane::computeApproxEquation()
hkcdPlanarGeometryWeldUtil::weldPlanes(hkArray<hkcdPlanarGeometryPrimitives::Plane, hkContainerHeapAllocator> const&, hkArray<hkcdPlanarGeometryPrimitives::Plane, hkContainerHeapAllocator>&, hkArray<int, hkContainerHeapAllocator>&)
hkcdPlanarGeometryPrimitives::Plane::getExactNormal(hkInt64Vector4&) const
hk1AxisSweep::AabbInt::set(hkAabb const&, int)
hk1AxisSweep::sortAabbs(hk1AxisSweep::AabbInt*, int)
hk1AxisSweep::collide(hk1AxisSweep::AabbInt const*, int, hkArray<hkKeyPair, hkContainerHeapAllocator>&)
hkcdBspImpl::Stack::push(hkcdBspImpl::StackEntry const&)
hkcdPlanarGeometry::approxClassify(hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>) const
hkcdPlanarGeometry::classify(hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>) const
hkcdPlanarGeometry::getAllPolygonsPlanes(hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator> const&, hkArray<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, hkContainerHeapAllocator>&, bool, bool) const
hkArrayBase<hkHandle<unsigned int, 4294967295u, hkcdPlanarSolid::NodeIdDiscriminant> >::_setSize(hkMemoryAllocator&, int, hkHandle<unsigned int, 4294967295u, hkcdPlanarSolid::NodeIdDiscriminant> const&)
hkcdPlanarSolid::ArrayMgr::allocArrayStorage(hkHandle<unsigned int, 4294967295u, hkcdPlanarSolid::ArrayIdDiscriminant>, hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant> const*, int)
hkArrayBase<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant> >::_append(hkMemoryAllocator&, hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant> const*, int)
hkArrayBase<hkArray<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, hkContainerHeapAllocator> >::_pushBack(hkMemoryAllocator&, hkArray<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, hkContainerHeapAllocator> const&)
hkArrayBase<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant> >::_append(hkMemoryAllocator&, hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant> const*, int)
hkcdPlanarGeometry::split(hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>&, hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>&)
hkcdPlanarSolid::NodeStorage::allocateAabb()
hkcdPlanarGeometry::computeAabb(hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator> const&, hkAabb&) const
hkcdBspImpl::AlignedPlaneFinder::findPlane(hkcdPlanarGeometryPrimitives::Plane const&)
hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator>::clearAndDeallocate()
void hkAlgorithm::quickSortRecursive<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, hkAlgorithm::less<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant> > >(hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>*, int, int, hkAlgorithm::less<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant> >)
hkArrayBase<hkArray<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, hkContainerHeapAllocator> >::_clearAndDeallocate(hkMemoryAllocator&)
hkcdConvexCellsTree3D::createPolygonFromFace(hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>, unsigned int, hkArray<unsigned int, hkContainerHeapAllocator>&) const
hkArrayBase<hkArray<hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>, hkContainerHeapAllocator> >::_setSize(hkMemoryAllocator&, int)
hkcdConvexCellsTree3D::Data::allocateNewEdge(unsigned int&)
hkcdConvexCellsTree3D::splitEdge(unsigned int, bool, hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, unsigned int&, unsigned int&, unsigned int&)
hkcdConvexCellsTree3D::updateConnectivity(hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>, unsigned int, unsigned int, unsigned int, unsigned int, int)
hkcdConvexCellsTree3D::Data::freeFace(unsigned int)
hkcdConvexCellsTree3D::splitCell(hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>, hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, unsigned long, hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>&, hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>&, bool)
hkcdPlanarGeometryPolygonCollection::alloc(hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, unsigned long, int)
hkLocalArray<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant> >::~hkLocalArray()
hkcdConvexCellsTree3D::createPolygonFromFace(hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>, unsigned int, hkcdPlanarGeometry&) const
hkcdPlanarGeometry::check2dIntersection(hkcdPlanarGeometry const&, hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant> const&, hkcdPlanarGeometry const&, hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant> const&)
int hkAlgorithm::differenceOfSortedLists<unsigned int, hkAlgorithm::less<unsigned int>, hkAlgorithm::eq<unsigned int> >(unsigned int const*, int, unsigned int const*, int, unsigned int*, hkAlgorithm::less<unsigned int>, hkAlgorithm::eq<unsigned int>)
hkcdNewCellsCollection::Cell::setSizes(unsigned int, unsigned int, unsigned int)
hkcdSimdTreeUtils::Build::IRefit::GetClusterAabb<hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs16>::operator()(unsigned int, hkAabb*) const
hkcdDynamicSimdTree::removeLeaf(int, hkcdDynamicSimdTree::ThreadContext*)
hkcdDynamicSimdTree::insertLeaf(int, hkAabb const&, int, hkcdDynamicSimdTree::ThreadContext*)
void hkcdSimdTreeUtils::Build::IRefit::_refitBranch<hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs16>(hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs16 const&, hkcdSimdTree::Node*, int, int)
void hkcdSimdTreeUtils::Build::IRefit::_refitBranch<hkcdSimdTreeUtils::Build::GetLeafAabbFromICustomRefit>(hkcdSimdTreeUtils::Build::GetLeafAabbFromICustomRefit const&, hkcdSimdTree::Node*, int, int)
void hkcdSimdTreeUtils::Build::IRefit::_refitNode<hkcdSimdTreeUtils::Build::GetLeafAabbFromICustomRefit>(hkcdSimdTreeUtils::Build::GetLeafAabbFromICustomRefit const&, hkcdSimdTree::Node const*, hkcdSimdTree::Node*)
void hkcdSimdTreeUtils::Build::IRefit::_refitBranch<hkcdSimdTreeUtils::Build::GetLeafAabbFromPoints>(hkcdSimdTreeUtils::Build::GetLeafAabbFromPoints const&, hkcdSimdTree::Node*, int, int)
void hkcdSimdTreeUtils::Build::IRefit::_refitNode<hkcdSimdTreeUtils::Build::GetLeafAabbFromPoints>(hkcdSimdTreeUtils::Build::GetLeafAabbFromPoints const&, hkcdSimdTree::Node const*, hkcdSimdTree::Node*)
void hkcdSimdTreeUtils::Build::IRefit::_refitBranch<hkcdSimdTreeUtils::Build::GetLeafAabbFromSpheres>(hkcdSimdTreeUtils::Build::GetLeafAabbFromSpheres const&, hkcdSimdTree::Node*, int, int)
void hkcdSimdTreeUtils::Build::IRefit::_refitNode<hkcdSimdTreeUtils::Build::GetLeafAabbFromSpheres>(hkcdSimdTreeUtils::Build::GetLeafAabbFromSpheres const&, hkcdSimdTree::Node const*, hkcdSimdTree::Node*)
void hkcdSimdTreeUtils::Build::IRefit::_refitBranch<hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs>(hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs const&, hkcdSimdTree::Node*, int, int)
void hkcdSimdTreeUtils::Build::IRefit::_refitNode<hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs>(hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs const&, hkcdSimdTree::Node const*, hkcdSimdTree::Node*)
void hkcdSimdTreeUtils::Build::IRefit::_refitNode<hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs16>(hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs16 const&, hkcdSimdTree::Node const*, hkcdSimdTree::Node*)
hkcdStaticTree::Codec3Axis::unpack(hkAabb const&, hkcdStaticTree::Codec3Axis const&, hkAabb&)
hkcdDynamicTree::DynamicStorage<0, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUint>::reserveNodes(int)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::rebuildBranchSAH(unsigned int, hkBool, int, int)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdDynamicTree::DefaultTree48Storage, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsWithEarlyExitWrapper<WrappedAabbQuery<hkcdDynamicTree::DefaultTree48Storage> > >(hkcdDynamicTree::DefaultTree48Storage const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsWithEarlyExitWrapper<WrappedAabbQuery<hkcdDynamicTree::DefaultTree48Storage> >&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdDynamicTree::DefaultTree48Storage, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<WrappedAabbHitsQuery<hkcdDynamicTree::DefaultTree48Storage> > >(hkcdDynamicTree::DefaultTree48Storage const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<WrappedAabbHitsQuery<hkcdDynamicTree::DefaultTree48Storage> >&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::binary<hkcdDynamicTree::DefaultTree48Storage, hkcdDynamicTree::DefaultTree48Storage, hkcdTreeQueriesStacks::Dynamic<64, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SlotPair<hkcdDynamicTree::DefaultTree48Storage, hkcdDynamicTree::DefaultTree48Storage> >, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AllPairsWrapper<WrappedAllPairsQuery<hkcdDynamicTree::DefaultTree48Storage> > >(bool, hkcdDynamicTree::DefaultTree48Storage const&, hkcdDynamicTree::DefaultTree48Storage const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SlotPair<hkcdDynamicTree::DefaultTree48Storage, hkcdDynamicTree::DefaultTree48Storage> >&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AllPairsWrapper<WrappedAllPairsQuery<hkcdDynamicTree::DefaultTree48Storage> >&, hkcdDynamicTree::DefaultTree48Storage::NodeContext const*, hkcdDynamicTree::DefaultTree48Storage::NodeContext const*)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdDynamicTree::DefaultTree48Storage, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastWrapper<WrappedRaycastQuery<hkcdDynamicTree::DefaultTree48Storage> > >(hkcdDynamicTree::DefaultTree48Storage const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastWrapper<WrappedRaycastQuery<hkcdDynamicTree::DefaultTree48Storage> >&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdDynamicTree::DefaultTree48Storage, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SphereCastWrapper<WrappedRaycastQuery<hkcdDynamicTree::DefaultTree48Storage> > >(hkcdDynamicTree::DefaultTree48Storage const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SphereCastWrapper<WrappedRaycastQuery<hkcdDynamicTree::DefaultTree48Storage> >&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdDynamicTree::DefaultTree48Storage, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ClosestFromPointWrapper<WrappedClosestPointQuery<hkcdDynamicTree::DefaultTree48Storage> > >(hkcdDynamicTree::DefaultTree48Storage const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ClosestFromPointWrapper<WrappedClosestPointQuery<hkcdDynamicTree::DefaultTree48Storage> >&)
hkcdStaticTree::Codec3Axis::pack(hkAabb const&, hkAabb const&, hkcdStaticTree::Codec3Axis&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdStaticTree::DefaultTreeStorage6, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage6>::Slot>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsWithEarlyExitWrapper<WrappedAabbQuery<hkcdStaticTree::DefaultTreeStorage6> > >(hkcdStaticTree::DefaultTreeStorage6 const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage6>::Slot>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsWithEarlyExitWrapper<WrappedAabbQuery<hkcdStaticTree::DefaultTreeStorage6> >&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdStaticTree::DefaultTreeStorage6, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage6>::Slot>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<WrappedAabbHitsQuery<hkcdStaticTree::DefaultTreeStorage6> > >(hkcdStaticTree::DefaultTreeStorage6 const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage6>::Slot>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<WrappedAabbHitsQuery<hkcdStaticTree::DefaultTreeStorage6> >&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdStaticTree::DefaultTreeStorage6, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage6>::Slot>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ClosestFromPointWrapper<WrappedClosestPointQuery<hkcdStaticTree::DefaultTreeStorage6> > >(hkcdStaticTree::DefaultTreeStorage6 const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage6>::Slot>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ClosestFromPointWrapper<WrappedClosestPointQuery<hkcdStaticTree::DefaultTreeStorage6> >&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::binary<hkcdStaticTree::DefaultTreeStorage6, hkcdStaticTree::DefaultTreeStorage6, hkcdTreeQueriesStacks::Dynamic<64, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SlotPair<hkcdStaticTree::DefaultTreeStorage6, hkcdStaticTree::DefaultTreeStorage6> >, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AllPairsWrapper<WrappedAllPairsQuery<hkcdStaticTree::DefaultTreeStorage6> > >(bool, hkcdStaticTree::DefaultTreeStorage6 const&, hkcdStaticTree::DefaultTreeStorage6 const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SlotPair<hkcdStaticTree::DefaultTreeStorage6, hkcdStaticTree::DefaultTreeStorage6> >&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AllPairsWrapper<WrappedAllPairsQuery<hkcdStaticTree::DefaultTreeStorage6> >&, hkcdStaticTree::DefaultTreeStorage6::NodeContext const*, hkcdStaticTree::DefaultTreeStorage6::NodeContext const*)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdStaticTree::DefaultTreeStorage6, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage6>::Slot>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastWrapper<WrappedRaycastQuery<hkcdStaticTree::DefaultTreeStorage6> > >(hkcdStaticTree::DefaultTreeStorage6 const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage6>::Slot>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastWrapper<WrappedRaycastQuery<hkcdStaticTree::DefaultTreeStorage6> >&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdStaticTree::DefaultTreeStorage6, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage6>::Slot>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SphereCastWrapper<WrappedRaycastQuery<hkcdStaticTree::DefaultTreeStorage6> > >(hkcdStaticTree::DefaultTreeStorage6 const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage6>::Slot>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SphereCastWrapper<WrappedRaycastQuery<hkcdStaticTree::DefaultTreeStorage6> >&)
hkVersionUtil::updateSingleVersion(hkArray<hkVariant, hkContainerHeapAllocator>&, hkObjectUpdateTracker&, hkVersionRegistry::UpdateDescription const&, hkClassNameRegistry const*)
hkCompat_hk403r1_hk410b1::calcQuantizedSize(unsigned int, hkCompat_hk403r1_hk410b1::DummyQuantizeDesc const&)
hkStringBuf::replace(char const*, char const*, hkStringBuf::ReplaceType)
hkVersionPatchManager::addPatch(hkVersionPatchManager::PatchInfo const*)
hkTypeManager::makePointer(hkTypeManager::Type*)
hkTypeManager::makeTuple(hkTypeManager::Type*, int)
hkClassPointerVtable::TypeInfoRegistry::TypeInfoRegistry(hkStringMap<hkClass const*, hkContainerHeapAllocator> const&)
hkPackfileWriter::setContents(void const*, hkClass const&, hkPackfileWriter::AddObjectListener*)
hkXmlPackfileWriter::save(hkStreamWriter*, hkPackfileWriter::Options const&)
hkVersionRegistry::getVersionPath(char const*, char const*, hkArray<hkVersionRegistry::Updater const*, hkContainerTempAllocator>&) const
hkBindingClassNameRegistry::hkBindingClassNameRegistry(hkVersionRegistry::ClassRename const*, hkClassNameRegistry const*)
hkStructureLayout::hkStructureLayout(hkStructureLayout::LayoutRules const&)
hkObjectCopier::hkObjectCopier(hkStructureLayout const&, hkStructureLayout const&, hkFlags<hkObjectCopier::ObjectCopierFlagBits, unsigned int>)
hkXmlParser::putBack(hkXmlParser::Node*)
hkXmlParser::StartElement::getAttribute(char const*, char const*) const
hkXmlParser::expandNode(hkXmlParser::StartElement*, hkTree<hkRefPtr<hkXmlParser::Node> >&, hkStreamReader*)
hkBinaryPackfileReader::SectionHeaderArray::operator[](int)
hkBinaryPackfileReader::BinaryPackfileData::untrackAndDestructObject(void*)
hkBinaryPackfileReader::BinaryPackfileData::freeSection(void*)
hkPackfileSectionHeader::getExports(void const*, hkArray<hkResource::Export, hkContainerHeapAllocator>&) const
hkBinaryPackfileReader::SectionHeaderArray::operator[](int) const
hkObjectInspector::walkPointers(void const*, hkClass const&, hkObjectInspector::ObjectListener*)
hkBinaryPackfileReader::findClassLocations(hkArray<hkBinaryPackfileReader::PackfileObject, hkContainerHeapAllocator>&) const
hkBinaryPackfileReader::SectionHeaderArray::init(void*, int)
hkBindingClassNameRegistry::ClassAllocationsTracker::deallocateEnums(hkInternalClassEnum*, int)
hkBindingClassNameRegistry::ClassAllocationsTracker::deallocateClass(hkClass*, hkPointerMap<hkInternalClassEnum*, unsigned int, hkContainerHeapAllocator>&)
hkBindingClassNameRegistry::ClassAllocationsTracker::UnresolvedClassPointerTracker::classPointedBy(hkClass const*, hkClass const**)
hkBindingClassNameRegistry::ClassAllocationsTracker::allocateEnums(hkInternalClassEnum const*, int)
hkBindingClassNameRegistry::ClassAllocationsTracker::allocateMembers(hkInternalClassMember const*, int, hkInternalClassEnum const*, hkInternalClassEnum const*, int, hkPointerMap<hkInternalClassEnum*, unsigned int, hkContainerHeapAllocator>&, hkBindingClassNameRegistry::ClassAllocationsTracker::UnresolvedClassPointerTracker&)
hkBindingClassNameRegistry::ClassAllocationsTracker::allocateDefaults(hkClass const&, void*)
hkBindingClassNameRegistry::ClassAllocationsTracker::UnresolvedClassPointerTracker::resolveClasses(hkPointerMap<hkClass const*, hkClass const*, hkContainerHeapAllocator>&)
hkBindingClassNameRegistry::ClassAllocationsTracker::UnresolvedClassPointerTracker::getSize() const
hkBindingClassNameRegistry::ClassAllocationsTracker::restoreClassHierarchy(hkClass const&, hkBindingClassNameRegistry const*, hkStringMap<char const*, hkContainerHeapAllocator> const&, hkStringMap<hkClass*, hkContainerHeapAllocator>&)
hkMeshPrimitiveUtil::calculateNumIndices(hkMeshSection::PrimitiveType, int)
hkReflect::Detail::typesEqual(hkClass const&, hkClass const&)
hkMeshPrimitiveUtil::appendTriangleIndices16(hkMeshSection::PrimitiveType, unsigned short const*, int, int, hkArray<unsigned short, hkContainerHeapAllocator>&)
hkMeshPrimitiveUtil::appendTriangleIndices32(hkMeshSection::PrimitiveType, unsigned int const*, int, int, hkArray<unsigned int, hkContainerHeapAllocator>&)
hkVertexFormat::findNextSubUsage(hkVertexFormat::ComponentUsage) const
hkMeshVertexBufferUtil::getElementIntArray(hkMeshVertexBuffer::LockedVertices const&, int, int*)
hkMeshVertexBufferUtil::setElementIntArray(hkMeshVertexBuffer::LockedVertices const&, int, int const*)
hkMeshVertexBufferUtil::getElementVectorArray(hkMeshVertexBuffer::LockedVertices::Buffer const&, float*, int)
hkMeshVertexBufferUtil::copy(hkMeshVertexBuffer::LockedVertices::Buffer const&, hkMeshVertexBuffer::LockedVertices::Buffer const&, int)
hkVertexFormat::addElement(hkVertexFormat::Element const&)
hkMeshVertexBufferUtil::transform(hkMeshVertexBuffer::LockedVertices::Buffer const&, hkMatrix4f const&, int, int)
hkMeshVertexBufferUtil::copy(hkMeshVertexBuffer::LockedVertices const&, hkMeshVertexBuffer::LockedVertices const&)
hkMeshVertexBufferUtil::isBufferDataEqual(hkMeshVertexBuffer::LockedVertices::Buffer const&, hkMeshVertexBuffer::LockedVertices::Buffer const&, hkSimdFloat32 const&)
hkVertexFormat::findElementIndex(hkVertexFormat::ComponentUsage, int) const
hkMeshVertexBufferUtil::convert(hkMeshVertexBuffer::LockedVertices::Buffer const&, hkMeshVertexBuffer::LockedVertices::Buffer const&, int)
hkMemoryMeshVertexBuffer::getLockedVerticesBuffer(int, hkMeshVertexBuffer::LockedVertices::Buffer&)
hkSkinnedMeshShape::BoneSection::BoneSection()
hkImage::Descriptor::getNumBitsPerPixel() const
hkImage::Descriptor::Descriptor()
hkImage::createImage(hkImage::Descriptor const&)
hkImage::getSizeOf(hkImage::DataType)
hkp3AxisSweep::beginOverlap(hkp3AxisSweep::hkpBpNode&, hkp3AxisSweep::hkpBpNode&, hkArray<hkpBroadPhaseHandlePair, hkContainerHeapAllocator>&)
hkp3AxisSweep::endOverlap(hkp3AxisSweep::hkpBpNode&, hkp3AxisSweep::hkpBpNode&, hkArray<hkpBroadPhaseHandlePair, hkContainerHeapAllocator>&)
hkp3AxisSweep::updateNodesAfterInsert(hkp3AxisSweep::hkpBpNode*, int, hkp3AxisSweep::hkpBpNode&)
hkRadixSort::sort16(hkRadixSort::SortData16*, int, hkRadixSort::SortData16*)
hkp3AxisSweep::collide1Axis(hkp3AxisSweep::hkpBpNode const*, int, hkArray<hkpBroadPhaseHandlePair, hkContainerHeapAllocator>&)
hkp3AxisSweep::collide1Axis(hkp3AxisSweep::hkpBpNode const*, int, hkp3AxisSweep::hkpBpNode const*, int, hkp3AxisSweep::MarkerHandling, hkArray<hkpBroadPhaseHandlePair, hkContainerHeapAllocator>&)
hkp3AxisSweep::setBitsBasedOnXInterval(int, int, hkp3AxisSweep::hkpBpNode const&, unsigned short, unsigned int*) const
hkp3AxisSweep::hkpBpAxis::insert(hkp3AxisSweep::hkpBpNode*, int, unsigned short, unsigned short, unsigned short&, unsigned short&)
hkp3AxisSweep::querySingleAabbAddObject(hkpBroadPhaseHandle*, int, unsigned int const*, hkp3AxisSweep::hkpBpNode&, hkArray<hkpBroadPhaseHandlePair, hkContainerHeapAllocator>&) const
hkp3AxisSweep::querySingleAabbRemoveObject(hkpBroadPhaseHandle*, int, unsigned int const*, hkp3AxisSweep::hkpBpNode&, hkArray<hkpBroadPhaseHandlePair, hkContainerHeapAllocator>&) const
hkp3AxisSweep::hkpBpAxis::find(hkp3AxisSweep::hkpBpEndPoint const*, hkp3AxisSweep::hkpBpEndPoint const*, unsigned short) const
hkp3AxisSweep::querySingleAabbSub(hkpBroadPhaseHandle*, unsigned int const*, hkp3AxisSweep::hkpBpNode&, hkp3AxisSweep::hkpBpQuerySingleType, hkArray<hkpBroadPhaseHandlePair, hkContainerHeapAllocator>*, hkArrayBase<hkp3AxisSweep::hkpBpNode const*>*, hkpBroadPhaseCastCollector*) const
hkp3AxisSweep::getAabbFromNode(hkp3AxisSweep::hkpBpNode const&, hkAabb&) const
void hkAlgorithm::quickSortRecursive<hkp3AxisSweep::hkpBpEndPoint, hkAlgorithm::less<hkp3AxisSweep::hkpBpEndPoint> >(hkp3AxisSweep::hkpBpEndPoint*, int, int, hkAlgorithm::less<hkp3AxisSweep::hkpBpEndPoint>)
hkp3AxisSweep::calcAabbCacheInternal(hkArrayBase<hkp3AxisSweep::hkpBpNode const*> const&, char*) const
hkp3AxisSweep::_querySingleAabb(hkAabb const&, hkp3AxisSweep::hkpBpQuerySingleType, hkArray<hkpBroadPhaseHandlePair, hkContainerHeapAllocator>*, hkArrayBase<hkp3AxisSweep::hkpBpNode const*>*, hkpBroadPhaseCastCollector*) const
int hkp3AxisSweep::hkpBpAxis::insertTail<0>(hkp3AxisSweep::hkpBpNode*, hkp3AxisSweep::hkpBpEndPoint*, int)
int hkp3AxisSweep::hkpBpAxis::insertTail<1>(hkp3AxisSweep::hkpBpNode*, hkp3AxisSweep::hkpBpEndPoint*, int)
int hkp3AxisSweep::hkpBpAxis::insertTail<2>(hkp3AxisSweep::hkpBpNode*, hkp3AxisSweep::hkpBpEndPoint*, int)
void hkAlgorithm::quickSortRecursive<ValueIntPair<unsigned short>, hkAlgorithm::less<ValueIntPair<unsigned short> > >(ValueIntPair<unsigned short>*, int, int, hkAlgorithm::less<ValueIntPair<unsigned short> >)
void hkAlgorithm::quickSortRecursive<hkpRootCdPoint, hkAlgorithm::less<hkpRootCdPoint> >(hkpRootCdPoint*, int, int, hkAlgorithm::less<hkpRootCdPoint>)
hkpBoxBoxCollisionDetection::isValidEdgeEdge(hkpBoxBoxCollisionDetection::hkpFeaturePointCache&) const
hkpBoxBoxCollisionDetection::findClosestPoint(hkpBoxBoxManifold&, hkpFeatureContactPoint&, hkpBoxBoxCollisionDetection::hkpFeaturePointCache&) const
hkLineSegmentUtil::closestLineSegLineSeg(hkVector4f const&, hkVector4f const&, hkVector4f const&, hkVector4f const&, hkLineSegmentUtil::ClosestLineSegLineSegResult&)
hkpCollideTriangleUtil::setupPointTriangleDistanceCache(hkVector4f const*, hkpCollideTriangleUtil::PointTriangleDistanceCache&)
hkpCollidable::BoundingVolumeData::BoundingVolumeData()
hkpListShape::hkpListShape(hkpShape const* const*, int, hkpShapeContainer::ReferencePolicy)
void hkAlgorithm::quickSortRecursive<hk1AxisSweep::AabbInt, hkAlgorithm::less<hk1AxisSweep::AabbInt> >(hk1AxisSweep::AabbInt*, int, int, hkAlgorithm::less<hk1AxisSweep::AabbInt>)
hkAabbUtil::initOffsetAabbInput(hkMotionState const*, hkAabbUtil::OffsetAabbInput&)
hk1AxisSweep::collide(hk1AxisSweep::AabbInt const*, int, hk1AxisSweep::AabbInt const*, int, hkKeyPair*, int, hkPadSpu<int>&)
void hkAlgorithm::quickSortRecursive<hkpShapeKeyPair, hkAlgorithm::less<hkpShapeKeyPair> >(hkpShapeKeyPair*, int, int, hkAlgorithm::less<hkpShapeKeyPair>)
hkLineSegmentUtil::closestPointLineSeg(hkVector4f const&, hkVector4f const&, hkVector4f const&, hkLineSegmentUtil::ClosestPointLineSegResult&)
hkpCollisionDispatcher::internalRegisterCollisionAgent(unsigned char (*) [35], int, hkcdShapeType::ShapeTypeEnum, hkcdShapeType::ShapeTypeEnum, hkcdShapeType::ShapeTypeEnum, hkcdShapeType::ShapeTypeEnum, hkpCollisionDispatcher::DebugEntry (*) [35][35], int)
hkpCollisionDispatcher::updateHasAlternateType(hkcdShapeType::ShapeTypeEnum, hkcdShapeType::ShapeTypeEnum, int)
hkpGsk::getClosestPoint(hkpGsk::GetClosesetPointInput const&, hkpGskCache&, hkVector4f&, hkVector4f&)
hkpMoppAabbCastVirtualMachine::aabbCast(hkpMoppAabbCastVirtualMachine::hkpAabbCastInput const&, hkpCdPointCollector&, hkpCdPointCollector*)
hkpMoppCompiler::setCostParams(hkpMoppCostFunction::hkpMoppSplitCostParams const&)
hkpMoppCompiler::setSplitParams(hkpMoppSplitter::hkpMoppSplitParams const&)
hkpCollideTriangleUtil::setupClosestPointTriangleCache(hkVector4f const*, hkpCollideTriangleUtil::ClosestPointTriangleCache&)
hkpCollideTriangleUtil::closestPointTriangle(hkVector4f const&, hkVector4f const*, hkpCollideTriangleUtil::ClosestPointTriangleCache const&, hkpCollideTriangleUtil::ClosestPointTriangleResult&, hkpFeatureOutput*)
hkpExtendedMeshShape::ShapesSubpart::~ShapesSubpart()
hkpStorageExtendedMeshShape::MeshSubpartStorage::MeshSubpartStorage(hkFinishLoadedObjectFlag)
hkpStorageExtendedMeshShape::ShapeSubpartStorage::ShapeSubpartStorage(hkFinishLoadedObjectFlag)
hkpStorageExtendedMeshShape::addTrianglesSubpart(hkpExtendedMeshShape::TrianglesSubpart const&)
hkpStorageExtendedMeshShape::addShapesSubpart(hkpExtendedMeshShape::ShapesSubpart const&)
hkpStorageMeshShape::addSubpart(hkpMeshShape::Subpart const&)
hkpCompressedMeshShape::Chunk::getNextIndex(int, int&) const
hkpCompressedMeshShape::Chunk::getTriangle(int, int, int, float, hkVector4f&, hkVector4f&, hkVector4f&) const
hkpCompressedMeshShape::ConvexPiece::getVertices(float, hkQsTransformf const&, hkArray<hkVector4f, hkContainerHeapAllocator>&) const
hkpConvexTransformShape::hkpConvexTransformShape(hkpConvexShape const*, hkTransformf const&, hkpShapeContainer::ReferencePolicy)
hkpExtendedMeshShape::calcAabbExtents(hkpExtendedMeshShape::TrianglesSubpart&, hkAabb&)
hkpExtendedMeshShape::calcAabbExtents(hkpExtendedMeshShape::ShapesSubpart const&, hkAabb&)
hkpExtendedMeshShape::ShapesSubpart::ShapesSubpart(hkFinishLoadedObjectFlag)
hkpExtendedMeshShape::_getNumChildShapesInShapesSubpart(hkpExtendedMeshShape::ShapesSubpart const&) const
hkcdRayCastTriangle::safeUsingDynamicTolerance(hkcdRay const&, hkVector4f const&, hkVector4f const&, hkVector4f const&, hkFlags<hkcdRayQueryFlags::Enum, unsigned int>, hkSimdFloat32&, hkVector4f&)
hkp6DofConstraintData::setAngularMotor(hkp6DofConstraintData::MotorIndex, hkpConstraintMotor*)
hkMapBase<hkpPairCollisionFilter::PairFilterKey, unsigned long, hkpPairCollisionFilter::PairFilterPointerMapOperations>::resizeTable(hkMemoryAllocator&, int)
hkpWorldOperationUtil::removeConstraintImmediately(hkpWorld*, hkpConstraintInstance*, hkpWorldOperationUtil::FireCallbacks)
hkpConstraintSolverSetup::subSolve(hkpConstraintSolverResources&, hkpConstraintSolverSetup::SolverMode)
hkArray<hkpToiResourceMgr::ConstraintViolationInfo, hkContainerHeapAllocator>::clearAndDeallocate()
hkpLinkedCollidable::getCollisionEntriesSorted(hkArray<hkpLinkedCollidable::CollisionEntry, hkContainerHeapAllocator>&) const
hkpCollidable::BoundingVolumeData::deallocate()
hkpCollidable::BoundingVolumeData::allocate(int)
void hkAlgorithm::quickSortRecursive<hkValueIndexPair, hkAlgorithm::less<hkValueIndexPair> >(hkValueIndexPair*, int, int, hkAlgorithm::less<hkValueIndexPair>)
hkJobQueue::addJob(hkJob&, hkJobQueue::JobPriority)
hkpContinuousSimulation::processAgentNnEntries(hkpAgentNnEntry* const*, int, hkpProcessCollisionInput const&, hkpSimulationIsland*, hkpContinuousSimulation::CollisionQualityOverride)
hkpMultiThreadedSimulation::processAgentNnEntries_oneInfo(hkpAgentNnEntry**, hkpProcessCollisionInput const&, hkpIslandsAgentEntriesInfo&, hkpContinuousSimulation::CollisionQualityOverride, hkpPostCollideJob*)
hkpMultiThreadedSimulation::processAgentNnEntries(hkpAgentNnEntry**, int, hkpProcessCollisionInput const&, hkpIslandsAgentEntriesInfo&, hkpContinuousSimulation::CollisionQualityOverride)
hkJobQueue::setWaitPolicy(hkJobQueue::WaitPolicy)
hkpWorldConstraintUtil::findModifier(hkpConstraintInstance*, hkpConstraintAtom::AtomType)
hkpWorldConstraintUtil::removeAndDeleteModifier(hkpConstraintInstance*, hkpConstraintOwner&, hkpConstraintAtom::AtomType)
hkpWorld::queueOperation(hkWorldOperation::BaseOperation const&)
void hkAlgorithm::quickSortRecursive<hkpSimpleShapePhantom::CollisionDetail, hkpSimpleShapePhantom::OrderByUid>(hkpSimpleShapePhantom::CollisionDetail*, int, int, hkpSimpleShapePhantom::OrderByUid)
hkpWorld::calcRequiredSolverBufferSize(hkWorldMemoryAvailableWatchDog::MemUsageInfo&)
hkpSimulation::collideEntitiesNarrowPhaseDiscrete(hkpEntity**, int, hkpProcessCollisionInput const&, hkpSimulation::FindContacts)
hkpSimpleCollisionResponse::solveSingleContact(hkContactPoint const&, float, hkpSimpleConstraintUtilCollideParams&, hkpMotion*, hkpMotion*, hkpDynamicsContactMgr*, hkpSimpleCollisionResponse::SolveSingleOutput&)
hkpWorldOperationUtil::addConstraintImmediately(hkpWorld*, hkpConstraintInstance*, hkpWorldOperationUtil::FireCallbacks)
hkpSimpleConstraintContactMgr::Factory::Factory(hkpWorld*)
hkpReportContactMgr::Factory::Factory(hkpWorld*)
hkpCollisionDispatcher::initCollisionQualityInfo(hkpCollisionDispatcher::InitCollisionQualityInfo&)
hkpRigidBody::createDynamicRigidMotion(hkpMotion::MotionType, hkVector4f const&, hkQuaternionf const&, float, hkMatrix3f const&, hkVector4f const&, float, float, hkpMaxSizeMotion*)
hkpWorldOperationUtil::removeAttachedAgentsConnectingTheEntityAndAFixedPartnerEntityPlus(hkpAgentNnTrack&, hkpEntity*, hkpAgentNnTrack&, hkpMotion::MotionType)
void hkAlgorithm::quickSortRecursive<hkpCollidable*, hkpAabbPhantom::OrderByUid>(hkpCollidable**, int, int, hkpAabbPhantom::OrderByUid)
hkpBreakableMultiMaterial::InverseMapping::InverseMapping()
hkpRigidBody::setMotionType(hkpMotion::MotionType, hkpEntityActivation, hkpUpdateCollisionFilterOnEntityMode)
void hkAlgorithm::quickSortRecursive<hkpCachingShapePhantom::CollisionDetail, hkpCachingShapePhantom::OrderByUid>(hkpCachingShapePhantom::CollisionDetail*, int, int, hkpCachingShapePhantom::OrderByUid)
hkJobQueue::finishJobAndGetNextJob(hkJobQueue::JobQueueEntry const*, hkJobQueue::JobQueueEntry&, hkJobQueue::WaitStatus)
hkJobQueue::addJob(hkJobQueue::JobQueueEntry&, hkJobQueue::JobPriority)
hkJobQueue::finishAddAndGetNextJob(hkJobType, hkJobQueue::JobPriority, hkJobQueue::JobQueueEntry&, hkJobQueue::WaitStatus)
hkJobQueue::getNextJob(hkJobQueue::JobQueueEntry&, hkJobQueue::WaitStatus)
void hkAlgorithm::quickSortRecursive<hkpEndOfStepCallbackUtil::NewCollision, hkAlgorithm::less<hkpEndOfStepCallbackUtil::NewCollision> >(hkpEndOfStepCallbackUtil::NewCollision*, int, int, hkAlgorithm::less<hkpEndOfStepCallbackUtil::NewCollision>)
hkpEndOfStepCallbackUtil::fireContactPointEventsForCollision(hkpSimpleConstraintContactMgr*, hkpContactListener*, hkpCollisionEvent::CallbackSource)
hkpEndOfStepCallbackUtil::Collision::operator==(hkpEndOfStepCallbackUtil::Collision const&) const
hkpConstraintData::getConstraintInfoUtil(hkpConstraintAtom const*, int, hkpConstraintData::ConstraintInfo&)
hkpConstraintInstance::setPriority(hkpConstraintInstance::ConstraintPriority)
hkpSimpleCollisionResponse::solveSingleContact2(hkpSimpleContactConstraintData*, hkContactPoint const&, hkpSimpleConstraintUtilCollideParams&, hkpRigidBody*, hkpRigidBody*, hkpVelocityAccumulator*, hkpVelocityAccumulator*, hkpSimpleCollisionResponse::SolveSingleOutput2&)
hkJacobianBuilder::build2LinearAndRhs(hkJacobianBuilder::build2LinearAndRhsInfo const&, hkp2Lin2AngJacobian*)
bool hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::build<hkpBvCompressedMeshShape_Internals::GeometryProvider>(hkcdStaticMeshTreeBase::BuildConfig const&, hkpBvCompressedMeshShape_Internals::GeometryProvider const&, hkcdStaticMeshTreeBase::BuildMapping&)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::compactIndices()
void hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::copyTo<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32> >(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>&) const
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::balance(int, unsigned long)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::rotateRight(unsigned long)
hkArray<hkcdDynamicTree::CodecRawUlong, hkContainerHeapAllocator>::expandBy(int)
hkcdDynamicTree::DynamicStorage<0, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong>::reserveNodes(int)
void hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::copyTo<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr> >(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>&) const
hkArrayBase<unsigned long>::copyFromArray(hkMemoryAllocator&, hkArrayBase<unsigned long> const&, hkTrait::TraitBool<true>)
hkArrayBase<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::SAHBin>::_trySetSize(hkMemoryAllocator&, int)
void hkAlgorithm::_explicitStackQuickSort<unsigned long, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::SAHBin::Sorter>(unsigned long*, int, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::SAHBin::Sorter)
hkArrayBase<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::SAHBin>::_clearAndDeallocate(hkMemoryAllocator&)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::nextRightNode(unsigned long, unsigned long) const
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::collectNodes(unsigned long, hkArray<unsigned long, hkContainerHeapAllocator>&) const
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::rebuildBranchSAH(unsigned long, hkBool, int, int)
hkpConvexTransformShape::hkpConvexTransformShape(hkpConvexShape const*, hkQsTransformf const&, hkpShapeContainer::ReferencePolicy)
void hkAlgorithm::quickSortRecursive<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::HalfEdge, hkAlgorithm::less<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::HalfEdge> >(hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::HalfEdge*, int, int, hkAlgorithm::less<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::HalfEdge>)
hkpBvCompressedMeshShape_Internals::GeometryProvider::getCustomPrimitiveInfos(int, hkcdStaticMeshTreeBase::BuildCustomInfos&) const
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::rebuildGlobalSAH(int, int, int)
hkLocalArray<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::DynamicTree*>::~hkLocalArray()
void hkAlgorithm::quickSortRecursive<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::Quad, hkAlgorithm::less<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::Quad> >(hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::Quad*, int, int, hkAlgorithm::less<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::Quad>)
void hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::SubTree::VertexCounter<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::BuildGeometryProvider<hkpBvCompressedMeshShape_Internals::GeometryProvider> >::append<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>, unsigned long>(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr> const*, unsigned long)
hkArrayBase<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::SubTree>::_pushBack(hkMemoryAllocator&, hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::SubTree const&)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::Tree()
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::detachBranch(unsigned long, unsigned long, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>&)
void hkAlgorithm::quickSortRecursive<int, hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::DataSorter>(int*, int, int, hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::DataSorter)
hkArray<hkcdDynamicTree::CodecRawUlong, hkContainerHeapAllocator>::clearAndDeallocate()
hkArray<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::RootToSectionData, hkContainerHeapAllocator>::clearAndDeallocate()
hkArray<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::VertexMap, hkContainerHeapAllocator>::clearAndDeallocate()
bool hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::Utilities::buildStep12<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::BuildGeometryProvider<hkpBvCompressedMeshShape_Internals::GeometryProvider> >(hkcdStaticMeshTreeBase::BuildConfig const&, hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::BuildGeometryProvider<hkpBvCompressedMeshShape_Internals::GeometryProvider>&, hkcdStaticMeshTreeBase::BuildMapping&, hkArray<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::Quad, hkContainerHeapAllocator>&, hkArray<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::SubTree, hkContainerHeapAllocator>&, hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::DynamicTree&)
bool hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::Utilities::buildStep3<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::BuildGeometryProvider<hkpBvCompressedMeshShape_Internals::GeometryProvider> >(hkcdStaticMeshTreeBase::BuildConfig const&, hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::Utilities::QuantizersInfos&, hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::BuildGeometryProvider<hkpBvCompressedMeshShape_Internals::GeometryProvider>&, hkcdStaticMeshTreeBase::BuildMapping&, hkArray<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::Quad, hkContainerHeapAllocator>&, hkArray<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::SubTree, hkContainerHeapAllocator>&, hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::DynamicTree&, hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>&)
hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::Decoder::decodePrimitive(int, hkVector4f*) const
hkpConstraintProjector::setPreset(hkpConstraintProjector::Preset)
hkcdWingedEdge::findVisibleTriangles(hkcdWingedEdge::Triangle*, hkVector4f const&, hkPadSpu<int>&, hkPadSpu<hkcdWingedEdge::Edge*>&)
hkcdWingedEdge::findTriangleNearestOrigin(hkcdWingedEdge::Triangle*)
hkpConvexPenetrationUtil::getPointForSimplex(hkVector4f const&, hkcdWingedEdge::Vertex&)
hkpConvexPenetrationUtil::findBestProjection(hkVector4f const&, hkVector4f const&, hkcdWingedEdge::Vertex&, hkSimdFloat32&)
hkpConvexPenetrationUtil::tryToExpandPolytope(hkcdWingedEdge&, hkcdWingedEdge::Triangle*, hkcdWingedEdge::Vertex*, hkpGskStatus&)
hkpConvexPenetrationUtil::convertResultToFeature(hkcdWingedEdge&, hkcdWingedEdge::Triangle*, hkpGskOut&)
hkcdWingedEdge::find2ClosestMultiTriangles(hkcdWingedEdge&, hkcdWingedEdge&, hkVector4f&, hkcdWingedEdge::Triangle*&, hkcdWingedEdge::Triangle*&)
hkpGsk::checkTriangleBoundaries(hkVector4f const&, hkVector4f*, hkpGsk::SupportTypes)
hkpMoppDefaultAssembler::updateParams(hkpMoppAssembler::hkpMoppAssemblerParams const&)
void hkAlgorithm::quickSortRecursive<hkpMoppCompilerPrimitive, hkAlgorithm::less<hkpMoppCompilerPrimitive> >(hkpMoppCompilerPrimitive*, int, int, hkAlgorithm::less<hkpMoppCompilerPrimitive>)
hkpMoppDefaultSplitter::findSplittingPlanePositions(hkpMoppBasicNode*, hkpMoppSplittingPlaneDirection const*, hkpMoppDefaultSplitter::hkpMoppPrimitiveArray const&, hkpMoppExtent const&, int)
hkpMoppDefaultSplitter::split(hkpMoppTreeInternalNode*, hkpMoppDefaultSplitter::hkpMoppPrimitiveArray const&, hkpMoppDefaultSplitter::hkpMoppDsSide, int)
hkpMoppLongRayVirtualMachine::queryRayOnTree(hkpMoppLongRayVirtualMachine::QueryInt const*, unsigned char const*, hkpMoppLongRayVirtualMachine::QueryFloat*, int)
hkpMoppUsingFloatAabbVirtualMachine<hkpMoppPlanesQueryInput, hkMoppPlanesQueryObject>::queryMoppTree(hkpMoppUsingFloatAabbVirtualMachine<hkpMoppPlanesQueryInput, hkMoppPlanesQueryObject>::hkpMoppUsingFloatAabbVirtualMachineQueryInt const*, unsigned char const*, hkpMoppUsingFloatAabbVirtualMachine<hkpMoppPlanesQueryInput, hkMoppPlanesQueryObject>::hkpMoppTempAabb&)
hkpMoppUsingFloatAabbVirtualMachine<hkpMoppPlanesQueryInput, hkMoppPlanesQueryObjectOptimized>::queryMoppTree(hkpMoppUsingFloatAabbVirtualMachine<hkpMoppPlanesQueryInput, hkMoppPlanesQueryObjectOptimized>::hkpMoppUsingFloatAabbVirtualMachineQueryInt const*, unsigned char const*, hkpMoppUsingFloatAabbVirtualMachine<hkpMoppPlanesQueryInput, hkMoppPlanesQueryObjectOptimized>::hkpMoppTempAabb&)
hkpMoppFindAllVirtualMachine::queryOnTree(hkpMoppFindAllVirtualMachine::hkpMoppFindAllVirtualMachineQuery const*, unsigned char const*)
hkpMoppFindAllVirtualMachine::queryOnTreeLeft(hkpMoppFindAllVirtualMachine::hkpMoppFindAllVirtualMachineQuery const*, unsigned char const*)
hkpMoppFindAllVirtualMachine::queryOnTreeRight(hkpMoppFindAllVirtualMachine::hkpMoppFindAllVirtualMachineQuery const*, unsigned char const*)
hkpMoppRayBundleVirtualMachine::queryRayOnTree(hkpMoppRayBundleVirtualMachine::QueryInt const*, unsigned char const*, hkpMoppRayBundleVirtualMachine::QueryBundle*, int)
hkpMoppSphereVirtualMachine::querySphereOnTree(hkpMoppSphereVirtualMachine::hkpMoppSphereVirtualMachineQuery const*, unsigned char const*)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdStaticTree::DefaultTreeStorage6, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage6>::Slot>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<hkpStaticCompoundShape_Internals::UnlimitedAabbQuery> >(hkcdStaticTree::DefaultTreeStorage6 const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage6>::Slot>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<hkpStaticCompoundShape_Internals::UnlimitedAabbQuery>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdStaticTree::DefaultTreeStorage6, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage6>::Slot>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsWithEarlyExitWrapper<hkpStaticCompoundShape_Internals::LimitedAabbQuery> >(hkcdStaticTree::DefaultTreeStorage6 const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage6>::Slot>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsWithEarlyExitWrapper<hkpStaticCompoundShape_Internals::LimitedAabbQuery>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdStaticTree::DefaultTreeStorage6, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage6>::Slot>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbCastWrapper<hkpStaticCompoundShape_Internals::AabbCastQuery> >(hkcdStaticTree::DefaultTreeStorage6 const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage6>::Slot>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbCastWrapper<hkpStaticCompoundShape_Internals::AabbCastQuery>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdStaticTree::DefaultTreeStorage6, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage6>::Slot>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastWrapper<hkpStaticCompoundShape_Internals::RayCastQuery> >(hkcdStaticTree::DefaultTreeStorage6 const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage6>::Slot>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastWrapper<hkpStaticCompoundShape_Internals::RayCastQuery>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpTreeBroadPhaseSpatialTree16, hkcdTreeQueriesStacks::Dynamic<64, unsigned short>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<hkpTreeBroadPhaseInternals::NewPairsQuery> >(hkpTreeBroadPhaseSpatialTree16 const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned short>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<hkpTreeBroadPhaseInternals::NewPairsQuery>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpTreeBroadPhaseSpatialTree16, hkcdTreeQueriesStacks::Dynamic<64, unsigned short>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<hkpTreeBroadPhaseInternals::AabbQuery> >(hkpTreeBroadPhaseSpatialTree16 const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned short>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<hkpTreeBroadPhaseInternals::AabbQuery>&)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::internalRemove(unsigned short, hkAabb const&)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::internalInsert(unsigned short, unsigned short, hkAabb const&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpTreeBroadPhaseSpatialTree16, hkcdTreeQueriesStacks::Dynamic<64, unsigned short>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::KineticAabbOverlapsWrapper<hkpTreeBroadPhaseInternals::UpdatePairsQuery> >(hkpTreeBroadPhaseSpatialTree16 const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned short>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::KineticAabbOverlapsWrapper<hkpTreeBroadPhaseInternals::UpdatePairsQuery>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpTreeBroadPhaseSpatialTree16, hkcdTreeQueriesStacks::Dynamic<64, unsigned short>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::CoherentKineticAabbOverlapsWrapper<hkpTreeBroadPhaseInternals::UpdatePairsQuery> >(hkpTreeBroadPhaseSpatialTree16 const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned short>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::CoherentKineticAabbOverlapsWrapper<hkpTreeBroadPhaseInternals::UpdatePairsQuery>&)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::update(unsigned short, hkAabb const&)
hkcdDynamicTree::DynamicStorage<0, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::Codec32>::reserveNodes(int)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::optimizeIncremental(int, int)
hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong>::releaseAll()
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::binary<hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> >, hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> >, hkcdTreeQueriesStacks::Dynamic<64, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SlotPair<hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> >, hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> > > >, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AllPairsWrapper<hkpTreeBroadPhaseInternals::InsertionQuery> >(bool, hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> > const&, hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> > const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SlotPair<hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> >, hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> > > >&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AllPairsWrapper<hkpTreeBroadPhaseInternals::InsertionQuery>&, hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> >::NodeContext const*, hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> >::NodeContext const*)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::binary<hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> >, hkpTreeBroadPhaseSpatialTree16, hkcdTreeQueriesStacks::Dynamic<64, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SlotPair<hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> >, hkpTreeBroadPhaseSpatialTree16> >, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AllPairsWrapper<hkpTreeBroadPhaseInternals::InsertionQuery> >(bool, hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> > const&, hkpTreeBroadPhaseSpatialTree16 const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SlotPair<hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> >, hkpTreeBroadPhaseSpatialTree16> >&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AllPairsWrapper<hkpTreeBroadPhaseInternals::InsertionQuery>&, hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> >::NodeContext const*, hkpTreeBroadPhaseSpatialTree16::NodeContext const*)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpTreeBroadPhaseSpatialTree16, hkcdTreeQueriesStacks::Dynamic<64, unsigned short>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbCastWrapper<hkpTreeBroadPhaseInternals::AabbCastQuery> >(hkpTreeBroadPhaseSpatialTree16 const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned short>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbCastWrapper<hkpTreeBroadPhaseInternals::AabbCastQuery>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpTreeBroadPhaseSpatialTree16, hkcdTreeQueriesStacks::Dynamic<64, unsigned short>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuery> >(hkpTreeBroadPhaseSpatialTree16 const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned short>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuery>&)
void hkAlgorithm::quickSortRecursive<hkVector4f, hkpTreeBroadPhaseInternals::DepthSort>(hkVector4f*, int, int, hkpTreeBroadPhaseInternals::DepthSort)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpTreeBroadPhaseSpatialTree16, hkcdTreeQueriesStacks::Dynamic<64, unsigned short>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuerySorted> >(hkpTreeBroadPhaseSpatialTree16 const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned short>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuerySorted>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpTreeBroadPhaseSpatialTree16, hkcdTreeQueriesStacks::Dynamic<64, unsigned short>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastWrapper<hkpTreeBroadPhaseInternals::RayCastQuery> >(hkpTreeBroadPhaseSpatialTree16 const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned short>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastWrapper<hkpTreeBroadPhaseInternals::RayCastQuery>&)
hkArray<hkcdDynamicTree::Codec32, hkContainerHeapAllocator>::expandBy(int)
hkcdTreeQueriesStacks::Dynamic<64, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SlotPair<hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> >, hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> > > >::push()
hkcdTreeQueriesStacks::Dynamic<64, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SlotPair<hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> >, hkpTreeBroadPhaseSpatialTree16> >::push()
hkArrayBase<unsigned short>::copyFromArray(hkMemoryAllocator&, hkArrayBase<unsigned short> const&, hkTrait::TraitBool<true>)
hkArrayBase<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::SAHBin>::_trySetSize(hkMemoryAllocator&, int)
void hkAlgorithm::_explicitStackQuickSort<unsigned short, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::SAHBin::Sorter>(unsigned short*, int, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::SAHBin::Sorter)
hkArrayBase<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::SAHBin>::_clearAndDeallocate(hkMemoryAllocator&)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::nextRightNode(unsigned short, unsigned short) const
unsigned char hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastBatchWrapper<hkpTreeBroadPhaseInternals::RayCastFanQuery>::processNode<hkpTreeBroadPhaseSpatialTree16, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::NodeContext>(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::NodeContext const&, unsigned char, int, unsigned char)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpTreeBroadPhaseSpatialTree16, hkcdTreeQueriesStacks::Dynamic<64, unsigned short>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastBatchWrapper<hkpTreeBroadPhaseInternals::RayCastFanQuery> >(hkpTreeBroadPhaseSpatialTree16 const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned short>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastBatchWrapper<hkpTreeBroadPhaseInternals::RayCastFanQuery>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::rayCastBatch<hkpTreeBroadPhaseSpatialTree16, hkpTreeBroadPhaseInternals::RayCastFanQuery>(hkpTreeBroadPhaseSpatialTree16 const&, hkcdRay const*, int, hkpTreeBroadPhaseInternals::RayCastFanQuery&)
unsigned int hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbCastWrapper<hkpTreeBroadPhaseInternals::AabbCastQuery>::processNode<hkpTreeBroadPhaseSpatialTree16, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::NodeContext>(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::NodeContext const&) const
int hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbCastWrapper<hkpTreeBroadPhaseInternals::AabbCastQuery>::processChildren<hkpTreeBroadPhaseSpatialTree16, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::NodeContext>(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::NodeContext const*)
void hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::collectLeavesWithCollector<hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuery> >(unsigned short, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuery>&) const
unsigned int hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuery>::processNode<hkpTreeBroadPhaseSpatialTree16, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::NodeContext>(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::NodeContext const&)
void hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::collectLeavesWithCollector<hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuerySorted> >(unsigned short, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuerySorted>&) const
unsigned int hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuerySorted>::processNode<hkpTreeBroadPhaseSpatialTree16, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::NodeContext>(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::NodeContext const&)
int hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastWrapper<hkpTreeBroadPhaseInternals::RayCastQuery>::processChildren<hkpTreeBroadPhaseSpatialTree16, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::NodeContext>(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::NodeContext const*)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpTreeBroadPhaseSpatialTree32, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<hkpTreeBroadPhaseInternals::NewPairsQuery> >(hkpTreeBroadPhaseSpatialTree32 const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<hkpTreeBroadPhaseInternals::NewPairsQuery>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpTreeBroadPhaseSpatialTree32, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbCastWrapper<hkpTreeBroadPhaseInternals::AabbCastQuery> >(hkpTreeBroadPhaseSpatialTree32 const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbCastWrapper<hkpTreeBroadPhaseInternals::AabbCastQuery>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpTreeBroadPhaseSpatialTree32, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<hkpTreeBroadPhaseInternals::AabbQuery> >(hkpTreeBroadPhaseSpatialTree32 const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<hkpTreeBroadPhaseInternals::AabbQuery>&)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::internalRemove(unsigned int, hkAabb const&)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::internalInsert(unsigned int, unsigned int, hkAabb const&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpTreeBroadPhaseSpatialTree32, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::KineticAabbOverlapsWrapper<hkpTreeBroadPhaseInternals::UpdatePairsQuery> >(hkpTreeBroadPhaseSpatialTree32 const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::KineticAabbOverlapsWrapper<hkpTreeBroadPhaseInternals::UpdatePairsQuery>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpTreeBroadPhaseSpatialTree32, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::CoherentKineticAabbOverlapsWrapper<hkpTreeBroadPhaseInternals::UpdatePairsQuery> >(hkpTreeBroadPhaseSpatialTree32 const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::CoherentKineticAabbOverlapsWrapper<hkpTreeBroadPhaseInternals::UpdatePairsQuery>&)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::update(unsigned int, hkAabb const&)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::optimizeIncremental(int, int)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::binary<hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> >, hkpTreeBroadPhaseSpatialTree32, hkcdTreeQueriesStacks::Dynamic<64, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SlotPair<hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> >, hkpTreeBroadPhaseSpatialTree32> >, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AllPairsWrapper<hkpTreeBroadPhaseInternals::InsertionQuery> >(bool, hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> > const&, hkpTreeBroadPhaseSpatialTree32 const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SlotPair<hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> >, hkpTreeBroadPhaseSpatialTree32> >&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AllPairsWrapper<hkpTreeBroadPhaseInternals::InsertionQuery>&, hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> >::NodeContext const*, hkpTreeBroadPhaseSpatialTree32::NodeContext const*)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpTreeBroadPhaseSpatialTree32, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuerySorted> >(hkpTreeBroadPhaseSpatialTree32 const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuerySorted>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpTreeBroadPhaseSpatialTree32, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastBatchWrapper<hkpTreeBroadPhaseInternals::RayCastFanQuery> >(hkpTreeBroadPhaseSpatialTree32 const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastBatchWrapper<hkpTreeBroadPhaseInternals::RayCastFanQuery>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpTreeBroadPhaseSpatialTree32, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastWrapper<hkpTreeBroadPhaseInternals::RayCastQuery> >(hkpTreeBroadPhaseSpatialTree32 const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastWrapper<hkpTreeBroadPhaseInternals::RayCastQuery>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpTreeBroadPhaseSpatialTree32, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuery> >(hkpTreeBroadPhaseSpatialTree32 const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuery>&)
hkcdTreeQueriesStacks::Dynamic<64, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SlotPair<hkcdDynamicTree::Tree<hkcdDynamicTree::InplaceStorage<8, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong> >, hkpTreeBroadPhaseSpatialTree32> >::push()
void hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::collectLeavesWithCollector<hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuerySorted> >(unsigned int, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuerySorted>&) const
unsigned int hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuerySorted>::processNode<hkpTreeBroadPhaseSpatialTree32, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::NodeContext>(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::NodeContext const&)
unsigned char hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastBatchWrapper<hkpTreeBroadPhaseInternals::RayCastFanQuery>::processNode<hkpTreeBroadPhaseSpatialTree32, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::NodeContext>(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::NodeContext const&, unsigned char, int, unsigned char)
void hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::collectLeavesWithCollector<hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuery> >(unsigned int, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuery>&) const
unsigned int hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuery>::processNode<hkpTreeBroadPhaseSpatialTree32, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::NodeContext>(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::NodeContext const&)
hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::Decoder::getPrimitiveData(int) const
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpBvCompressedMeshShapeTree, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage5>::Slot>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbCastWrapper<hkpBvCompressedMeshShape_Internals::AabbCastQuery> >(hkpBvCompressedMeshShapeTree const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage5>::Slot>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbCastWrapper<hkpBvCompressedMeshShape_Internals::AabbCastQuery>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpBvCompressedMeshShapeTree, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage5>::Slot>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<hkpBvCompressedMeshShape_Internals::AabbOverlaps> >(hkpBvCompressedMeshShapeTree const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage5>::Slot>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<hkpBvCompressedMeshShape_Internals::AabbOverlaps>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpBvCompressedMeshShapeTree, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage5>::Slot>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<hkpBvCompressedMeshShape_Internals::AabbOverlapsWithMaxHits> >(hkpBvCompressedMeshShapeTree const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage5>::Slot>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<hkpBvCompressedMeshShape_Internals::AabbOverlapsWithMaxHits>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkpBvCompressedMeshShapeTree, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage5>::Slot>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastWrapper<hkpBvCompressedMeshShape_Internals::RayCastQuery> >(hkpBvCompressedMeshShapeTree const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage5>::Slot>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastWrapper<hkpBvCompressedMeshShape_Internals::RayCastQuery>&)
hkpBvCompressedMeshShapeGc::appendCustomPrimitiveToGeometry(hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::Decoder const&, int, hkGeometry&) const
hkcdGsk::rayCast(hkcdVertex const*, int, hkcdGsk::RayCastInput const&, hkcdGsk::RayCastOutput&)
hkpBvCompressedMeshShape_Internals::RayCastQuery::processLeaf(hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage4>::NodeContext const&, hkcdRay&)
hkgpConvexHull::generateGeometry(hkgpConvexHull::Inputs, hkGeometry&, int, bool) const
hkgpConvexHull::BuildConfig::BuildConfig()
hkgpConvexHull::build(hkVector4f const*, int, hkgpConvexHull::BuildConfig const&)
hkpMoppKDopGeometriesVirtualMachine::queryMoppKDopGeometriesRecurse(hkpMoppKDopGeometriesVirtualMachine::hkpMoppKDopGeometriesVirtualMachineQuery const*, unsigned char const*)
hkpShapeKeyTable::Block::~Block()
hkpShapeKeyTable::Block::Block()
hkpSaveContactPointsUtil::loadContactPoints(hkpSaveContactPointsUtil::LoadPointsInput const&, hkpPhysicsSystemWithContacts*, hkpWorld*)
hkpSaveContactPointsUtil::serializeEntry(hkpAgentEntry const*, hkBool, hkpProcessCollisionInput const*, int&, hkpSerializedAgentNnEntry::SerializedAgentType&, hkpAgent1nTrack const*&, hkpSerializedTrack1nInfo&)
hkpSaveContactPointsUtil::serializeCollisionEntry(hkpSaveContactPointsUtil::SavePointsInput const&, hkpAgentNnEntry const*, hkpProcessCollisionInput const*, hkpSerializedAgentNnEntry&)
hkpSaveContactPointsUtil::destroyOldEntry(hkpSerializedAgentNnEntry::SerializedAgentType, hkpProcessCollisionInput const*, hkpDynamicsContactMgr*, hkpConstraintOwner*, hkpAgentNnEntry*)
hkpTriggerVolume::bodyOrderForQueues(hkpTriggerVolume::EventInfo const&, hkpTriggerVolume::EventInfo const&)
hkpVehicleDefaultSimulation::applyAerodynamicDrag(hkpVehicleInstance const&, hkpVehicleAerodynamics::AerodynamicsDragOutput const&, hkpVehicleFrictionSolverParams&, float)
hkpVehicleInstance::WheelInfo::init()
hkpVehicleInstance::updateWheels(float, hkpVehicleWheelCollide::CollisionDetectionWheelOutput const*)
hkpVehicleInstance::updateDriverInput(float, hkpVehicleDriverInput::FilteredDriverInputOutput&)
hkpVehicleInstance::updateSteering(float, hkpVehicleDriverInput::FilteredDriverInputOutput const&)
hkpVehicleInstance::updateTransmission(float, hkpVehicleTransmission::TransmissionOutput&)
hkpVehicleInstance::updateEngine(float, hkpVehicleDriverInput::FilteredDriverInputOutput const&, hkpVehicleTransmission::TransmissionOutput const&)
hkpVehicleInstance::updateBrake(float, hkpVehicleDriverInput::FilteredDriverInputOutput const&, hkpVehicleBrake::WheelBreakingOutput&)
hkpVehicleInstance::updateSuspension(float, hkpVehicleWheelCollide::CollisionDetectionWheelOutput const*, hkArray<float, hkContainerHeapAllocator>&)
hkpVehicleInstance::updateAerodynamics(float, hkpVehicleAerodynamics::AerodynamicsDragOutput&)
hkpVehicleInstance::updateComponents(hkStepInfo const&, hkpVehicleWheelCollide::CollisionDetectionWheelOutput const*, hkpVehicleAerodynamics::AerodynamicsDragOutput&, hkArray<float, hkContainerHeapAllocator>&, hkArray<float, hkContainerHeapAllocator>&)
hkpVehicleInstance::simulateVehicle(hkStepInfo const&, hkpVehicleAerodynamics::AerodynamicsDragOutput const&, hkArray<float, hkContainerHeapAllocator> const&, hkArray<float, hkContainerHeapAllocator> const&, hkpVehicleJobResults*)
hkpVehicleInstance::stepVehicleUsingWheelCollideOutput(hkStepInfo const&, hkpVehicleWheelCollide::CollisionDetectionWheelOutput const*)
hkpWheelFrictionConstraintData::init(hkpWheelFrictionConstraintAtom::Axle*, float)
hkxVertexBuffer::VertexData::clear()
hkxVertexBuffer::getVertexDataPtr(hkxVertexDescription::ElementDecl const&)
hkxVertexBuffer::getVertexDataPtr(hkxVertexDescription::ElementDecl const&) const
hkTypeManager::copyType(hkTypeManager::Type*)
hkTypeManager::Type::findTerminal()
hkTypeManager::Type::getTypeName() const
StructArrayImplementation::StructArrayImplementation(hkDataWorldDict*, hkTypeManager::Type*, hkDataClassDict const*, int)
hkTypeManager::Type::getTupleSize() const
hkTypeManager::removeClass(hkTypeManager::Type*)
hkDataWorldDict::ObjectTracker::untrackClass(hkDataClassDict*)
hkDataWorldDict::ObjectTracker::~ObjectTracker()
hkTypeManager::Type::isEqual(hkTypeManager::Type const*) const
StructArrayImplementation::_addMember(hkDataClassDict::MemberInfo const&, int)
hkDataWorldDict::ObjectTracker::removeClassContent(hkDataClassDict*)
hkVariantDataUtil::calcElementSize(hkClassMember::Type, hkClassMember::Type, hkClass const*, int)
hkVariantDataUtil::setArraySize(hkTypeInfoRegistry const*, void*, hkClassMember::Type, hkClass const*, int)
hkDataObjectUtil::getBasicType(hkTypeManager&, hkClassMember::Type, char const*)
hkDataObjectUtil::getTypeFromMemberTypeClassName(hkTypeManager&, hkClassMember::Type, hkClassMember::Type, char const*, int)
hkMapBase<hkDataObject_Handle, Copier::LiveObjectInfo, hkMapOperations<hkDataObject_Handle> >::resizeTable(hkMemoryAllocator&, int)
hkDataObjectToNative::allocateObject(hkDataObject const&, hkDataObjectToNative::CopyInfoOut&)
hkDataObjectToNative::fillNativeMembers(void*, hkDataObject const&, hkDataObjectToNative::CopyInfoOut&)
hkSerializeMultiMap<hkDataObject_Handle, Copier::PointerPatch, hkMap<hkDataObject_Handle, int, hkMapOperations<hkDataObject_Handle>, hkContainerHeapAllocator> >::insert(hkDataObject_Handle, Copier::PointerPatch const&)
hkDataClass::getCinfo(hkDataClass::Cinfo&) const
hkObjectInspector::getPointers(void const*, hkClass const&, hkArray<hkObjectInspector::Pointer, hkContainerTempAllocator>&)
hkDeepCopier::deepCopy(void const*, hkClass const&, hkPointerMap<void const*, void*, hkContainerHeapAllocator>*, hkVtableClassRegistry*, hkTypeInfoRegistry*, hkFlags<hkObjectCopier::ObjectCopierFlagBits, unsigned int>)
hkPlatformObjectWriter::Cache::get(hkClass const*, hkStructureLayout const&)
hkOffsetOnlyStreamWriter::seek(int, hkStreamWriter::SeekWhence)
hkXmlParser::nextNode(hkXmlParser::Node**, hkStreamReader*)
hkTypeManager::Type::_isEqual(hkTypeManager::Type const*, hkTypeManager::Type const*)
hkTypeManager::Type::_equals(hkTypeManager::Type const&) const
hkTypeManager::Type::calcHash() const
hkTypeManager::makeArray(hkTypeManager::Type*)
hkTypeManager::replaceParent(hkTypeManager::Type*, hkTypeManager::Type*)
hkTypeManager::getTerminalLegacyType(hkTypeManager::Type*, char const**)
hkVersionPatchManager::UidFromClassVersion::~UidFromClassVersion()
hkVersionPatchManager::UidFromClassVersion::get(char const*, int) const
hkVersionPatchManager::preparePatches(hkDataWorld&, hkVersionPatchManager::ClassWrapper*, hkArray<hkVersionPatchManager::PatchInfo const*, hkContainerHeapAllocator>&) const
hkResult hkDataObjectToNative::fillNativeSimpleMember<hkDataArray_Value>(void*, hkClassMember::Type, hkDataArray_Value const&, hkClass const*, unsigned int, hkDataObjectToNative::CopyInfoOut&)
hkResult hkDataObjectToNative::fillNativeSimpleMember<hkDataObject_Value>(void*, hkClassMember::Type, hkDataObject_Value const&, hkClass const*, unsigned int, hkDataObjectToNative::CopyInfoOut&)
hkContentPredicate::findPredicate(hkEnum<hkContentPredicate::PredicateIdEnum, unsigned short>)
hkRadixSort::sort32(hkRadixSort::SortData32*, int, hkRadixSort::SortData32*)
hkJobQueue::unlockQueue(hkJobQueue::DynamicData*)
hkJobQueue::releaseWaitingThreads(hkJobQueue::DynamicData*)
hkJobQueue::checkQueueAndReleaseOneWaitingThread(int, hkJobQueue::DynamicData*)
hkcdGskBase::handlePenetration(hkcdGskBase::ShapeInterface const*, void const*, void const*, hkTransformf const&, hkPadSpu<int>&, hkPadSpu<int>&, hkcdGsk::GetClosestPointOutput&, hkVector4f*)
bool hkcdGskImpl<hkcdGskBase::RayCastShapeInterface<hkcdGsk_Vector4Shape> >::linearCast<hkcdGskBase::RayCastShapeInterface<hkcdGsk_Vector4Shape> >(hkcdGskBase::RayCastShapeInterface<hkcdGsk_Vector4Shape> const*, void const*, void const*, hkcdGsk::LinearCastInput const&, hkcdGskBase::RayCastShapeInterface<hkcdGsk_Vector4Shape>*, hkSimdFloat32&, hkVector4f&)
hkcdConvexPenetrationUtil::findBestProjection(hkVector4f const&, hkVector4f const&, hkcdWingedEdge::Vertex&)
hkcdConvexPenetrationUtil::getPointForSimplex(hkVector4f const&, hkcdWingedEdge::Vertex*)
hkcdWingedEdge::Triangle::calculateTriangleData()
hkGeometryUtils::Node::Edge::Edge(hkGeometryUtils::Node::Edge const&)
hkGeometryUtils::Node::Edge::operator=(hkGeometryUtils::Node::Edge const&)
hk1AxisSweep::sortAabbs(hk1AxisSweep::AabbInt*, int, hkArrayBase<hkRadixSort::SortData32>&, hkArrayBase<hk1AxisSweep::AabbInt>&)
hkGeometryUtils::_weldVertices(hkGeometry&, float, hkBool, hkArray<int, hkContainerHeapAllocator>&, hkArray<int, hkContainerHeapAllocator>&, hkArray<hkVector4f, hkContainerHeapAllocator>&, hkArrayBase<hk1AxisSweep::AabbInt>&, hkArrayBase<hkRadixSort::SortData32>&, hkArrayBase<hk1AxisSweep::AabbInt>&)
void hkAlgorithm::quickSortRecursive<weldVerticesVirtualNs::VertexRef, hkAlgorithm::less<weldVerticesVirtualNs::VertexRef> >(weldVerticesVirtualNs::VertexRef*, int, int, hkAlgorithm::less<weldVerticesVirtualNs::VertexRef>)
hkGeometryUtils::Node::Node(unsigned int)
hkGeometryUtils::Node::Node(hkGeometryUtils::Node const&)
hkGeometryUtils::Node::Edge::hasTriangleIgnoreWinding(hkGeometryUtils::Node::Triangle const&, int&)
hkGeometryUtils::Node::Triangle::Triangle(unsigned int, unsigned int, unsigned int)
hkGeometryUtils::Node::addEdge(unsigned int, hkGeometryUtils::Node::Triangle const&, unsigned int, bool)
hkGeometryUtils::Node::findEdge(unsigned int)
hkGeometryUtils::Node::Edge::hasTriangleSameWinding(hkGeometryUtils::Node::Triangle const&, int&)
hkgpConvexHull::build(hkStridedVertices const&, hkgpConvexHull::BuildConfig const&)
hkGeometryProcessing::SurfaceSampler::addElement(hkVector4f const&, hkVector4f const&, hkVector4f const&, int)
void hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::insert<hkAabb>(hkAabb const*, int, int)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsWithEarlyExitWrapper<hkGeometryProcessingInternals::TJunctionsQuery> >(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32> const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned int>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsWithEarlyExitWrapper<hkGeometryProcessingInternals::TJunctionsQuery>&)
hkgpAbstractMesh<hkgpIndexedMeshDefinitions::Edge, hkgpIndexedMeshDefinitions::Vertex, hkgpIndexedMeshDefinitions::Triangle, hkContainerHeapAllocator>::EdgeIterator::next()
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::compactIndices()
hkgpConvexHull::buildPlanar(hkStridedVertices const&, hkVector4f const&, hkgpConvexHull::BuildConfig const&)
hkgpConvexHull::getSourcePosition(hkgpConvexHull::Vertex const*) const
void hkgpConvexHullImpl::buildIndices<hkgpConvexHullImpl::PositionAsTransform>()
hkgpConvexHull::getIndex(hkgpConvexHull::Vertex const*) const
hkgpConvexHull::getNext(hkgpConvexHull::Vertex const*) const
hkgpConvexHull::getPlaneIndex(hkgpConvexHull::Triangle const*) const
hkgpConvexHull::getNext(hkgpConvexHull::Triangle const*) const
hkgpConvexHull::fetchPositions(hkgpConvexHull::Inputs, hkArray<hkVector4f, hkContainerHeapAllocator>&) const
hkgpConvexHull::getVertex(hkgpConvexHull::Triangle const*, int) const
hkgpConvexHull::buildFromDiscs(hkVector4f const*, hkSphere*, int, hkgpConvexHull::BuildConfig const&)
hkBitFieldBase<hkBitFieldStorage<hkArray<unsigned int, hkContainerHeapAllocator> > >::hkBitFieldBase(int, hkBitFieldValue::Initialized)
hkgpConvexHull::getPlaneEquation(hkgpConvexHull::Triangle const*) const
hkgpConvexHull::buildFromPlanes(hkVector4f const*, int, hkgpConvexHull::BuildConfig const&)
hkResult hkgpConvexHullImpl::buildMassProperties<hkgpConvexHullImpl::PositionAsTransform>()
hkgpAbstractMesh<hkgpConvexHullImpl::Edge, hkgpConvexHullImpl::Vertex, hkgpConvexHullImpl::Triangle, hkContainerHeapAllocator>::~hkgpAbstractMesh()
hkgpAbstractMesh<hkgpConvexHullImpl::Edge, hkgpConvexHullImpl::Vertex, hkgpConvexHullImpl::Triangle, hkContainerHeapAllocator>::EdgeIterator::next()
void hkAlgorithm::quickSortRecursive<hkgpConvexHullImpl::SortedTriangle, hkAlgorithm::less<hkgpConvexHullImpl::SortedTriangle> >(hkgpConvexHullImpl::SortedTriangle*, int, int, hkAlgorithm::less<hkgpConvexHullImpl::SortedTriangle>)
hkVector4f hkgpConvexHullImpl::planeFromTriangle<hkgpConvexHullImpl::PositionAsTransform>(hkgpConvexHullImpl::Triangle const*, bool) const
void hkAlgorithm::quickSortRecursive<hkgpConvexHullImpl::Triangle*, hkgpConvexHullImpl::Triangle::SortByPlaneId>(hkgpConvexHullImpl::Triangle**, int, int, hkgpConvexHullImpl::Triangle::SortByPlaneId)
void hkAlgorithm::quickSortRecursive<hkgpConvexHullImpl::SortedEdge, hkAlgorithm::less<hkgpConvexHullImpl::SortedEdge> >(hkgpConvexHullImpl::SortedEdge*, int, int, hkAlgorithm::less<hkgpConvexHullImpl::SortedEdge>)
void hkgpConvexHullImpl::fetchWorldPositions<hkgpConvexHullImpl::PositionAsSource>(hkArray<hkVector4f, hkContainerHeapAllocator>&) const
void hkAlgorithm::quickSortRecursive<hkgpConvexHullImpl::Vertex, hkAlgorithm::less<hkgpConvexHullImpl::Vertex> >(hkgpConvexHullImpl::Vertex*, int, int, hkAlgorithm::less<hkgpConvexHullImpl::Vertex>)
hkgpConvexHullImpl::clearHorizon(hkgpConvexHullImpl::Vertex const&, hkgpConvexHullImpl::Edge const&, hkgpConvexHullImpl::Edge&)
hkgpConvexHullImpl::insert(hkgpConvexHullImpl::Vertex const&)
hkgpIndexedMesh::appendTriangle(hkGeometry::Triangle const&, unsigned long)
hkgpIndexedMesh::removeTriangle(hkgpIndexedMeshDefinitions::Triangle*, hkgpIndexedMesh::ITriangleRemoval*)
hkgpIndexedMesh::getReachableRing(hkgpIndexedMeshDefinitions::Edge, hkArray<hkgpIndexedMeshDefinitions::Triangle*, hkContainerHeapAllocator>&) const
void hkAlgorithm::quickSortRecursive<hkgpIndexedMeshDefinitions::Triangle*, hkgpIndexedMeshInternals::TriangleSortLess>(hkgpIndexedMeshDefinitions::Triangle**, int, int, hkgpIndexedMeshInternals::TriangleSortLess)
void hkAlgorithm::quickSortRecursive<hkgpIndexedMeshDefinitions::Triangle*, hkgpIndexedMesh::SortByAscendingReferences>(hkgpIndexedMeshDefinitions::Triangle**, int, int, hkgpIndexedMesh::SortByAscendingReferences)
hkgpIndexedMesh::growStrip(hkgpIndexedMeshDefinitions::Edge, hkArray<hkgpIndexedMeshDefinitions::Edge, hkContainerHeapAllocator>&, hkgpIndexedMesh::StripConfig const&) const
hkgpAbstractMesh<hkgpMeshBase::Edge, hkgpMeshBase::Vertex, hkgpMeshBase::Triangle, hkContainerHeapAllocator>::~hkgpAbstractMesh()
hkgpMesh::updatePlane(hkgpMeshBase::Triangle*)
hkgpMesh::bindEdgeList(hkArray<hkgpMeshBase::Edge, hkContainerHeapAllocator>&)
hkLocalArray<hkgpMeshBase::Triangle*>::~hkLocalArray()
hkgpMesh::getTwiceArea(hkgpMeshBase::Triangle const*)
hkArrayBase<hkGeometry::Triangle>::_expandBy(hkMemoryAllocator&, int)
hkgpTopology::Edge<hkgpMeshBase::Edge, hkgpMeshBase::Vertex, hkgpMeshBase::Triangle, hkgpMeshBase::Vertex*>::isMaster() const
hkgpAbstractMesh<hkgpMeshBase::Edge, hkgpMeshBase::Vertex, hkgpMeshBase::Triangle, hkContainerHeapAllocator>::EdgeIterator::next()
hkgpMesh::computeQEM(hkgpMeshBase::Edge)
void hkAlgorithm::quickSortRecursive<hkgpMeshBase::Triangle*, hkgpMesh::SortByArea>(hkgpMeshBase::Triangle**, int, int, hkgpMesh::SortByArea)
hkArrayBase<hkgpMeshBase::Edge>::_pushBack(hkMemoryAllocator&, hkgpMeshBase::Edge const&)
hkArrayBase<hkgpMeshBase::Triangle*>::_pushBack(hkMemoryAllocator&, hkgpMeshBase::Triangle* const&)
hkgpTopology::Edge<hkgpMeshBase::Edge, hkgpMeshBase::Vertex, hkgpMeshBase::Triangle, hkgpMeshBase::Vertex*>::bindSides() const
hkGeometryProcessing::PoolAllocator<hkgpMeshBase::Triangle, 32, hkContainerHeapAllocator>::releasePool(hkGeometryProcessing::PoolAllocator<hkgpMeshBase::Triangle, 32, hkContainerHeapAllocator>::Pool*)
hkgpMesh::setPlane(hkgpMeshBase::Triangle const*, hkVector4f&, bool)
hkgpMesh::collapseEdge(hkgpMeshBase::Edge, bool)
hkgpMesh::removeTriangle(hkgpMeshBase::Triangle*)
hkArray<hkgpMeshBase::Edge, hkContainerHeapAllocator>::clearAndDeallocate()
hkGeometryProcessing::PoolAllocator<hkgpMeshBase::Triangle, 32, hkContainerHeapAllocator>::allocate(hkgpMeshBase::Triangle const&)
hkgpTopology::Edge<hkgpMeshBase::Edge, hkgpMeshBase::Vertex, hkgpMeshBase::Triangle, hkgpMeshBase::Vertex*>::null()
hkGeometryProcessing::PoolAllocator<hkgpMeshBase::Vertex, 32, hkContainerHeapAllocator>::allocateNewPool()
hkGeometryProcessing::PoolAllocator<hkgpMeshBase::Triangle, 32, hkContainerHeapAllocator>::allocateNewPool()
hkgpMesh::tetrahedronVolume6(hkgpMeshBase::Edge)
hkGeometryProcessing::HashTable<hkgpMesh::SingleEdge, hkContainerHeapAllocator>::insert(int, hkgpMesh::SingleEdge const&)
hkArrayBase<hkArray<hkgpMeshInternals::VertexPointer, hkContainerHeapAllocator> >::_clearAndDeallocate(hkMemoryAllocator&)
hkArray<hkgpMeshBase::Triangle*, hkContainerHeapAllocator>::clearAndDeallocate()
hkArrayBase<hkArray<hkgpMesh::SingleEdge, hkContainerHeapAllocator> >::_clearAndDeallocate(hkMemoryAllocator&)
hkArrayBase<hkgpMesh::SingleEdge>::_expandOne(hkMemoryAllocator&)
hkgpAbstractMeshDefinitions::List<hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex, hkgpAbstractMeshDefinitions::List<hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex, hkgpTriangulatorBase::VertexBase, hkGeometryProcessing::PoolAllocator<hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex, 32, hkContainerHeapAllocator> >::Item, hkGeometryProcessing::PoolAllocator<hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex, 32, hkContainerHeapAllocator> >::allocate()
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::newTriangle(hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex*, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex*, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex*)
hkgpMesh::splitEdge(hkgpMeshBase::Edge, hkgpMeshBase::Vertex*, bool)
hkgpMesh::locate(hkVector4f const&, hkgpMesh::Location&, hkBool) const
void hkgpJobQueue::appendJob<hkgpMeshInternals::ConcaveEdgeJob::Handle>(hkgpMeshInternals::ConcaveEdgeJob::Handle const&, int)
hkArrayBase<hkgpMeshInternals::Segment>::_pushBack(hkMemoryAllocator&, hkgpMeshInternals::Segment const&)
hkArray<hkPointerMap<hkgpMeshBase::Vertex*, hkgpMeshBase::Vertex*, hkContainerHeapAllocator>*, hkContainerHeapAllocator>::clearAndDeallocate()
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::binary<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>, hkcdTreeQueriesStacks::Dynamic<64, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SlotPair<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr> > >, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AllPairsWrapper<TrianglePairCollector> >(bool, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr> const&, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr> const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SlotPair<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr> > >&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AllPairsWrapper<TrianglePairCollector>&, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::NodeContext const*, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::NodeContext const*)
hkLocalArray<hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SlotPair<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr> > >::~hkLocalArray()
void hkAlgorithm::quickSort<hkgpMesh*, hkgpMeshInternals::CompareSetSize>(hkgpMesh**, int, hkgpMeshInternals::CompareSetSize)
hkgpMesh::simplify(hkgpMesh::SimplifyConfig const&)
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::insertVertex(int, int, bool, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Location const&, bool)
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::insertEdge(int, int, int, int, bool, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator> const*)
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::conformEdges()
hkArrayBase<hkArray<hkgpMeshBase::Edge, hkContainerHeapAllocator> >::_clearAndDeallocate(hkMemoryAllocator&)
hkArray<hkgpMeshBase::Vertex*, hkContainerHeapAllocator>::clearAndDeallocate()
hkArray<hkgpMeshInternals::Ring::Segment, hkContainerHeapAllocator>::clearAndDeallocate()
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::hkgpTriangulatorType()
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::setDomainFromPoints(hkStridedVertices const&, hkMatrix4f const&, bool, bool)
hkgpTopology::Edge<hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Triangle, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex*>::null()
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::getEdgeDataOrientation() const
hkGeometryProcessing::PoolAllocator<hkgpMeshBase::Triangle, 32, hkContainerHeapAllocator>::allocate()
hkgpTopology::Edge<hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Triangle, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex*>::isMaster() const
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge::getAndClearConstraint() const
hkgpTopology::Edge<hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Triangle, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex*>::flip() const
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge::setConstrained() const
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::~hkgpTriangulatorType()
hkGeometryProcessing::PoolAllocator<hkgpMeshBase::Vertex, 32, hkContainerHeapAllocator>::releasePool(hkGeometryProcessing::PoolAllocator<hkgpMeshBase::Vertex, 32, hkContainerHeapAllocator>::Pool*)
hkArray<hkgpMeshBase::Triangle*, hkContainerHeapAllocator>::pushBack(hkgpMeshBase::Triangle* const&)
hkgpTopology::Edge<hkgpMeshBase::Edge, hkgpMeshBase::Vertex, hkgpMeshBase::Triangle, hkgpMeshBase::Vertex*>::canBind(hkgpTopology::Edge<hkgpMeshBase::Edge, hkgpMeshBase::Vertex, hkgpMeshBase::Triangle, hkgpMeshBase::Vertex*> const&) const
void hkAlgorithm::quickSortRecursive<hkgpMesh*, hkgpMeshInternals::CompareSetSize>(hkgpMesh**, int, int, hkgpMeshInternals::CompareSetSize)
IConvexOverlapImpl::ShapeInterface::getSupportingVertices(void const*, hkVector4f const&, void const*, hkTransformf const&, hkcdVertex*, hkcdVertex*, hkVector4f*) const
hkArrayBase<hkArray<hkgpMesh::SingleEdge, hkContainerHeapAllocator> >::_setSize(hkMemoryAllocator&, int)
hkArrayBase<hkArray<hkgpMeshInternals::VertexPointer, hkContainerHeapAllocator> >::_setSize(hkMemoryAllocator&, int)
CollideShapeTriangle::processLeaf(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::NodeContext const&)
hkgpMeshInternals::TriangleOverlap::processLeaf(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::NodeContext const&)
hkcdTreeQueriesStacks::Dynamic<64, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::SlotPair<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr> > >::push()
hkArrayBase<hkArray<hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>::EdgeDataBox, hkContainerHeapAllocator> >::_clearAndDeallocate(hkMemoryAllocator&)
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::setRoot(hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Triangle*)
hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>::reset()
hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>::~SparseEdgeDataPolicy()
hkGeometryProcessing::PoolAllocator<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, 32, hkContainerHeapAllocator>::release(hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>*)
hkGeometryProcessing::HashTable<hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>::EdgeDataBox, hkContainerHeapAllocator>::remove(int, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>::EdgeDataBox const&)
hkArrayBase<hkArray<hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>::EdgeDataBox, hkContainerHeapAllocator> >::_setSize(hkMemoryAllocator&, int)
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::locateVertex(hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge const&, int, int) const
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge::flip() const
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::newVertex(int, int, unsigned int)
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::newTriangleNoRoot(hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex*, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex*, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex*)
hkArray<hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge, hkContainerHeapAllocator>::reserve(int)
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::flushConform()
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::locateExistingVertex(hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge const&, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex const*) const
hkgpTriangulatorBase::EdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator> >::EdgeDataState::~EdgeDataState()
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::locateExistingEdge(hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge const&, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex const*, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex const*) const
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::checkOrientation(int, int, int, int)
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge::isConstrained() const
void hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>::setEdgeData<hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge>(hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge const&, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator> const&)
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::conformEdge(hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge const&)
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::orientation(hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge const&, int, int)
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge::canFlip() const
hkArray<hkgpMeshInternals::Segment, hkContainerHeapAllocator>::expandOne()
hkgpMeshInternals::Segment::operator=(hkgpMeshInternals::Segment const&)
hkgpMesh::checkOverlap(hkgpMesh::IConvexOverlap::IConvexShape*, float, bool) const
hkgpCgoInternal::collapseEdge(hkgpCgoInternal::EdgeInfo*)
hkgpCgoInternal::analyze(hkArray<hkgpCgo::ClusterData, hkContainerHeapAllocator>&) const
hkgpCgoInternal::processVertex(hkgpCgoInternal::ProcessConfig const&, hkVector4f const&, hkgpCgoInternal::ProcessedVertex&) const
hkgpCgoInternal::solveVertex(hkgpCgoInternal::ProcessConfig&, bool, hkVector4f const&) const
hkgpCgoInternal::updateEdge(hkgpCgoInternal::ProcessConfig&, hkgpCgoInternal::EdgeInfo*)
hkgpCgoInternal::getEdgeInfo(hkgpIndexedMeshDefinitions::Edge) const
hkgpCgoInternal::invalidateEdgeInfo(hkgpCgoInternal::EdgeInfo*)
hkgpCgoInternal::setEdgeInfo(hkgpIndexedMeshDefinitions::Edge, hkgpCgoInternal::EdgeInfo*)
hkgpCgoInternal::removeEdgeInfoFromInvalidQueue(hkgpCgoInternal::EdgeInfo*)
void hkAlgorithm::quickSortRecursive<hkgpCgoInternal::HTriangle, hkAlgorithm::less<hkgpCgoInternal::HTriangle> >(hkgpCgoInternal::HTriangle*, int, int, hkAlgorithm::less<hkgpCgoInternal::HTriangle>)
void hkAlgorithm::quickSortRecursive<hkgpCgo::ClusterData, hkAlgorithm::less<hkgpCgo::ClusterData> >(hkgpCgo::ClusterData*, int, int, hkAlgorithm::less<hkgpCgo::ClusterData>)
void hkAlgorithm::quickSortRecursive<float, hkAlgorithm::less<float> >(float*, int, int, hkAlgorithm::less<float>)
hkgpCgoInternal::updatePlane(hkgpIndexedMeshDefinitions::Triangle const*)
hkgpIndexedMesh::collapseEdge(hkgpIndexedMeshDefinitions::Edge, hkgpIndexedMeshDefinitions::Edge*, hkgpIndexedMesh::IEdgeCollapse*)
hkgpCgoInternal::flipEdge(hkgpCgoInternal::EdgeInfo*)
void hkAlgorithm::quickSortRecursive<hkgpCgoInternal::Set, hkAlgorithm::greater<hkgpCgoInternal::Set> >(hkgpCgoInternal::Set*, int, int, hkAlgorithm::greater<hkgpCgoInternal::Set>)
void hkAlgorithm::quickSortRecursive<hkEntry, hkAlgorithm::less<hkEntry> >(hkEntry*, int, int, hkAlgorithm::less<hkEntry>)
hkpMeshWeldingUtility::calcBitcodeForTriangleEdge(hkpBvTreeShape const*, hkpTriangleShape const*, unsigned int, int, hkpMeshWeldingUtility::WindingConsistency, short&)
hkpMeshWeldingUtility::computeWeldingInfoMultiShape(hkTransformf const&, hkpShapeCollection*, hkpWeldingUtility::WeldingType, hkArray<hkpMeshWeldingUtility::ShapeInfo, hkContainerHeapAllocator>&, bool, bool)
hkp6DofConstraintData::getAngularMotor(hkp6DofConstraintData::MotorIndex) const
hkpRagdollConstraintData::getMotor(hkpRagdollConstraintData::MotorIndex) const
hkpStorageMeshShape::SubpartStorage::SubpartStorage(hkFinishLoadedObjectFlag)
hkpRagdollConstraintData::Atoms::Atoms(hkFinishLoadedObjectFlag)
std::vector<rglTrueVec3, std::allocator<rglTrueVec3> >::_M_default_append(unsigned long)
void std::vector<rglCorner, std::allocator<rglCorner> >::_M_emplace_back_aux<rglCorner const&>(rglCorner const&)
std::vector<rglCorner, std::allocator<rglCorner> >::_M_default_append(unsigned long)
void std::vector<rglCorner_skin_data, std::allocator<rglCorner_skin_data> >::_M_emplace_back_aux<rglCorner_skin_data const&>(rglCorner_skin_data const&)
void std::vector<rglBody_part*, std::allocator<rglBody_part*> >::_M_emplace_back_aux<rglBody_part* const&>(rglBody_part* const&)
std::vector<rglBody_part*, std::allocator<rglBody_part*> >::_M_default_append(unsigned long)
void std::vector<rglParticle_system*, std::allocator<rglParticle_system*> >::_M_emplace_back_aux<rglParticle_system* const&>(rglParticle_system* const&)
void std::vector<InMemoryFileData*, std::allocator<InMemoryFileData*> >::_M_emplace_back_aux<InMemoryFileData* const&>(InMemoryFileData* const&)
void std::vector<rglEntity*, std::allocator<rglEntity*> >::_M_emplace_back_aux<rglEntity* const&>(rglEntity* const&)
std::vector<rglEntity*, std::allocator<rglEntity*> >::_M_erase(__gnu_cxx::__normal_iterator<rglEntity**, std::vector<rglEntity*, std::allocator<rglEntity*> > >)
std::vector<rglManifold_face, std::allocator<rglManifold_face> >::_M_default_append(unsigned long)
std::vector<rglVertex_group, std::allocator<rglVertex_group> >::_M_default_append(unsigned long)
void std::vector<rglLight*, std::allocator<rglLight*> >::_M_emplace_back_aux<rglLight* const&>(rglLight* const&)
rglSound_manager::set_channel_properties_and_play(FMOD::Channel*, rglSound_properties const&)
void std::vector<FMOD::Sound*, std::allocator<FMOD::Sound*> >::_M_emplace_back_aux<FMOD::Sound* const&>(FMOD::Sound* const&)
void std::vector<rglMusic_track*, std::allocator<rglMusic_track*> >::_M_emplace_back_aux<rglMusic_track*>(rglMusic_track*&&)
void std::vector<rglRender_postFX_Node*, std::allocator<rglRender_postFX_Node*> >::_M_emplace_back_aux<rglRender_postFX_Node* const&>(rglRender_postFX_Node* const&)
std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&>&&, std::tuple<>&&)
std::vector<rglRender_rec*, std::allocator<rglRender_rec*> >::operator=(std::vector<rglRender_rec*, std::allocator<rglRender_rec*> > const&)
void std::vector<rglTexture*, std::allocator<rglTexture*> >::_M_emplace_back_aux<rglTexture*>(rglTexture*&&)
void std::vector<rglMaterial*, std::allocator<rglMaterial*> >::_M_emplace_back_aux<rglMaterial* const&>(rglMaterial* const&)
void std::vector<rglSkeleton_model*, std::allocator<rglSkeleton_model*> >::emplace_back<rglSkeleton_model*>(rglSkeleton_model*&&)
void std::vector<rglResource*, std::allocator<rglResource*> >::_M_emplace_back_aux<rglResource* const&>(rglResource* const&)
void std::vector<rglBody*, std::allocator<rglBody*> >::emplace_back<rglBody*>(rglBody*&&)
void std::vector<rglSkeleton_anim*, std::allocator<rglSkeleton_anim*> >::emplace_back<rglSkeleton_anim*>(rglSkeleton_anim*&&)
std::vector<rglBone_anim, std::allocator<rglBone_anim> >::_M_default_append(unsigned long)
std::vector<rglMesh*, std::allocator<rglMesh*> >::operator=(std::vector<rglMesh*, std::allocator<rglMesh*> > const&)
std::vector<rglVec3, std::allocator<rglVec3> >::operator=(std::vector<rglVec3, std::allocator<rglVec3> > const&)
std::vector<rglBm_face, std::allocator<rglBm_face> >::operator=(std::vector<rglBm_face, std::allocator<rglBm_face> > const&)
std::vector<rglBm_face, std::allocator<rglBm_face> >::_M_default_append(unsigned long)
std::vector<rglVec3, std::allocator<rglVec3> >::_M_default_append(unsigned long)
void std::vector<image_inside_font_data, std::allocator<image_inside_font_data> >::_M_emplace_back_aux<image_inside_font_data const&>(image_inside_font_data const&)
std::deque<nv_dds::CTexture, std::allocator<nv_dds::CTexture> >::_M_destroy_data_aux(std::_Deque_iterator<nv_dds::CTexture, nv_dds::CTexture&, nv_dds::CTexture*>, std::_Deque_iterator<nv_dds::CTexture, nv_dds::CTexture&, nv_dds::CTexture*>)
void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<std::istreambuf_iterator<char, std::char_traits<char> > >(std::istreambuf_iterator<char, std::char_traits<char> >, std::istreambuf_iterator<char, std::char_traits<char> >, std::input_iterator_tag)
hkMoppBvTreeShapeBase::hkMoppBvTreeShapeBase(hkcdShapeType::ShapeTypeEnum, hkpMoppCode const*)
hkFreeListAllocator::hkFreeListAllocator(hkMemoryAllocator*, hkMemoryAllocator::ExtendedInterface*, hkFreeListAllocator::Cinfo const*)
hkFreeListMemorySystem::hkFreeListMemorySystem(hkMemoryAllocator*, hkMemoryAllocator*, hkMemoryAllocator::ExtendedInterface*, hkFreeListMemorySystem::SetupFlags)
void std::vector<RagDollWorldData, std::allocator<RagDollWorldData> >::_M_emplace_back_aux<RagDollWorldData const&>(RagDollWorldData const&)
void std::vector<hkpRigidBody*, std::allocator<hkpRigidBody*> >::_M_emplace_back_aux<hkpRigidBody* const&>(hkpRigidBody* const&)
void std::vector<hkpShape*, std::allocator<hkpShape*> >::_M_emplace_back_aux<hkpShape* const&>(hkpShape* const&)
std::_Deque_base<Control_stream_element, std::allocator<Control_stream_element> >::~_Deque_base()
std::vector<Party_stack, std::allocator<Party_stack> >::_M_default_append(unsigned long)
void std::vector<Track, std::allocator<Track> >::_M_emplace_back_aux<Track const&>(Track const&)
void std::vector<Tableau_manager_data*, std::allocator<Tableau_manager_data*> >::_M_emplace_back_aux<Tableau_manager_data* const&>(Tableau_manager_data* const&)
std::vector<Multiplayer_profile, std::allocator<Multiplayer_profile> >::~vector()
std::vector<int, std::allocator<int> >::_M_default_append(unsigned long)
std::vector<unsigned char, std::allocator<unsigned char> >::resize(unsigned long)
void std::__make_heap<__gnu_cxx::__normal_iterator<rglAIque_element*, std::vector<rglAIque_element, std::allocator<rglAIque_element> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<rglAIque_element> > >(__gnu_cxx::__normal_iterator<rglAIque_element*, std::vector<rglAIque_element, std::allocator<rglAIque_element> > >, __gnu_cxx::__normal_iterator<rglAIque_element*, std::vector<rglAIque_element, std::allocator<rglAIque_element> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<rglAIque_element> >)
void std::__make_heap<__gnu_cxx::__normal_iterator<rglAIque_element2*, std::vector<rglAIque_element2, std::allocator<rglAIque_element2> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<rglAIque_element2> > >(__gnu_cxx::__normal_iterator<rglAIque_element2*, std::vector<rglAIque_element2, std::allocator<rglAIque_element2> > >, __gnu_cxx::__normal_iterator<rglAIque_element2*, std::vector<rglAIque_element2, std::allocator<rglAIque_element2> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<rglAIque_element2> >)
void std::vector<int, std::allocator<int> >::_M_emplace_back_aux<int const&>(int const&)
void std::vector<rglMeta_mesh*, std::allocator<rglMeta_mesh*> >::_M_emplace_back_aux<rglMeta_mesh* const&>(rglMeta_mesh* const&)
void std::vector<Mission_object*, std::allocator<Mission_object*> >::_M_emplace_back_aux<Mission_object* const&>(Mission_object* const&)
std::vector<rglTexture*, std::allocator<rglTexture*> >::operator=(std::vector<rglTexture*, std::allocator<rglTexture*> > const&)
std::vector<Face_instance, std::allocator<Face_instance> >::_M_default_append(unsigned long)
std::vector<Tableau_material, std::allocator<Tableau_material> >::_M_default_append(unsigned long)
std::vector<rglPopup*, std::allocator<rglPopup*> >::_M_erase(__gnu_cxx::__normal_iterator<rglPopup**, std::vector<rglPopup*, std::allocator<rglPopup*> > >)
std::vector<rglString, std::allocator<rglString> >::_M_erase(__gnu_cxx::__normal_iterator<rglString*, std::vector<rglString, std::allocator<rglString> > >)
void std::__make_heap<__gnu_cxx::__normal_iterator<que_element*, std::vector<que_element, std::allocator<que_element> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<que_element> > >(__gnu_cxx::__normal_iterator<que_element*, std::vector<que_element, std::allocator<que_element> > >, __gnu_cxx::__normal_iterator<que_element*, std::vector<que_element, std::allocator<que_element> > >, __gnu_cxx::__ops::_Iter_comp_iter<std::less<que_element> >)
std::vector<rglManifold_vertex, std::allocator<rglManifold_vertex> >::_M_default_append(unsigned long)
void std::vector<rglSkeleton_bone_fix, std::allocator<rglSkeleton_bone_fix> >::_M_emplace_back_aux<rglSkeleton_bone_fix>(rglSkeleton_bone_fix&&)
void std::vector<rglBone_body, std::allocator<rglBone_body> >::_M_emplace_back_aux<rglBone_body>(rglBone_body&&)
void std::vector<rglString, std::allocator<rglString> >::_M_emplace_back_aux<rglString>(rglString&&)
void std::vector<rglWidget_base*, std::allocator<rglWidget_base*> >::_M_emplace_back_aux<rglWidget_base*>(rglWidget_base*&&)
void std::deque<int, std::allocator<int> >::_M_push_back_aux<int const&>(int const&)
void std::vector<rglVec3, std::allocator<rglVec3> >::_M_emplace_back_aux<rglVec3>(rglVec3&&)
std::vector<Vertex_map_rec_group, std::allocator<Vertex_map_rec_group> >::_M_default_append(unsigned long)
std::vector<rglString, std::allocator<rglString> >::_M_default_append(unsigned long)
std::vector<Face_texture, std::allocator<Face_texture> >::_M_default_append(unsigned long)
std::vector<Face_key_constraint, std::allocator<Face_key_constraint> >::_M_default_append(unsigned long)
void std::vector<rglPopup*, std::allocator<rglPopup*> >::_M_emplace_back_aux<rglPopup* const&>(rglPopup* const&)
void std::vector<rglMesh_face, std::allocator<rglMesh_face> >::_M_emplace_back_aux<rglMesh_face const&>(rglMesh_face const&)
Terrain_generator::build_shadows(std::vector<rglStrategic_entity*, std::allocator<rglStrategic_entity*> >&)
std::vector<Presentation_container*, std::allocator<Presentation_container*> >::_M_erase(__gnu_cxx::__normal_iterator<Presentation_container**, std::vector<Presentation_container*, std::allocator<Presentation_container*> > >)
void std::vector<rglStrategic_entity*, std::allocator<rglStrategic_entity*> >::_M_emplace_back_aux<rglStrategic_entity* const&>(rglStrategic_entity* const&)
void std::vector<directx_thread_call, std::allocator<directx_thread_call> >::_M_emplace_back_aux<directx_thread_call>(directx_thread_call&&)
std::vector<Missile, std::allocator<Missile> >::_M_erase(__gnu_cxx::__normal_iterator<Missile*, std::vector<Missile, std::allocator<Missile> > >)
void std::vector<Missile, std::allocator<Missile> >::_M_emplace_back_aux<Missile const&>(Missile const&)
void std::vector<long long, std::allocator<long long> >::_M_emplace_back_aux<long long const&>(long long const&)
void std::vector<Server_player_agent_data, std::allocator<Server_player_agent_data> >::_M_emplace_back_aux<Server_player_agent_data>(Server_player_agent_data&&)
void std::vector<float, std::allocator<float> >::_M_emplace_back_aux<float>(float&&)
void std::vector<rglAIque_element2, std::allocator<rglAIque_element2> >::_M_emplace_back_aux<rglAIque_element2>(rglAIque_element2&&)
void std::vector<rglAIque_element, std::allocator<rglAIque_element> >::_M_emplace_back_aux<rglAIque_element>(rglAIque_element&&)
std::vector<Mission_object, std::allocator<Mission_object> >::_M_default_append(unsigned long)
std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > > std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > >, std::piecewise_construct_t const&, std::tuple<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&&>&&, std::tuple<>&&)
std::pair<std::_Rb_tree_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > >, bool> std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > >, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > > > >::_M_insert_unique<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > >&>(std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > >&)
std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::vector<GLSLConstantMap, std::allocator<GLSLConstantMap> > >::~pair()
nv_dds::CDDSImage::flip(nv_dds::CSurface&)
void std::deque<nv_dds::CTexture, std::allocator<nv_dds::CTexture> >::_M_push_back_aux<nv_dds::CTexture>(nv_dds::CTexture&&)
void std::deque<nv_dds::CSurface, std::allocator<nv_dds::CSurface> >::_M_push_back_aux<nv_dds::CSurface const&>(nv_dds::CSurface const&)
hkReferencedObject::setLockMode(hkReferencedObject::LockMode)
hkFileSystem::Iterator::advance()
hkFileSystem::Entry::setAll(hkFileSystem*, char const*, hkFlags<hkFileSystem::Entry::FlagValues, unsigned int>, hkFileSystem::TimeStamp, long)
hkFileSystem::_handleFlags(hkStreamReader*, hkFileSystem::OpenFlags)
hkStringBuf::replace(char, char, hkStringBuf::ReplaceType)
hkVariantDataUtil::setString(hkClassMember::Type, void*, char const*)
hkVariantDataUtil::convertTypeToBoolArray(hkClassMember::Type, void const*, hkBool*, int)
hkVariantDataUtil::convertInt64ToTypeArray(long const*, hkClassMember::Type, void*, int)
hkVariantDataUtil::convertBoolToTypeArray(hkBool const*, hkClassMember::Type, void*, int)
hkFreeList::_freeBlocks(hkFreeList::Block*)
hkFreeList::getMemoryStatistics(hkMemoryAllocator::MemoryStatistics&) const
hkFreeListAllocator::Cinfo::add(unsigned long, unsigned long, unsigned long)
hkFreeListAllocator::setFixedSizeCinfo(unsigned long, hkFreeListAllocator::Cinfo&)
hkLargeBlockAllocator::FixedMemoryBlockServer::resize(void*, int, unsigned long, unsigned long&)
hkMonitorStreamAnalyzer::Node::createSelfTimer(hkMonitorStreamFrameInfo const&, hkMonitorStreamAnalyzer::Node*)
hkMonitorStreamAnalyzer::writeStatisticsDetailsToTexture(hkArrayBase<hkMonitorStreamAnalyzer::Node*> const&, hkMonitorStreamAnalyzer::ThreadDrawInput const&, hkArray<hkArray<hkMonitorStreamFrameInfo, hkContainerHeapAllocator>, hkContainerHeapAllocator>&, int*&, int&, hkMonitorStreamAnalyzer::SampleInfo*)
hkMonitorStreamAnalyzer::writeStatisticsDetails(hkOstream&, hkArrayBase<hkMonitorStreamAnalyzer::Node*>&, int, int, int, char const*, bool)
hkFreeList::_calculateBlockAllocatedSize(hkFreeList::Block*) const
hkFreeList::_calcTotalNumElements(hkFreeList::Block*)
hkcdConvexCellsTree<hkcdNewCellsCollection::Cell, hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>, hkcdNewCellsCollection>::hkcdConvexCellsTree()
hkcdConvexCellsTree<hkcdNewCellsCollection::Cell, hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>, hkcdNewCellsCollection>::hkcdConvexCellsTree(hkcdConvexCellsTree<hkcdNewCellsCollection::Cell, hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>, hkcdNewCellsCollection> const&)
hkcdPlanarGeometry::getAllPolygons(hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator>&) const
hkcdPlanarSolid::classifyPolygons(hkcdPlanarGeometry&, hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator> const&, hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator>&, hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator>&, hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator>&, hkcdPlanarSolid::ArrayMgr*) const
hkcdConvexCellsTree3D::collectSolidCells(hkArray<hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>, hkContainerHeapAllocator>&) const
hkcdConvexCellsTree3D::extractBoundaryPolygonsFromCellIds(hkArray<hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>, hkContainerHeapAllocator> const&, hkcdPlanarGeometry&, hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator>&) const
hkcdBspImpl::AlignedPlaneFinder::AlignedPlaneFinder(hkcdPlanarGeometryPlanesCollection*)
hkcdPlanarGeometryPrimitives::Collection<28>::clear()
hkcdPlanarGeometryPredicates::approximateIntersection(hkcdPlanarGeometryPrimitives::Plane const (&) [3], hkIntVector&)
void hkcdMathErrorBoundsCalculator::Vector::setPermutation<(hkVectorPermutation::Permutation)12576>(hkcdMathErrorBoundsCalculator::Vector const&)
hkcdMathErrorBoundsCalculator::Vector::setCross(hkcdMathErrorBoundsCalculator::Vector const&, hkcdMathErrorBoundsCalculator::Vector const&)
void hkcdMathErrorBoundsCalculator::Vector::setPermutation<(hkVectorPermutation::Permutation)801>(hkcdMathErrorBoundsCalculator::Vector const&)
void hkcdMathErrorBoundsCalculator::Vector::dot<3>(hkcdMathErrorBoundsCalculator::Vector const&, hkcdMathErrorBoundsCalculator::Vector const&, hkcdMathErrorBoundsCalculator::Scalar&)
hkcdMathErrorBoundsCalculator::Vector::setFlipSign(hkcdMathErrorBoundsCalculator::Vector const&, hkVector4dComparison const&)
hkcdPlanarGeometryPredicates::computeExactDet3(hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkVector4dComparison&, hkVector4dComparison&)
hkcdPlanarGeometryPredicates::Orientation hkcdPlanarGeometryPredicates::orientation<12>(hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkIntVector const&, hkcdPlanarGeometryPredicates::OrientationCacheBase<12>*)
hkcdPlanarGeometry::addPolygon(hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, unsigned long, int)
hkRefPtr<hkcdPlanarGeometry::VertexStorage>::setAndDontIncrementRefCount(hkcdPlanarGeometry::VertexStorage*)
hkArray<hkHandle<unsigned int, 536870911u, hkcdPlanarGeometryPolygonCollection::VertexIdDiscriminant>, hkContainerHeapAllocator>::clearAndDeallocate()
hkArray<hkFindUniquePositionsUtil::Entry, hkContainerHeapAllocator>::clearAndDeallocate()
hkcdPlanarGeometryPrimitives::Collection<28>::copy(hkcdPlanarGeometryPrimitives::Collection<28> const&)
hkcdPlanarGeometryPredicates::OrientationCacheBase<12>::OrientationCacheBase()
hkSimdInt128Impl::Shr<53, (hkMathValueType)0>::shr(hkSimdInt<128> const&, hkSimdInt<128>&)
hkcdMathErrorBoundsCalculator::Vector::setAdd(hkcdMathErrorBoundsCalculator::Vector const&, hkcdMathErrorBoundsCalculator::Vector const&)
hkcdPlanarSolid::NodeStorage::NodeStorage(hkcdPlanarSolid::NodeStorage const&)
hkArrayBase<hkcdPlanarGeometryPrimitives::Plane>::_pushBack(hkMemoryAllocator&, hkcdPlanarGeometryPrimitives::Plane const&)
hkFreeListArray<hkcdPlanarSolid::ArraySlot, hkHandle<unsigned int, 4294967295u, hkcdPlanarSolid::ArrayIdDiscriminant>, 128, hkDefaultFreeListArrayOperations<hkcdPlanarSolid::ArraySlot> >::grow(int)
hkcdPlanarGeometryPlanesCollection::addPlane(hkcdPlanarGeometryPrimitives::Plane const&)
hkcdPlanarSolid::createInsideNode(hkHandle<unsigned int, 4294967295u, hkcdPlanarSolid::NodeIdDiscriminant>)
hkArray<hkcdConvexCellsTree3D::Edge, hkContainerHeapAllocator>::expandOne()
hkcdConvexCellsTree3D::cloneCell(hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>)
hkArray<hkcdConvexCellsTree3D::Face, hkContainerHeapAllocator>::expandOne()
hkcdNewCellsCollection::freeCell(hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>)
void hkDeallocateStack<hkcdPlanarGeometryPredicates::Orientation>(hkcdPlanarGeometryPredicates::Orientation*, int)
hkcdConvexCellsTree3D::Data::Data(hkcdConvexCellsTree3D::Data const&)
int hkAlgorithm::removeDuplicatesFromSortedList<unsigned int, hkAlgorithm::eq<unsigned int> >(unsigned int*, int, hkAlgorithm::eq<unsigned int>)
hkcdConvexCellsTree3D::collectUniqueVertexIds(hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant> const*, int, hkArray<unsigned int, hkContainerHeapAllocator>&) const
hkcdSimdTreeUtils::getMaxDepth(hkcdSimdTree::Node const*, int, int)
hkcdSimdTreeUtils::Build::buildHierarchy(hkcdSimdTree::BuildContext&, hkcdSimdTreeUtils::Build::Range const&, hkcdSimdTree::Node*, hkcdSimdTree::Node*&)
hkcdSimdTreeUtils::Build::createChildren(hkcdSimdTree::BuildContext const&, hkcdSimdTreeUtils::Build::Range const*, int, hkcdSimdTree::Node const*, hkcdSimdTree::Node*, hkcdSimdTree::Node* restrict&, hkcdSimdTreeUtils::Build::Range*, int&)
void hkcdSimdTreeUtils::Build::IRefit::_refitBranch<hkcdSimdTreeUtils::Build::IRefit::GetClusterAabb<hkcdSimdTreeUtils::Build::GetLeafAabbFromICustomRefit> >(hkcdSimdTreeUtils::Build::IRefit::GetClusterAabb<hkcdSimdTreeUtils::Build::GetLeafAabbFromICustomRefit> const&, hkcdSimdTree::Node*, int, int)
void hkcdSimdTreeUtils::Build::IRefit::_refitNode<hkcdSimdTreeUtils::Build::IRefit::GetClusterAabb<hkcdSimdTreeUtils::Build::GetLeafAabbFromICustomRefit> >(hkcdSimdTreeUtils::Build::IRefit::GetClusterAabb<hkcdSimdTreeUtils::Build::GetLeafAabbFromICustomRefit> const&, hkcdSimdTree::Node const*, hkcdSimdTree::Node*)
void hkcdSimdTreeUtils::Build::IRefit::_refitBranch<hkcdSimdTreeUtils::Build::IRefit::GetClusterAabb<hkcdSimdTreeUtils::Build::GetLeafAabbFromPoints> >(hkcdSimdTreeUtils::Build::IRefit::GetClusterAabb<hkcdSimdTreeUtils::Build::GetLeafAabbFromPoints> const&, hkcdSimdTree::Node*, int, int)
void hkcdSimdTreeUtils::Build::IRefit::_refitNode<hkcdSimdTreeUtils::Build::IRefit::GetClusterAabb<hkcdSimdTreeUtils::Build::GetLeafAabbFromPoints> >(hkcdSimdTreeUtils::Build::IRefit::GetClusterAabb<hkcdSimdTreeUtils::Build::GetLeafAabbFromPoints> const&, hkcdSimdTree::Node const*, hkcdSimdTree::Node*)
void hkcdSimdTreeUtils::Build::IRefit::_refitBranch<hkcdSimdTreeUtils::Build::IRefit::GetClusterAabb<hkcdSimdTreeUtils::Build::GetLeafAabbFromSpheres> >(hkcdSimdTreeUtils::Build::IRefit::GetClusterAabb<hkcdSimdTreeUtils::Build::GetLeafAabbFromSpheres> const&, hkcdSimdTree::Node*, int, int)
void hkcdSimdTreeUtils::Build::IRefit::_refitNode<hkcdSimdTreeUtils::Build::IRefit::GetClusterAabb<hkcdSimdTreeUtils::Build::GetLeafAabbFromSpheres> >(hkcdSimdTreeUtils::Build::IRefit::GetClusterAabb<hkcdSimdTreeUtils::Build::GetLeafAabbFromSpheres> const&, hkcdSimdTree::Node const*, hkcdSimdTree::Node*)
void hkcdSimdTreeUtils::Build::IRefit::_refitBranch<hkcdSimdTreeUtils::Build::IRefit::GetClusterAabb<hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs> >(hkcdSimdTreeUtils::Build::IRefit::GetClusterAabb<hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs> const&, hkcdSimdTree::Node*, int, int)
void hkcdSimdTreeUtils::Build::IRefit::_refitNode<hkcdSimdTreeUtils::Build::IRefit::GetClusterAabb<hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs> >(hkcdSimdTreeUtils::Build::IRefit::GetClusterAabb<hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs> const&, hkcdSimdTree::Node const*, hkcdSimdTree::Node*)
void hkcdSimdTreeUtils::Build::IRefit::_refitNode<hkcdSimdTreeUtils::Build::IRefit::GetClusterAabb<hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs16> >(hkcdSimdTreeUtils::Build::IRefit::GetClusterAabb<hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs16> const&, hkcdSimdTree::Node const*, hkcdSimdTree::Node*)
hkCompatUtil::updateNamedVariantClassName(hkArray<hkVariant, hkContainerHeapAllocator>&, hkVersionRegistry::ClassRename const*, hkObjectUpdateTracker&)
hkTypeManager::_addType(hkTypeManager::Type const&)
hkVersionPatchManager::applyPatches(hkDataWorld&, hkVersionPatchManager::ClassWrapper*) const
hkClassPointerVtable::TypeInfoRegistry::~TypeInfoRegistry()
hkXmlPackfileWriter::hkXmlPackfileWriter(hkPackfileWriter::Options const&)
hkXmlObjectWriter::hkXmlObjectWriter(hkXmlObjectWriter::NameFromAddress&, hkBool)
hkBindingClassNameRegistry::ClassAllocationsTracker::ClassAllocationsTracker()
hkXmlParser::Characters::canonicalize(char const*)
hkPackfileSectionHeader::getImports(void const*, hkArray<hkResource::Import, hkContainerHeapAllocator>&) const
hkBindingClassNameRegistry::ClassAllocationsTracker::UnresolvedClassPointerTracker::replaceClassAndRemove(hkClass const*, hkClass const*)
hkBindingClassNameRegistry::ClassAllocationsTracker::deallocateMembers(hkInternalClassMember*, int, hkPointerMap<hkInternalClassEnum*, unsigned int, hkContainerHeapAllocator>&)
hkBindingClassNameRegistry::ClassAllocationsTracker::UnresolvedClassPointerTracker::~UnresolvedClassPointerTracker()
hkBindingClassNameRegistry::ClassAllocationsTracker::UnresolvedClassPointerTracker::UnresolvedClassPointerTracker()
hkBindingClassNameRegistry::ClassAllocationsTracker::allocateClass(hkClass const&, char const*, hkBindingClassNameRegistry::ClassAllocationsTracker::UnresolvedClassPointerTracker&)
hkMemoryMeshVertexBuffer::getLockedVertices(int, int, hkMeshVertexBuffer::LockedVertices&)
hkMeshPrimitiveUtil::appendTriangleIndices(hkMeshSection::PrimitiveType, int, int, hkArrayBase<unsigned short>&, hkMemoryAllocator&)
hkMeshPrimitiveUtil::appendTriangleIndices(hkMeshSection::PrimitiveType, int, int, hkArray<unsigned int, hkContainerHeapAllocator>&)
hkImage::Descriptor::isInterleaved() const
hkDefaultImage::hkDefaultImage(hkImage::Descriptor const&)
hkTgaDecoderImpl::flipY(unsigned char*&, hkImage::Descriptor&)
hkp3AxisSweep::hkpBpAxis::remove(int, int)
hkp3AxisSweep::updateNodesAfterDelete(hkp3AxisSweep::hkpBpNode*, int, hkp3AxisSweep::hkpBpNode&)
hkpCollisionDispatcher::registerAgent3(hkpCollisionDispatcher::Agent3Funcs&, hkcdShapeType::ShapeTypeEnum, hkcdShapeType::ShapeTypeEnum)
hkpShapeCollection::hkpShapeCollection(hkcdShapeType::ShapeTypeEnum, hkpShapeCollection::CollectionType)
hkpListShape::setShapes(hkpShape const* const*, int, unsigned int const*, hkpShapeContainer::ReferencePolicy)
hkpCollisionDispatcher::registerCollisionAgent(hkpCollisionDispatcher::AgentFuncs&, hkcdShapeType::ShapeTypeEnum, hkcdShapeType::ShapeTypeEnum)
hkpMoppCompiler::setAssemblerParams(hkpMoppAssembler::hkpMoppAssemblerParams const&)
hkpMoppSplitter::hkpMoppSplitParams::hkpMoppSplitParams(hkpMoppMeshType)
hkpMoppCostFunction::hkpMoppSplitCostParams::hkpMoppSplitCostParams(hkpMoppMeshType)
hkpExtendedMeshShape::_getNumChildShapesInTrianglesSubpart(hkpExtendedMeshShape::TrianglesSubpart const&, int) const
hkpCompressedMeshShape::Chunk::getVertices(float, hkQsTransformf const&, hkArray<hkVector4f, hkContainerHeapAllocator>&) const
hkcdGsk::rayCast(hkFourTransposedPointsf const*, int, hkcdGsk::RayCastInput const&, hkcdGsk::RayCastOutput&)
hkpSimulation::processAgentsOfEntities(hkpEntity**, int, hkpProcessCollisionInput const&, void (hkpSimulation::*)(hkpAgentNnEntry*, hkpProcessCollisionInput const&, hkpProcessCollisionOutput&), hkpSimulation::FindContacts)
hkpMultiThreadedSimulation::processAgentNnEntriesFromMultipleIslands(hkpAgentNnEntry**, int, hkpIslandsAgentEntriesInfo*, int, hkpProcessCollisionInput const&, hkpContinuousSimulation::CollisionQualityOverride)
hkpWorldOperationUtil::setRigidBodyMotionType(hkpRigidBody*, hkpMotion::MotionType, hkpEntityActivation, hkpUpdateCollisionFilterOnEntityMode)
hkpBroadPhaseBorder::hkpBroadPhaseBorder(hkpWorld*, hkpWorldCinfo::BroadPhaseBorderBehaviour, hkBool)
hkpWorldOperationUtil::replaceMotionObject(hkpRigidBody*, hkpMotion::MotionType, hkBool, hkBool, hkpWorld*)
hkpWorldObject::hkpWorldObject(hkpShape const*, hkpWorldObject::BroadPhaseType)
hkpConstraintInstance::hkpConstraintInstance(hkpConstraintInstance::ConstraintPriority)
hkJobQueue::addJobQueueLocked(hkJobQueue::DynamicData*, hkJobQueue::JobQueueEntry const&, hkJobQueue::JobPriority)
hkpSingleThreadedJobsOnIsland::cpuFireJacobianSetupCallbackJob(hkpMtThreadStructure&, hkJobQueue&, hkJobQueue::JobQueueEntry&)
hkJobQueue::finishJob(hkJobQueue::JobQueueEntry const*, hkJobQueue::FinishJobFlag)
hkMapBase<hkpPairCollisionFilter::PairFilterKey, unsigned long, hkpPairCollisionFilter::PairFilterPointerMapOperations>::remove(Dummy*)
hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::Decoder::setSection(int, bool)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::rotateLeft(unsigned long)
void hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::copyTo<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::DynamicTree>(hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::DynamicTree&) const
hkArrayBase<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::SAHTask>::_clearAndDeallocate(hkMemoryAllocator&)
hkGeometryUtils::weldVerticesVirtual(hkGeometryUtils::IVertices const*, hkArray<int, hkContainerHeapAllocator>&, float)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::internalInsert(unsigned long, unsigned long, hkAabb const&)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::computeCost() const
hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::BuildGeometryProvider<hkpBvCompressedMeshShape_Internals::GeometryProvider>::getIndices(int, int*) const
void hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::collectLeavesWithCollector<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::SubTree::VertexCounter<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::BuildGeometryProvider<hkpBvCompressedMeshShape_Internals::GeometryProvider> > >(unsigned long, hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::SubTree::VertexCounter<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::BuildGeometryProvider<hkpBvCompressedMeshShape_Internals::GeometryProvider> >&) const
void hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage5>::convertFromDynamicTree<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::DynamicTree>(hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::DynamicTree const&)
hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::getMemoryFootPrint(hkcdStaticMeshTreeBase::MemoryStatistics&) const
hkcdWingedEdge::patchInBoundaryToPointOfViewExpansion(int, hkcdWingedEdge::Edge*, hkcdWingedEdge::Vertex*)
hkpGsk::processEdgeTriangle(hkVector4f*, hkVector4f*, hkPadSpu<int>&, hkPadSpu<int>&, hkBool, hkpGsk::SupportTypes)
hkpMoppDefaultSplitter::buildTree(hkpMoppMediator*, hkpMoppCostFunction*, hkpMoppAssembler*, hkpMoppSplitter::hkpMoppSplitParams const&, hkpMoppSplitter::hkpMoppScratchArea&)
hkpMoppDefaultSplitter::groupPrimitives(hkpMoppDefaultSplitter::hkpMoppPrimitiveArray const&, hkpMoppBasicNode*, int, hkpMoppDefaultSplitter::hkpMoppPrimitiveArray&, hkpMoppDefaultSplitter::hkpMoppPrimitiveArray&)
hkpMoppDefaultSplitter::createTerminal(hkpMoppTreeInternalNode*, hkpMoppDefaultSplitter::hkpMoppPrimitiveArray const&)
hkpMoppUsingFloatAabbVirtualMachine<hkSphere, hkMoppSphereQueryObject>::queryMoppTree(hkpMoppUsingFloatAabbVirtualMachine<hkSphere, hkMoppSphereQueryObject>::hkpMoppUsingFloatAabbVirtualMachineQueryInt const*, unsigned char const*, hkpMoppUsingFloatAabbVirtualMachine<hkSphere, hkMoppSphereQueryObject>::hkpMoppTempAabb&)
hkpMoppUsingFloatAabbVirtualMachine<hkSphere, hkMoppSphereQueryObjectOptimized>::queryMoppTree(hkpMoppUsingFloatAabbVirtualMachine<hkSphere, hkMoppSphereQueryObjectOptimized>::hkpMoppUsingFloatAabbVirtualMachineQueryInt const*, unsigned char const*, hkpMoppUsingFloatAabbVirtualMachine<hkSphere, hkMoppSphereQueryObjectOptimized>::hkpMoppTempAabb&)
hkArray<hkpTreeBroadPhase::Handle, hkContainerHeapAllocator>::hkArray(int, hkpTreeBroadPhase::Handle const&)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::Tree()
void hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::copyTo<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16> >(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>&) const
int hkcdDynamicTree::AnisotropicMetric::metricSelect<hkcdDynamicTree::Codec32>(hkcdDynamicTree::AnisotropicMetric::MetricData const&, hkcdDynamicTree::Codec32 const*, hkcdDynamicTree::Codec32 const*) const
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::rebuildBranchSAH(unsigned short, hkBool, int, int)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::rayCastFan<hkpTreeBroadPhaseSpatialTree16, hkpTreeBroadPhaseInternals::RayCastFanQuery>(hkpTreeBroadPhaseSpatialTree16 const&, hkVector4f const&, hkVector4f const*, int, hkpTreeBroadPhaseInternals::RayCastFanQuery&)
hkArrayBase<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::SAHTask>::_clearAndDeallocate(hkMemoryAllocator&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ConvexOverlapsWrapper<hkpTreeBroadPhaseInternals::ConvexQuerySorted>::append<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>, unsigned short>(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16> const*, unsigned short) const
hkpTreeBroadPhaseInternals::ConvexQuerySorted::processLeaf(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::NodeContext const&)
hkpTreeBroadPhaseInternals::ConvexQuerySorted::processLeaf(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::NodeContext const&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdStaticMeshTreeBase::Section, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage5>::Slot>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbCastWrapper<hkpBvCompressedMeshShape_Internals::AabbCastQuery> >(hkcdStaticMeshTreeBase::Section const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage5>::Slot>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbCastWrapper<hkpBvCompressedMeshShape_Internals::AabbCastQuery>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdStaticMeshTreeBase::Section, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage5>::Slot>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<hkpBvCompressedMeshShape_Internals::AabbOverlaps> >(hkcdStaticMeshTreeBase::Section const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage5>::Slot>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<hkpBvCompressedMeshShape_Internals::AabbOverlaps>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdStaticMeshTreeBase::Section, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage5>::Slot>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<hkpBvCompressedMeshShape_Internals::AabbOverlapsWithMaxHits> >(hkcdStaticMeshTreeBase::Section const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage5>::Slot>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsNoEarlyExitWrapper<hkpBvCompressedMeshShape_Internals::AabbOverlapsWithMaxHits>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdStaticMeshTreeBase::Section, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage5>::Slot>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastWrapper<hkpBvCompressedMeshShape_Internals::RayCastQuery> >(hkcdStaticMeshTreeBase::Section const&, hkcdTreeQueriesStacks::Dynamic<64, hkcdStaticTree::Tree<hkcdStaticTree::DynamicStorage5>::Slot>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::RayCastWrapper<hkpBvCompressedMeshShape_Internals::RayCastQuery>&)
hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::CustomGeometryConverter::appendCustomPrimitiveToGeometry(hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::Decoder const&, int, hkGeometry&) const
hkpFirstPersonGun::sweepSphere(hkpWorld const*, hkVector4f const&, float, hkVector4f const&, hkpFirstPersonGun::SweepSphereOut&)
hkpSaveContactPointsUtil::saveContactPoints(hkpSaveContactPointsUtil::SavePointsInput const&, hkpWorld const*, hkpPhysicsSystemWithContacts*)
hkpSaveContactPointsUtil::deserializeEntry(hkpSerializedAgentNnEntry const&, hkpSerializedAgentNnEntry::SerializedAgentType, hkpSerializedTrack1nInfo const&, hkpProcessCollisionInput const*, hkpAgentNnEntry*)
hkpSaveContactPointsUtil::deserializeCollisionEntry(hkpSaveContactPointsUtil::LoadPointsInput const&, hkpSerializedAgentNnEntry const&, hkpEntity*, hkpEntity*, hkpProcessCollisionInput const*, hkpAgentNnEntry*)
hkArrayBase<hkpBallSocketChainData::ConstraintInfo>::_spliceInto(hkMemoryAllocator&, int, int, hkpBallSocketChainData::ConstraintInfo const*, int)
hkpMultithreadedVehicleManager::getVehicleBatchFromBuffer(hkArray<hkpVehicleInstance*, hkContainerHeapAllocator>&, void*, hkpMultithreadedVehicleManager::VehicleCommandBatch&)
hkpVehicleSteeringAckerman::calcMainSteeringAngle(float, hkpVehicleInstance const*, hkpVehicleDriverInput::FilteredDriverInputOutput const&, hkpVehicleSteering::SteeringAnglesOutput&)
hkDataWorldDict::ObjectTracker::trackClass(hkDataClassDict*)
hkTypeManager::isOwned(hkTypeManager::Type*) const
hkTypeManager::findTypesUsingClass(hkTypeManager::Type*, hkArray<hkTypeManager::Type*, hkContainerHeapAllocator>&)
hkVariantDataUtil::getReals(hkClassMember::Type, int, void const*, hkArray<unsigned char, hkContainerHeapAllocator>&)
hkVariantDataUtil::getObject(hkClassMember::Type, hkClass const*, hkVtableClassRegistry const*, hkClassNameRegistry const*, void const*)
hkVariantDataUtil::getInt(hkClassMember::Type, hkClassMember::Type, void const*)
hkPlatformObjectWriter::hkPlatformObjectWriter(hkStructureLayout const&, hkPlatformObjectWriter::Cache*, hkFlags<hkObjectCopier::ObjectCopierFlagBits, unsigned int>)
hkPackfileWriter::addObject(void const*, hkClass const&, hkVtableClassRegistry const*, hkPackfileWriter::AddObjectListener*, char const*)
hkPlatformObjectWriter::Cache::Cache()
hkTypeManager::Type::_calcHash(hkTypeManager::Type const*)
hkTypeManager::Type::asText(hkOstream&) const
hkTypeManager::getType(hkLegacyType::Type, char const*, int)
hkVersionPatchManager::UidFromClassVersion::cache(char const*) const
hkDataWorldDict::ObjectTracker::ObjectTracker(hkMemoryAllocator*)
hkDataWorldDict::newClass(hkDataClass::Cinfo const&)
hkDataWorldDict::addClassMember(hkDataClass&, char const*, hkTypeManager::Type*, void const*)
hkMemoryStreamReader::hkMemoryStreamReader(void const*, int, hkMemoryStreamReader::MemoryType)
hkVariantDataUtil::setInt(hkClassMember::Type, hkClassMember::Type, void*, long)
hkDataObjectToNative::copyIntoRelArray(void*, hkClassMember const&, hkDataArray const&, hkDataObjectToNative::CopyInfoOut&, void*&, void*)
hkDataObjectToNative::copyIntoNativeArray(void*, hkClassMember const&, hkDataArray const&, hkDataObjectToNative::CopyInfoOut&)
hkMatrixDecompositionImpl<float>::decomposeMatrix(hkMatrix4f const&, hkMatrixDecompositionImpl<float>::Decomposition&)
hkcdConvexPenetrationUtil::calculatePenetrationDepth(hkcdGsk::GetClosestPointOutput&)
hkGeometryUtils::getGeometryInsideAabb(hkGeometry const&, hkGeometry&, hkAabb const&, hkArray<int, hkContainerHeapAllocator>&, hkGeometryUtils::GetGeometryInsideAabbMode)
hkgpIndexedMesh::getBothRings(hkgpIndexedMeshDefinitions::Edge, hkArray<hkgpIndexedMeshDefinitions::Triangle*, hkContainerHeapAllocator>&) const
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>, hkcdTreeQueriesStacks::Dynamic<64, unsigned long>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ClosestFromPointWrapper<hkGeometryProcessingInternals::NearestFeaturePolicy> >(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr> const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned long>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ClosestFromPointWrapper<hkGeometryProcessingInternals::NearestFeaturePolicy>&)
hkgpAbstractMesh<hkgpIndexedMeshDefinitions::Edge, hkgpIndexedMeshDefinitions::Vertex, hkgpIndexedMeshDefinitions::Triangle, hkContainerHeapAllocator>::~hkgpAbstractMesh()
hkgpConvexHull::buildPlanar(hkVector4f const*, int, hkVector4f const&, hkgpConvexHull::BuildConfig const&)
hkgpConvexHull::getPosition(hkgpConvexHull::Vertex const*) const
hkMxVectorf_Implementation::lengthH<4, 3, (hkMathAccuracyMode)2, (hkMathNegSqrtMode)1>::apply(hkVector4f const*, hkSimdFloat32*)
hkVector4f const& hkgpConvexHullImpl::getCentroid<hkgpConvexHullImpl::PositionAsTransform>() const
hkgpAbstractMesh<hkgpConvexHullImpl::Edge, hkgpConvexHullImpl::Vertex, hkgpConvexHullImpl::Triangle, hkContainerHeapAllocator>::getEdgeIterator() const
void hkgpConvexHullImpl::fetchWorldPositions<hkgpConvexHullImpl::PositionAsTransform>(hkArray<hkVector4f, hkContainerHeapAllocator>&) const
hkgpCgo::optimize(hkgpCgo::Config const&, hkGeometry&, hkgpCgo::IProgress*, hkArray<hkgpCgo::ClusterData, hkContainerHeapAllocator>*)
hkgpAbstractMeshDefinitions::List<hkgpMeshBase::Triangle, hkgpAbstractMeshDefinitions::List<hkgpMeshBase::Vertex, hkgpMeshBase::BaseVertex, hkGeometryProcessing::PoolAllocator<hkgpMeshBase::Vertex, 32, hkContainerHeapAllocator> >::Item, hkGeometryProcessing::PoolAllocator<hkgpMeshBase::Triangle, 32, hkContainerHeapAllocator> >::moveUp(hkgpMeshBase::Triangle*)
bool hkgpTopology::Edge<hkgpMeshBase::Edge, hkgpMeshBase::Vertex, hkgpMeshBase::Triangle, hkgpMeshBase::Vertex*>::applyFan<hkgpMesh::FanEdgeCollector>(hkgpMesh::FanEdgeCollector&) const
hkgpMesh::fetchAreaSortedTriangles(hkArray<hkgpMeshBase::Triangle*, hkContainerHeapAllocator>&, bool) const
hkgpAbstractMeshDefinitions::List<hkgpMeshBase::Triangle, hkgpAbstractMeshDefinitions::List<hkgpMeshBase::Vertex, hkgpMeshBase::BaseVertex, hkGeometryProcessing::PoolAllocator<hkgpMeshBase::Vertex, 32, hkContainerHeapAllocator> >::Item, hkGeometryProcessing::PoolAllocator<hkgpMeshBase::Triangle, 32, hkContainerHeapAllocator> >::release(hkgpMeshBase::Triangle*)
bool hkgpTopology::Edge<hkgpMeshBase::Edge, hkgpMeshBase::Vertex, hkgpMeshBase::Triangle, hkgpMeshBase::Vertex*>::applyFan<hkgpMesh::CollapseEdgePolicy>(hkgpMesh::CollapseEdgePolicy&) const
hkArrayBase<hkArray<hkgpMeshBase::Edge, hkContainerHeapAllocator>*>::_append(hkMemoryAllocator&, hkArray<hkgpMeshBase::Edge, hkContainerHeapAllocator>* const*, int)
hkgpAbstractMeshDefinitions::List<hkgpMeshBase::Vertex, hkgpAbstractMeshDefinitions::List<hkgpMeshBase::Vertex, hkgpMeshBase::BaseVertex, hkGeometryProcessing::PoolAllocator<hkgpMeshBase::Vertex, 32, hkContainerHeapAllocator> >::Item, hkGeometryProcessing::PoolAllocator<hkgpMeshBase::Vertex, 32, hkContainerHeapAllocator> >::allocate()
hkGeometryProcessing::HashTable<hkgpMeshInternals::VertexPointer, hkContainerHeapAllocator>::insert(hkgpMeshInternals::VertexPointer const&)
hkgpAbstractMeshDefinitions::List<hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Triangle, hkgpAbstractMeshDefinitions::List<hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex, hkgpTriangulatorBase::VertexBase, hkGeometryProcessing::PoolAllocator<hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex, 32, hkContainerHeapAllocator> >::Item, hkGeometryProcessing::PoolAllocator<hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Triangle, 32, hkContainerHeapAllocator> >::allocate()
hkgpAbstractMesh<hkgpMeshBase::Edge, hkgpMeshBase::Vertex, hkgpMeshBase::Triangle, hkContainerHeapAllocator>::checkTopology(bool) const
hkSimdFloat32 hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::closest<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>, NearestFeaturePolicy>(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr> const&, hkVector4f const&, NearestFeaturePolicy&, hkSimdFloat32 const&)
hkgpMeshInternals::ConcaveEdgeJob::run()
hkgpJobQueue::push(hkgpJobQueue::IJob*)
hkArray<hkgpMeshInternals::ConcaveEdgeJob*, hkContainerHeapAllocator>::pushBack(hkgpMeshInternals::ConcaveEdgeJob* const&)
hkArray<hkPointerMap<hkgpMeshBase::Vertex*, hkgpMeshBase::Vertex*, hkContainerHeapAllocator>*, hkContainerHeapAllocator>::setSize(int)
hkgpAbstractMeshDefinitions::List<hkgpMeshBase::Vertex, hkgpAbstractMeshDefinitions::List<hkgpMeshBase::Vertex, hkgpMeshBase::BaseVertex, hkGeometryProcessing::PoolAllocator<hkgpMeshBase::Vertex, 32, hkContainerHeapAllocator> >::Item, hkGeometryProcessing::PoolAllocator<hkgpMeshBase::Vertex, 32, hkContainerHeapAllocator> >::allocate(hkgpMeshBase::Vertex const&)
hkArrayBase<hkArray<hkgpMeshBase::Edge, hkContainerHeapAllocator> >::_setSize(hkMemoryAllocator&, int)
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::partition()
hkgpMeshInternals::createRing(hkgpMeshBase::Edge)
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::setDomain(hkVector4f const&, hkVector4f const&, float, bool)
hkArray<hkgpMeshBase::Vertex*, hkContainerHeapAllocator>::setSize(int)
hkcdGsk::GetClosestPointStatus hkcdGskImpl<IConvexOverlapImpl::ShapeInterface>::getClosestPoint<IConvexOverlapImpl::ShapeInterface>(IConvexOverlapImpl::ShapeInterface const*, void const*, void const*, hkcdGsk::GetClosestPointInput const&, IConvexOverlapImpl::ShapeInterface*, hkcdGsk::GetClosestPointOutput&)
hkArrayBase<hkArray<hkgpMeshBase::Edge, hkContainerHeapAllocator>*>::_reserve(hkMemoryAllocator&, int)
hkGeometryProcessing::PoolAllocator<hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex, 32, hkContainerHeapAllocator>::allocateNewPool()
hkGeometryProcessing::PoolAllocator<hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Triangle, 32, hkContainerHeapAllocator>::allocateNewPool()
hkgpAbstractMesh<hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Triangle, hkContainerHeapAllocator>::~hkgpAbstractMesh()
hkGeometryProcessing::PoolAllocator<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, 32, hkContainerHeapAllocator>::allocateNewPool()
hkGeometryProcessing::HashTable<hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>::EdgeDataBox, hkContainerHeapAllocator>::insert(int, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>::EdgeDataBox const&)
hkGeometryProcessing::PoolAllocator<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, 32, hkContainerHeapAllocator>::allocate()
void hkgpTriangulatorBase::EdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator> >::backupBothEdgeData<hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge>(hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>&, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge, hkgpTriangulatorBase::EdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator> >::EdgeDataState&)
hkgpMesh::Location::Location()
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>, hkcdTreeQueriesStacks::Dynamic<64, unsigned long>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsWithEarlyExitWrapper<CollideShapeTriangle> >(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr> const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned long>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsWithEarlyExitWrapper<CollideShapeTriangle>&)
hkgpCgoInternal::checkTwist(int, int, hkVector4f const&, hkArrayBase<hkgpCgoInternal::HTriangle> const&) const
hkgpIndexedMesh::collapseEdge(hkArray<hkgpIndexedMeshDefinitions::Triangle*, hkContainerHeapAllocator> const&, hkgpIndexedMeshDefinitions::Edge, hkgpIndexedMeshDefinitions::Edge*, hkgpIndexedMesh::IEdgeCollapse*)
hkgpIndexedMesh::flipEdge(hkgpIndexedMeshDefinitions::Edge)
void hkAlgorithm::quickSortRecursive<int, hkAlgorithm::less<int> >(int*, int, int, hkAlgorithm::less<int>)
hkgpIndexedMesh::computeSets(hkgpIndexedMesh::EdgeBarrier const&)
hkListAgent3::initAgentFunc(hkpCollisionDispatcher::Agent3Funcs&)
hkpLimitedHingeConstraintData::Atoms::Atoms(hkFinishLoadedObjectFlag)
hkpLinearClearanceConstraintData::Atoms::Atoms(hkFinishLoadedObjectFlag)
hkpPrismaticConstraintData::Atoms::Atoms(hkFinishLoadedObjectFlag)
hkpBreakableMultiMaterial::InverseMapping::InverseMapping(hkFinishLoadedObjectFlag)
std::vector<rglCorner_skin_data, std::allocator<rglCorner_skin_data> >::_M_default_append(unsigned long)
void std::vector<rglSound*, std::allocator<rglSound*> >::_M_emplace_back_aux<rglSound* const&>(rglSound* const&)
std::_Rb_tree<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int>, std::_Select1st<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned int> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
std::vector<InMemoryFileData*, std::allocator<InMemoryFileData*> >::_M_default_append(unsigned long)
hkpCollisionDispatcher::registerAlternateShapeType(hkcdShapeType::ShapeTypeEnum, hkcdShapeType::ShapeTypeEnum)
hkPredGskAgent3::registerAgent3(hkpCollisionDispatcher*, hkcdShapeType::ShapeTypeEnum, hkcdShapeType::ShapeTypeEnum)
hkLargeBlockAllocator::FixedMemoryBlockServer::FixedMemoryBlockServer(void*, int)
std::vector<Server_data_cell, std::allocator<Server_data_cell> >::_M_default_append(unsigned long)
void std::vector<Agent_group_class, std::allocator<Agent_group_class> >::_M_emplace_back_aux<Agent_group_class>(Agent_group_class&&)
void std::vector<Multiplayer_profile, std::allocator<Multiplayer_profile> >::_M_emplace_back_aux<Multiplayer_profile const&>(Multiplayer_profile const&)
void std::vector<Network_buffer, std::allocator<Network_buffer> >::_M_emplace_back_aux<Network_buffer const&>(Network_buffer const&)
std::vector<bool, std::allocator<bool> >::_M_insert_aux(std::_Bit_iterator, bool)
void std::vector<Mission_object, std::allocator<Mission_object> >::_M_emplace_back_aux<Mission_object const&>(Mission_object const&)
void std::vector<rglManifold_edge, std::allocator<rglManifold_edge> >::_M_emplace_back_aux<rglManifold_edge>(rglManifold_edge&&)
std::vector<rglString, std::allocator<rglString> >::reserve(unsigned long)
void std::vector<rglManifold_vertex, std::allocator<rglManifold_vertex> >::_M_emplace_back_aux<rglManifold_vertex const&>(rglManifold_vertex const&)
std::vector<Multiplayer_profile, std::allocator<Multiplayer_profile> >::_M_erase(__gnu_cxx::__normal_iterator<Multiplayer_profile*, std::vector<Multiplayer_profile, std::allocator<Multiplayer_profile> > >)
void std::vector<rglHyperlink_value_types, std::allocator<rglHyperlink_value_types> >::_M_emplace_back_aux<rglHyperlink_value_types>(rglHyperlink_value_types&&)
void std::vector<long long, std::allocator<long long> >::_M_emplace_back_aux<long long>(long long&&)
void std::deque<Control_stream_element, std::allocator<Control_stream_element> >::_M_push_back_aux<Control_stream_element const&>(Control_stream_element const&)
void std::vector<unsigned char*, std::allocator<unsigned char*> >::_M_emplace_back_aux<unsigned char* const&>(unsigned char* const&)
hkFileSystem::Iterator::Iterator(hkFileSystem*, char const*, char const*)
hkBufferedStreamReader::Buffer::Buffer(int)
hkFileSystem::_handleFlags(hkStreamWriter*, hkFileSystem::OpenFlags)
hkVariantDataUtil::convertUint32ToTypeArray(unsigned int const*, hkClassMember::Type, void*, int)
hkStackTracer::CallTree::CallTree(hkStackTracer::CallTree const&)
hkMonitorStream::readCommandFloat(char const**, hkMonitorStream::CommandStreamConfig const&)
hkcdPlanarGeometryPrimitives::Plane::Plane(hkFinishLoadedObjectFlag)
hkArrayBase<hkArray<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, hkContainerHeapAllocator> >::_setSize(hkMemoryAllocator&, int)
hkArrayBase<hkcdNewCellsCollection::Cell>::_expandOne(hkMemoryAllocator&)
hkArray<hkcdConvexCellsTree3D::Vertex, hkContainerHeapAllocator>::expandOne()
hkArrayBase<hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator> >::_setSize(hkMemoryAllocator&, int)
hkcdConvexCellsTree3D::collectLeafCells(hkArray<hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>, hkContainerHeapAllocator>&) const
hkcdConvexCellsTree3D::getUniqueFaceIdsFromCellIds(hkArray<hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>, hkContainerHeapAllocator> const&, hkArray<unsigned int, hkContainerHeapAllocator>&)
hkcdConvexCellsTree3D::markBoundaryCells(hkcdPlanarGeometry const&, hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator> const&, hkcdPlanarEntityDebugger*)
hkcdConvexCellsTree3D::Data::~Data()
hkcdSimdTreeUtils::Build::build(hkcdSimdTree::BuildContext&, hkcdSimdTree&, hkcdSimdTreeUtils::Build::IRefit const*)
bool hkcdStaticTree::Filtering<1>::computeFilter<hkcdStaticMeshTreeBase>(hkcdStaticMeshTreeBase const&, hkcdStaticMeshTreeBase::NodeContext const&, unsigned int*)
hkBinaryPackfileReader::SectionHeaderArray::SectionHeaderArray()
hkTypeManager::_addBuiltIn(hkTypeManager::SubType)
hkPackfileWriter::hkPackfileWriter(hkPackfileWriter::Options const&)
hkBindingClassNameRegistry::ClassAllocationsTracker::~ClassAllocationsTracker()
hkMeshVertexBufferUtil::setElementVectorArray(hkMeshVertexBuffer::LockedVertices::Buffer const&, float const*, int)
hkImage::Descriptor::Descriptor(hkImage::Descriptor const&)
hkp3AxisSweep::beginOverlapCheckMarker(hkp3AxisSweep::hkpBpMarker*, hkp3AxisSweep::hkpBpNode&, int, hkp3AxisSweep::hkpBpNode&, hkArray<hkpBroadPhaseHandlePair, hkContainerHeapAllocator>&)
hkp3AxisSweep::endOverlapCheckMarker(hkp3AxisSweep::hkpBpMarker*, hkp3AxisSweep::hkpBpNode&, int, hkp3AxisSweep::hkpBpNode&, hkArray<hkpBroadPhaseHandlePair, hkContainerHeapAllocator>&)
hkLineSegmentUtil::closestPointInfLineInfLine(hkVector4f const&, hkVector4f const&, hkVector4f const&, hkVector4f const&, hkLineSegmentUtil::ClosestPointInfLineInfLineResult&)
hkpMoppCostFunction::hkpMoppCostFunction(hkpMoppCostFunction::hkpMoppSplitCostParams const&)
hkpMoppDefaultAssembler::hkpMoppDefaultAssembler(hkpMoppAssembler::hkpMoppAssemblerParams const&, hkpMoppCodeGenerator*, hkpMoppMediator*)
hkpSimulation::resetCollisionInformationForEntities(hkpEntity**, int, hkpWorld*, hkpSimulation::ResetCollisionInformation)
hkpConstraintInstance::clone(hkpEntity*, hkpEntity*, hkpConstraintInstance::CloningMode) const
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::Tree()
hkArrayBase<hkcdStaticMeshTreeBase::Section>::_setSize(hkMemoryAllocator&, int)
hkArray<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::VertexMap, hkContainerHeapAllocator>::hkArray(int, hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::VertexMap const&)
hkArray<hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::RootToSectionData, hkContainerHeapAllocator>::hkArray(int)
hkpBroadPhase::hkpBroadPhase(hkpBroadPhase::BroadPhaseType, int, int)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage16>::kineticUpdate(unsigned short, hkAabb const&)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::kineticUpdate(unsigned int, hkAabb const&)
hkpVehicleLinearCastBatchingManager::getLinearCastBatchFromBuffer(void*, int, hkpVehicleLinearCastBatchingManager::LinearCastBatch&, hkArray<hkpVehicleInstance*, hkContainerHeapAllocator>&)
hkpVehicleRayCastBatchingManager::getRaycastBatchFromBuffer(void*, int, hkpVehicleRayCastBatchingManager::RaycastBatch&, hkArray<hkpVehicleInstance*, hkContainerHeapAllocator>&)
hkTypeManager::Type::getTypePath(hkTypeManager::Type*, hkArray<hkTypeManager::Type*, hkContainerHeapAllocator>&)
hkDataObjectDict::_readAccess(_hkDataObject_MemberHandle const*, hkTypeManager::SubType)
hkVariantDataUtil::setReals(hkClassMember::Type, int, float const*, void*, int)
hkVariantDataUtil::reserveArray(void*, hkClassMember::Type, hkClass const*, int)
hkVariantDataUtil::calcNumReals(hkClassMember::Type, int)
hkPlatformObjectWriter::Cache::~Cache()
hkBufferedStreamWriter::seek(int, hkStreamWriter::SeekWhence)
hkMemoryTrackStreamReader::hkMemoryTrackStreamReader(hkMemoryTrack const*, hkMemoryTrackStreamReader::MemoryType, bool)
bool hkcdGskImpl<hkcdGsk_Vector4ShapeInterface>::linearCast<hkcdGsk::Cache>(hkcdGsk_Vector4ShapeInterface const*, void const*, void const*, hkcdGsk::LinearCastInput const&, hkcdGsk::Cache*, hkSimdFloat32&, hkVector4f&)
hkGeometryUtils::Node::Edge::Edge(unsigned int, hkGeometryUtils::Node::Triangle const&, unsigned int)
hkGeometryProcessing::SurfaceSampler::searchElement(float) const
hkArrayBase<hkgpMeshBase::Vertex*>::_setSize(hkMemoryAllocator&, int, hkgpMeshBase::Vertex* const&)
hkGeometryProcessing::HashTable<hkgpMesh::SingleEdge, hkContainerHeapAllocator>::setBucketsCount(int)
hkGeometryProcessing::HashTable<hkgpMeshInternals::VertexPointer, hkContainerHeapAllocator>::setBucketsCount(int)
hkgpConvexHull::buildFromPlanes(hkVector4f const*, int, hkVector4f const&, hkgpConvexHull::BuildConfig const&)
hkArrayBase<hkgpMeshBase::Edge>::_reserve(hkMemoryAllocator&, int)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>, hkcdTreeQueriesStacks::Dynamic<64, unsigned long>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsWithEarlyExitWrapper<hkgpMeshInternals::TriangleOverlap> >(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr> const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned long>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsWithEarlyExitWrapper<hkgpMeshInternals::TriangleOverlap>&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsWithEarlyExitWrapper<hkgpMeshInternals::SimpleCollector> >(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr> const&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsWithEarlyExitWrapper<hkgpMeshInternals::SimpleCollector>&)
hkgpAbstractMeshDefinitions::List<hkgpMeshBase::Triangle, hkgpAbstractMeshDefinitions::List<hkgpMeshBase::Vertex, hkgpMeshBase::BaseVertex, hkGeometryProcessing::PoolAllocator<hkgpMeshBase::Vertex, 32, hkContainerHeapAllocator> >::Item, hkGeometryProcessing::PoolAllocator<hkgpMeshBase::Triangle, 32, hkContainerHeapAllocator> >::allocate(hkgpMeshBase::Triangle const&)
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>, hkcdTreeQueriesStacks::Dynamic<64, unsigned long>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ClosestFromPointWrapper<NearestFeaturePolicy> >(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr> const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned long>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::ClosestFromPointWrapper<NearestFeaturePolicy>&)
hkGeometryProcessing::PoolAllocator<hkgpMeshBase::Vertex, 32, hkContainerHeapAllocator>::allocate(hkgpMeshBase::Vertex const&)
hkcdGskImpl<IConvexOverlapImpl::ShapeInterface>::getClosestPointImpl(IConvexOverlapImpl::ShapeInterface const*, void const*, void const*, hkcdGsk::GetClosestPointInput const&, hkVector4f const*, hkPadSpu<int>&, hkPadSpu<int>&, hkcdGsk::GetClosestPointOutput&)
hkGeometryProcessing::HashTable<hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>::EdgeDataBox, hkContainerHeapAllocator>::setBucketsCount(int)
void hkSortedTree<hkgpCgoInternal::EdgeInfo*, hkgpCgoInternal::EdgeInfo, int, 16>::traverseMinMax<hkgpCgoInternal::ErrorCollector>(hkgpCgoInternal::ErrorCollector&, int) const
hkp6DofConstraintData::Blueprints::Blueprints(hkFinishLoadedObjectFlag)
hkpListAgent::initAgentFunc(hkpCollisionDispatcher::AgentFuncs&)
hkpListAgent::initAgentFuncInverse(hkpCollisionDispatcher::AgentFuncs&)
hkpCollectionAgent3::initAgentFunc(hkpCollisionDispatcher::Agent3Funcs&)
hkpCollectionCollectionAgent3::initAgentFunc(hkpCollisionDispatcher::Agent3Funcs&)
hkConvexListAgent3::initAgentFunc(hkpCollisionDispatcher::Agent3Funcs&)
hkPredGskAgent3::initAgentFunc(hkpCollisionDispatcher::Agent3Funcs&)
hkpBoxBoxAgent::initAgentFunc(hkpCollisionDispatcher::AgentFuncs&)
hkBoxBoxAgent3::initAgentFunc(hkpCollisionDispatcher::Agent3Funcs&)
hkpSphereSphereAgent::initAgentFunc(hkpCollisionDispatcher::AgentFuncs&)
hkpSphereTriangleAgent::initAgentFuncInverse(hkpCollisionDispatcher::AgentFuncs&)
hkpCollisionDispatcher::registerCollisionAgent2(hkpCollisionDispatcher::AgentFuncs&, hkcdShapeType::ShapeTypeEnum, hkcdShapeType::ShapeTypeEnum)
hkpSphereTriangleAgent::initAgentFunc(hkpCollisionDispatcher::AgentFuncs&)
hkpCapsuleTriangleAgent::initAgentFuncInverse(hkpCollisionDispatcher::AgentFuncs&)
hkpCapsuleTriangleAgent::initAgentFunc(hkpCollisionDispatcher::AgentFuncs&)
hkStackTracer::CallTree::swap(hkStackTracer::CallTree&)
hkXmlPackfileReader::readHeader(hkStreamReader*, hkSerializeDeprecated::XmlPackfileHeader&)
hkMeshTexture::Sampler::Sampler()
hkMeshVertexBufferUtil::setElementVectorArray(hkMeshVertexBuffer::LockedVertices const&, int, float const*)
hkMeshVertexBufferUtil::isBufferNormalDataEqual(hkMeshVertexBuffer::LockedVertices::Buffer const&, hkMeshVertexBuffer::LockedVertices::Buffer const&, hkSimdFloat32 const&)
hkpSampledHeightFieldShape::hkpSampledHeightFieldShape(hkpSampledHeightFieldBaseCinfo const&, hkpSampledHeightFieldShape::HeightFieldType)
hkpLinearClearanceConstraintData::setInBodySpace(hkpLinearClearanceConstraintData::Type, hkVector4f const&, hkVector4f const&, hkVector4f const&, hkVector4f const&, hkVector4f const&, hkVector4f const&)
hkpVehiclePerWheelSimulation::applySuspensionForces(hkStepInfo const&, hkpVehicleSimulation::SimulationInput const&)
hkpVehiclePerWheelSimulation::applyAerodynamicForces(hkStepInfo const&, hkpVehicleSimulation::SimulationInput const&)
hkVariantDataUtil::setReal(hkClassMember::Type, void*, float)
hkVariantDataUtil::getString(hkClassMember::Type, void const*)
hkgpConvexHullImpl::simplify(hkgpConvexHull::SimplifyConfig const&)
hkgpIndexedMesh::getSetTriangles(int, hkArray<hkgpIndexedMeshDefinitions::Triangle*, hkContainerHeapAllocator>&) const
hkgpMesh::checkEdgeCollapseConvex(hkgpMesh::FanEdgeCollector const&, hkgpMeshBase::Edge) const
hkgpMesh::FanEdgeCollector::countPlanes() const
void hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::unary<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>, hkcdTreeQueriesStacks::Dynamic<64, unsigned long>, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsWithEarlyExitWrapper<hkgpMeshInternals::SimpleCollector> >(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr> const&, hkcdTreeQueriesStacks::Dynamic<64, unsigned long>&, hkcdTreeQueries<hkcdTreeQueriesStacks::Dynamic, 64, 0>::AabbOverlapsWithEarlyExitWrapper<hkgpMeshInternals::SimpleCollector>&)
hkMemoryMeshTexture::Sampler::Sampler(hkStringPtr const&)
hkMeshVertexBufferUtil::getElementVectorArray(hkMeshVertexBuffer::LockedVertices const&, int, float*)
hkpGskfAgent::initAgentFunc(hkpCollisionDispatcher::AgentFuncs&)
void std::vector<rglRender_postFX_Node*, std::allocator<rglRender_postFX_Node*> >::emplace_back<rglRender_postFX_Node*>(rglRender_postFX_Node*&&)
hkMonitorStreamStringMap::StringMap::StringMap(hkFinishLoadedObjectFlag)
hkVariantDataUtil::getReal(hkClassMember::Type, void const*)
hkSkinnedMeshShape::BoneSection::BoneSection(hkFinishLoadedObjectFlag)
hkpSingleThreadedJobsOnIsland::cpuBroadPhaseJob(hkpMtThreadStructure&, hkJobQueue&, hkJobQueue::JobQueueEntry&)
hkRootLevelContainer::NamedVariant::NamedVariant(hkFinishLoadedObjectFlag)
std::vector<rglParticle, std::allocator<rglParticle> >::_M_default_append(unsigned long)
std::vector<directx_thread_call, std::allocator<directx_thread_call> >::~vector()
nv_dds::CDDSImage::flip_blocks_dxtc3(nv_dds::DXTColBlock*, unsigned int)
nv_dds::CSurface::CSurface()
nv_dds::CDDSImage::create_texture3D(unsigned int, unsigned int, nv_dds::CTexture const&)
nv_dds::CDDSImage::size_dxtc(unsigned int, unsigned int)
std::map<unsigned char*, int, std::less<unsigned char*>, std::allocator<std::pair<unsigned char* const, int> > >::~map()
hkDefaultError::message(hkError::Message, int, char const*, char const*, int)
hkFileSystem::TimeStamp::set(unsigned long)
hkLifoAllocator::getMemoryStatistics(hkMemoryAllocator::MemoryStatistics&) const
hkMallocAllocator::getMemoryStatistics(hkMemoryAllocator::MemoryStatistics&) const
hkFileSystem::Iterator::Impl::~Impl()
hkSocket::ReaderAdapter::read(void*, int)
hkSocket::WriterAdapter::~WriterAdapter()
hkSocket::ReaderAdapter::~ReaderAdapter()
hkStackTracer::CallTree::operator=(hkStackTracer::CallTree const&)
hkStackTracer::CallTree::isEmpty() const
hkStackTracer::CallTree::insertCallStack(hkStackTracer&)
hkArrayStreamWriter::seek(int, hkStreamWriter::SeekWhence)
hkBufferedStreamReader::seek(int, hkSeekableStreamReader::SeekWhence)
hkFreeListAllocator::getMemoryStatistics(hkMemoryAllocator::MemoryStatistics&) const
hkFreeListAllocator::Cinfo::removeAt(int)
hkMonitorStreamAnalyzer::reverseLookupNodeAtTgaSample(int, int, hkArrayBase<hkMonitorStreamAnalyzer::Node*> const&, hkMonitorStreamAnalyzer::ThreadDrawInput const&, hkArray<hkArray<hkMonitorStreamFrameInfo, hkContainerHeapAllocator>, hkContainerHeapAllocator>&)
hkMonitorStreamAnalyzer::drawThreadsToTga(hkMonitorStreamAnalyzer::ThreadDrawInput const&, hkOstream&)
hkcdPlanarGeometryPrimitives::Collection<28>::~Collection()
hkcdPlanarSolid::NodeStorage::~NodeStorage()
hkcdPlanarSolid::ArrayMgr::~ArrayMgr()
hkcdPlanarGeometry::extractPolygonsGeometry(hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator> const&, hkGeometry&) const
hkcdPlanarGeometry::VertexStorage::~VertexStorage()
hkcdPlanarGeometryPlanesCollection::append(hkcdPlanarGeometryPlanesCollection const&, hkArray<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, hkContainerHeapAllocator>*)
hkcdPlanarGeometryPredicates::approximateEdgeDirection(hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkIntVector&)
hkcdPlanarSolid::buildTree(hkcdPlanarGeometry&, hkPseudoRandomGenerator&, hkArray<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, hkContainerHeapAllocator>&, hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator> const&, bool, hkcdPlanarEntityDebugger*)
hkcdPlanarSolid::classifyInsideOrBoundaryPolygons(hkcdPlanarGeometry&, hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator> const&, hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator>&, hkcdPlanarSolid::ArrayMgr*)
hkcdConvexCellsTree3D::collectCellPlaneIds(hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>, hkArray<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, hkContainerHeapAllocator>&) const
hkcdConvexCellsTree3D::extractCellGeometry(hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>, hkGeometry&) const
hkcdConvexCellsTree3D::collectCellVerticesD(hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant> const*, int, hkArray<hkVector4d, hkContainerHeapAllocator>&) const
hkcdConvexCellsTree3D::collectCellVerticesInt(hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant> const*, int, hkArray<hkIntVector, hkContainerHeapAllocator>&) const
hkcdConvexCellsTree3D::buildSolidFromSubsetOfCells(hkArray<hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>, hkContainerHeapAllocator> const&) const
hkcdConvexCellsTree<hkcdNewCellsCollection::Cell, hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>, hkcdNewCellsCollection>::~hkcdConvexCellsTree()
hkcdDynamicTree::DefaultTree32Storage::staticClass()
hkcdDynamicTree::DynamicStorage16::staticClass()
hkcdStaticMeshTreeBase::Section::SharedVertices::staticClass()
hkcdStaticTree::DefaultTreeStorage32::staticClass()
hkcdStaticTree::DynamicStorage32::staticClass()
hkcdSimdTreeUtils::Build::splitRangeInFourSinglePass(hkcdSimdTree::BuildContext&, hkcdSimdTreeUtils::Build::Range const&, hkcdSimdTreeUtils::Build::Range*)
hkcdStaticMeshTreeBase::Connectivity::getMemoryFootPrint() const
hkcdDynamicAabbTree::getAllPairs(hkcdDynamicAabbTree const*, hkcdAabbTreeQueries::AllPairsCollector*) const
hkcdDynamicAabbTree::castRay(hkVector4f const&, hkVector4f const&, hkcdAabbTreeQueries::RaycastCollector*) const
hkcdStaticAabbTree::getClosestPoint(hkVector4f const&, hkSimdFloat32 const&, hkcdAabbTreeQueries::ClosestPointCollector*, hkVector4f&) const
hkcdStaticAabbTree::getAllPairs(hkcdStaticAabbTree const*, hkcdAabbTreeQueries::AllPairsCollector*) const
hkcdStaticAabbTree::getAllPairs(hkcdAabbTreeQueries::AllPairsCollector*) const
hkcdStaticAabbTree::castRay(hkVector4f const&, hkVector4f const&, hkcdAabbTreeQueries::RaycastCollector*) const
hkSerializeDeprecated2::isLoadable(hkSerializeUtil::FormatDetails const&)
hkSerializeDeprecated2::loadOldPackfile(hkStreamReader&, hkSerializeUtil::FormatDetails const&, hkSerializeUtil::ErrorDetails*)
hkSerializeDeprecated2::saveXmlPackfile(void const*, hkClass const&, hkStreamWriter*, hkPackfileWriter::Options const&, hkPackfileWriter::AddObjectListener*, hkSerializeUtil::ErrorDetails*)
hkBinaryPackfileReader::BinaryPackfileData::~BinaryPackfileData()
hkBindingClassNameRegistry::registerRenames(hkVersionRegistry::ClassRename const*)
hkMemoryMeshTexture::setData(unsigned char*, int, hkMeshTexture::Format)
hkMemoryMeshTexture::Sampler::~Sampler()
hkMemoryMeshVertexBuffer::unlock(hkMeshVertexBuffer::LockedVertices const&)
hkMemoryMeshVertexBuffer::setElementIntArray(hkMeshVertexBuffer::LockedVertices const&, int, int const*)
hkMemoryMeshVertexBuffer::calculateElementOffset(hkVertexFormat const&, hkVertexFormat::ComponentUsage, int)
hkMeshPrimitiveUtil::copyPrimitives(void const*, hkMeshSection::PrimitiveType, hkMeshSection::MeshSectionIndexType, int, void*, hkMeshSection::PrimitiveType, hkMeshSection::MeshSectionIndexType, int)
hkMeshVertexBufferUtil::getElementVectorArray(hkMeshVertexBuffer::LockedVertices const&, int, hkBitField const&, float*)
hkMeshVertexBufferUtil::getElementVectorArray(hkMeshVertexBuffer*, hkVertexFormat::ComponentUsage, int, hkArray<hkVector4f, hkContainerHeapAllocator>&)
hkMeshVertexBufferUtil::isBufferDataEqual(hkMeshVertexBuffer::LockedVertices::Buffer const*, hkMeshVertexBuffer::LockedVertices::Buffer const*, int, hkMeshVertexBufferUtil::Thresholds const&)
hkMeshVertexBufferUtil::isContiguous(hkMeshVertexBuffer::LockedVertices const&, void**, int&)
hkMultipleVertexBuffer::setElementIntArray(hkMeshVertexBuffer::LockedVertices const&, int, int const*)
hkp3AxisSweep::castAabb(hkpBroadPhase::hkpCastAabbInput const&, hkpBroadPhaseCastCollector&) const
hkpBroadPhase::getCapabilityDelegate(hkpBroadPhase::Capabilities) const
hkpBvTreeAgent::LinearCastAabbCastCollector::addHit(unsigned int)
hkpBvTreeAgent::LinearCastAabbCastCollector::~LinearCastAabbCastCollector()
hkpCapsuleTriangleAgent::getClosestPoint(hkpCdBody const&, hkpCdBody const&, hkpCollisionInput const&, hkpCollideTriangleUtil::PointTriangleDistanceCache&, hkContactPoint&)
hkpCollidable::BoundingVolumeData::staticClass()
hkpSampledHeightFieldShape::CoarseMinMaxLevel::staticClass()
hkpPlaneShape::collideSpheres(hkpHeightFieldShape::CollideSpheresInput const&, hkVector4f*) const
hkpPlaneShape::castSphere(hkpHeightFieldShape::hkpSphereCastInput const&, hkpCdBody const&, hkpRayHitCollector&) const
hkpStorageExtendedMeshShape::MeshSubpartStorage::~MeshSubpartStorage()
hkpStorageExtendedMeshShape::MeshSubpartStorage::~MeshSubpartStorage()
hkpStorageSampledHeightFieldShape::calcSizeForSpu(hkpShape::CalcSizeForSpuInput const&, int) const
hkpStorageSampledHeightFieldShape::collideSpheres(hkpHeightFieldShape::CollideSpheresInput const&, hkVector4f*) const
hkpCompressedMeshShape::Chunk::getTriangle(int, float, hkVector4f&, hkVector4f&, hkVector4f&) const
hkpCompressedMeshShape::getChunkAabb(hkpCompressedMeshShape::Chunk const&, hkAabb&)
hkpCompressedMeshShape::getConvexPieceAabb(hkpCompressedMeshShape::ConvexPiece const&, hkAabb&)
hkpCompressedSampledHeightFieldShape::collideSpheres(hkpHeightFieldShape::CollideSpheresInput const&, hkVector4f*) const
hkpExtendedMeshShape::calcSizeForSpu(hkpShape::CalcSizeForSpuInput const&, int) const
hkpExtendedMeshShape::assertTrianglesSubpartValidity(hkpExtendedMeshShape::TrianglesSubpart const&)
hkpExtendedMeshShape::addTrianglesSubpart(hkpExtendedMeshShape::TrianglesSubpart const&)
hkpExtendedMeshShape::addShapesSubpart(hkpExtendedMeshShape::ShapesSubpart const&)
hkpRagdollConstraintData::Atoms::staticClass()
hkpRagdollLimitsData::Atoms::staticClass()
hkpWheelFrictionConstraintData::Runtime::staticClass()
hkp6DofConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpDeformableFixedConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpHingeLimitsData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpHingeLimitsData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpLinearClearanceConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpPointToPlaneConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpPrismaticConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpPrismaticConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpPulleyConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpRagdollLimitsData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpRotationalConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpRotationalConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpStiffSpringConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpWheelConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpWheelConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpWorld::reintegrateAndRecollideEntities(hkpEntity**, int, hkpWorld::ReintegrationRecollideMode)
hkpBallSocketChainData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpBreakableConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpBreakableMultiMaterial::InverseMapping::~InverseMapping()
hkpJobQueueUtils::popIntegrateJob(hkJobQueue&, hkJobQueue::DynamicData*, hkJobQueue::JobQueueEntry&, hkJobQueue::JobQueueEntry&)
hkpExtendedMeshShapeBreakableMaterial::getShapeKeysForSubShapes(hkcdShape const*, unsigned int const*, int, hkpBreakableMaterial::ShapeKeyCollector*) const
hkpListShapeBreakableMaterial::getShapeKeysForSubShapes(hkcdShape const*, unsigned int const*, int, hkpBreakableMaterial::ShapeKeyCollector*) const
hkpReportContactMgr::Factory::createContactMgr(hkpCollidable const&, hkpCollidable const&, hkpCollisionInput const&)
hkpReportContactMgr::Factory::~Factory()
hkpSimpleConstraintContactMgr::Factory::createContactMgr(hkpCollidable const&, hkpCollidable const&, hkpCollisionInput const&)
hkpSimpleContactConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpBreakableMaterial::ShapeKeyCollector::addContiguousShapeKeyRange(unsigned int, int)
hkpBreakableMaterial::ShapeKeyCollector::~ShapeKeyCollector()
hkArray<hkcdDynamicTree::CodecRawUint, hkContainerHeapAllocator>::expandBy(int)
hkArrayBase<unsigned int>::copyFromArray(hkMemoryAllocator&, hkArrayBase<unsigned int> const&, hkTrait::TraitBool<true>)
void hkAlgorithm::_explicitStackQuickSort<unsigned int, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::SAHBin::Sorter>(unsigned int*, int, hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::SAHBin::Sorter)
hkpConstraintProjectorInternal::compareMass(hkpConstraintProjectorInternal::ConstraintData const&, hkpConstraintProjectorInternal::ConstraintData const&)
hkpToiResourceMgr::cannotSolve(hkArray<hkpToiResourceMgr::ConstraintViolationInfo, hkContainerHeapAllocator>&)
hkpMoppDefaultAssembler::getScaleInfo(hkpMoppTreeNode*, hkpMoppCode::CodeInfo*)
hkpSimpleConstraintInfo::BodyInfo::getEnergy(hkpBodyVelocity const&) const
hkpTreeBroadPhase::getCapabilityDelegate(hkpBroadPhase::Capabilities) const
hkpTreeBroadPhase32::getCapabilityDelegate(hkpBroadPhase::Capabilities) const
hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::CustomGeometryConverter::~CustomGeometryConverter()
hkpKeyFrameUtility::KeyFrameInfo::fastSetUsingPositionOrientationPair(hkVector4f const&, hkQuaternionf const&, hkVector4f const&, hkQuaternionf const&, float)
hkpPhysicsSystemWithContacts::clone(hkpPhysicsSystem::CloneConstraintMode) const
hkpPoweredChainMapper::buildChainMapper(hkpPoweredChainMapper::Config, hkArray<hkpConstraintInstance*, hkContainerHeapAllocator> const&, hkArray<hkpPoweredChainMapper::ChainEndpoints, hkContainerHeapAllocator> const&, hkArray<hkpConstraintInstance*, hkContainerHeapAllocator>*)
hkpVehicleInstance::WheelInfo::staticClass()
hkpVehiclePerWheelSimulation::WheelData::staticClass()
hkpVehicleDefaultAnalogDriverInput::calcBrakeInput(float, hkpVehicleInstance const*, hkpVehicleDriverInputAnalogStatus const*, hkpVehicleDriverInput::FilteredDriverInputOutput&) const
hkpVehicleDefaultBrake::calcBreakingInfo(float, hkpVehicleInstance const*, hkpVehicleDriverInput::FilteredDriverInputOutput const&, hkpVehicleBrake::WheelBreakingOutput&)
hkpVehicleDefaultEngine::calcEngineInfo(float, hkpVehicleInstance const*, hkpVehicleDriverInput::FilteredDriverInputOutput const&, hkpVehicleTransmission::TransmissionOutput const&, hkpVehicleEngine::EngineOutput&)
hkpVehicleDefaultSimulation::simulateVehicle(hkpVehicleInstance*, hkStepInfo const&, hkpVehicleSimulation::SimulationInput const&, hkpVehicleJobResults*)
hkpVehicleDefaultSteering::calcMainSteeringAngle(float, hkpVehicleInstance const*, hkpVehicleDriverInput::FilteredDriverInputOutput const&, hkpVehicleSteering::SteeringAnglesOutput&)
hkpVehicleDefaultSuspension::calcSuspension(float, hkpVehicleInstance const*, hkpVehicleWheelCollide::CollisionDetectionWheelOutput const*, float*)
hkpVehicleDefaultTransmission::calcTransmissionRPM(hkpVehicleInstance const*, hkpVehicleTransmission::TransmissionOutput&) const
hkpVehicleDefaultTransmission::calcIsReversing(hkpVehicleInstance const*, hkpVehicleTransmission::TransmissionOutput&) const
hkpVehicleLinearCastWheelCollide::collideWheels(float, hkpVehicleInstance const*, hkpVehicleWheelCollide::CollisionDetectionWheelOutput*)
hkpVehicleRayCastWheelCollide::collideWheels(float, hkpVehicleInstance const*, hkpVehicleWheelCollide::CollisionDetectionWheelOutput*)
hkpVehicleRayCastWheelCollide::castSingleWheel(hkpVehicleInstance::WheelInfo const&, hkpWorldRayCastOutput&) const
hkpVehicleSteeringAckerman::calcSteering(float, hkpVehicleInstance const*, hkpVehicleDriverInput::FilteredDriverInputOutput const&, hkpVehicleSteering::SteeringAnglesOutput&)
hkxVertexBuffer::VertexData::staticClass()
hkClassPointerVtable::TypeInfoRegistry::TypeInfoRegistry(hkClassNameRegistry const*)
ArrayOfTuplesImplementation::View::setAll(float const*, int)
ArrayOfTuplesImplementation::View::setAll(int const*, int)
ArrayOfTuplesImplementation::View::asStridedBasicArray(hkStridedBasicArray&)
StructArrayImplementation::Object::~Object()
ArrayOfTuplesImplementation::View::~View()
StructArrayImplementation::Object::accessByName(char const*)
StructArrayImplementation::Object::assign(_hkDataObject_MemberHandle const*, long)
hkSerializeDeprecated::loadOldPackfileOnHeap(hkStreamReader&, hkSerializeUtil::FormatDetails const&, hkSerializeUtil::ErrorDetails*)
hkTypeManager::getLegacyType(hkTypeManager::Type*, char const**, int&)
hkTypeManager::Type::asString() const
hkXmlObjectWriter::SequentialNameFromAddress::nameFromAddress(void const*, char*, int)
hkXmlObjectWriter::SequentialNameFromAddress::~SequentialNameFromAddress()
hkXmlParser::EndElement::~EndElement()
hkXmlParser::EndElement::~EndElement()
hkXmlParser::StartElement::~StartElement()
hkRootLevelContainer::NamedVariant::NamedVariant(char const*, hkVariant const&)
hkRadixSort::sort64(hkRadixSort::SortData64*, int, hkRadixSort::SortData64*)
hkcdGsk::getClosestPoint(hkcdVertex const*, int, hkcdVertex const*, int, hkcdGsk::GetClosestPointInput const&, hkcdGsk::Cache*, hkcdGsk::GetClosestPointOutput&)
hkcdGskBase::RayCastShapeInterface<hkcdGsk_Vector4Shape>::getSupportingVertices(void const*, hkVector4f const&, void const*, hkTransformf const&, hkcdVertex*, hkcdVertex*, hkVector4f*) const
hkGeometryUtils::GridInput::GridInput(int, hkVector4f const&)
hkGeometryUtils::getGeometryInsideAabb(hkGeometry const&, hkGeometry&, hkAabb const&, hkGeometryUtils::GetGeometryInsideAabbMode)
hkGeometryUtils::removeDuplicateTrianglesFast(hkGeometry&, hkArray<hkGeometry::Triangle, hkContainerHeapAllocator>&)
hkGeometryProcessing::IsoVertex::solveTriangle(float const*, hkGeometryProcessing::IsoVertex*, float)
hkGeometryProcessing::SurfaceSampler::findElement(int) const
hkgpConvexHull::getFarthestVertex(hkgpConvexHull::Inputs, hkVector4f const&, hkVector4f&) const
hkgpConvexHull::getIndex(hkgpConvexHull::Triangle const*) const
hkgpIndexedMesh::canFlipEdge(hkgpIndexedMeshDefinitions::Edge) const
hkgpIndexedMesh::generateStrips(hkArray<hkArray<int, hkContainerHeapAllocator>, hkContainerHeapAllocator>&, hkArray<int, hkContainerHeapAllocator>&, hkArray<int, hkContainerHeapAllocator>&, hkgpIndexedMesh::StripConfig const&) const
hkgpMesh::hasPosition(hkgpMeshBase::Triangle const*, hkVector4f const&)
hkgpMesh::createTriangle(hkgpMeshBase::Vertex*, hkgpMeshBase::Vertex*, hkgpMeshBase::Vertex*)
hkgpMesh::explodeParts(hkArray<hkgpMesh*, hkContainerHeapAllocator>&, bool, bool, bool, hkgpMesh::eHollows) const
hkgpJobQueue::Box<hkgpMeshInternals::ConcaveEdgeJob::Handle>::~Box()
hkgpJobQueue::Box<hkgpMeshInternals::ConcaveEdgeJob::Handle>::~Box()
hkgpJobQueue::IJob::~IJob()
hkgpAbstractMesh<hkgpMeshBase::Edge, hkgpMeshBase::Vertex, hkgpMeshBase::Triangle, hkContainerHeapAllocator>::reset()
hkgpAbstractMesh<hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Triangle, hkContainerHeapAllocator>::reset()
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::SAHTask::operator=(hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::SAHTask const&)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::nextLeftNode(unsigned long, unsigned long) const
hkgpJobQueue::Box<hkgpMeshInternals::ConcaveEdgeJob::Handle>::run() const
hkgpCgoInternal::ICollapse::validTriangleSet(hkArrayBase<hkgpIndexedMeshDefinitions::Triangle*> const&, hkgpIndexedMeshDefinitions::Vertex const*, hkgpIndexedMeshDefinitions::Vertex const*)
hkgpCgoInternal::ICollapse::removeTriangle(hkgpIndexedMeshDefinitions::Triangle*)
hkgpCgoInternal::getRing(int, int, hkArray<hkgpCgoInternal::HTriangle, hkContainerHeapAllocator>&) const
hkgpIndexedMesh::EdgeBarrier::~EdgeBarrier()
hkgpJobQueue::Box<hkgpCgoInternal::UpdateJob>::~Box()
hkgpJobQueue::Box<hkgpCgoInternal::UpdateJob>::run() const
hkpMeshWeldingUtility::computeWeldingInfo(hkpShapeCollection*, hkpBvTreeShape const*, hkpWeldingUtility::WeldingType, bool, bool)
hkpAngularFrictionConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkMemoryInitUtil::initFreeList(hkMemoryAllocator*, hkMemoryAllocator::ExtendedInterface*, hkMemorySystem::FrameInfo const&, hkFreeListAllocator::Cinfo const*, hkFreeListMemorySystem::SetupFlags)
hkContainerHeapAllocator::Allocator::bufRealloc(void*, int, int&)
std::vector<rglStrategic_entity*, std::allocator<rglStrategic_entity*> >::_M_default_append(unsigned long)
nv_dds::CSurface::clear()
nv_dds::CDDSImage::upload_textureCubemap()
nv_dds::CSurface::CSurface(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char const*)
nv_dds::CDDSImage::save(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool)
nv_dds::CTexture::create(unsigned int, unsigned int, unsigned int, unsigned int, unsigned char const*)
nv_dds::CDDSImage::size_rgb(unsigned int, unsigned int)
hkFileSystem::TimeStamp::get() const
hkFileSystem::listDirectory(char const*, hkFileSystem::DirectoryListing&)
hkMonitorStreamColorTable::ColorPair::staticClass()
hkPosixFileSystem::openWriter(char const*, hkFileSystem::OpenFlags)
hkFileSystem::Iterator::Impl::~Impl()
hkRefCountedProperties::Entry::staticClass()
hkSocket::ReaderAdapter::isOk() const
hkSocket::WriterAdapter::isOk() const
hkSocket::WriterAdapter::~WriterAdapter()
hkSocket::ReaderAdapter::~ReaderAdapter()
hkStackTracer::CallTree::getCallStackSize(int) const
hkStreamWriter::seek(int, hkStreamWriter::SeekWhence)
hkVariantDataUtil::setObject(hkVariant const&, hkClassMember::Type, void*)
hkFreeListAllocator::setDefaultCinfo(hkFreeListAllocator::Cinfo&)
hkFreeListAllocator::init(hkMemoryAllocator*, hkMemoryAllocator::ExtendedInterface*, hkFreeListAllocator::Cinfo const*)
hkMemoryAllocator::ExtendedInterface::~ExtendedInterface()
hkFreeListMemorySystem::mainInit(hkMemorySystem::FrameInfo const&, hkFlags<hkMemorySystem::FlagBits, int>)
hkMemorySnapshot::allocationDiff(hkMemorySnapshot const&, hkMemorySnapshot const&, hkArray<hkMemorySnapshot::Allocation, hkContainerHeapAllocator>&, hkArray<hkMemorySnapshot::Allocation, hkContainerHeapAllocator>&)
hkFreeListMemorySystem::getMemoryStatistics(hkMemorySystem::MemoryStatistics&)
hkFreeListMemorySystem::threadQuit(hkMemoryRouter&, hkFlags<hkMemorySystem::FlagBits, int>)
hkLargeBlockAllocator::FixedMemoryBlockServer::bufAlloc(int&)
hkLargeBlockAllocator::FixedMemoryBlockServer::bufFree(void*, int)
hkLargeBlockAllocator::FixedMemoryBlockServer::getMemoryStatistics(hkMemoryAllocator::MemoryStatistics&) const
hkLargeBlockAllocator::getMemoryStatistics(hkMemoryAllocator::MemoryStatistics&) const
hkLargeBlockAllocator::_checkFreeChunk(hkLargeBlockAllocator::MemChunk*)
hkLargeBlockAllocator::FixedMemoryBlockServer::blockAlloc(int)
hkMemorySnapshot::dumpAllocation(hkMemorySnapshot::Allocation const&, hkOstream&) const
hkMonitorStreamAnalyzer::ThreadDrawInput::computePerThreadHeightToFit(int, int, int, int, int)
hkString::findAllOccurrences(char const*, char const*, hkArray<int, hkContainerHeapAllocator>&, hkString::ReplaceType)
hkMonitorStreamAnalyzer::navigateMonitors(hkMonitorStreamAnalyzer::CursorKeys const&, hkMonitorStreamAnalyzer::Node*)
hkStackTracer::CallTree::getTraces(hkArray<unsigned long, hkContainerHeapAllocator>&, hkArray<int, hkContainerHeapAllocator>&) const
hkMultiThreadCheck::accessCheckWithParent(hkMultiThreadCheck const*, hkMultiThreadCheck::AccessType, hkMultiThreadCheck const&, hkMultiThreadCheck::AccessType)
hkRefCountedProperties::addPropertyInternal(unsigned short, hkReferencedObject*, hkRefCountedProperties::ReferenceCountHandling)
hkFreeList::_compareElements(hkFreeList::Element const*, hkFreeList::Element const*)
hkcdPlanarSolid::buildConvex(hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant> const*, int)
hkcdPlanarSolid::ArrayMgr::~ArrayMgr()
hkcdPlanarGeometry::removePolygons(hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator> const&)
hkcdPlanarGeometry::extractPolygonGeometry(hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkGeometry&) const
hkcdPlanarGeometry::check2dIntersection(hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant> const&, hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant> const&) const
hkcdPlanarGeometry::clipPolygon(hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>*&, hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>*&, int, hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant> const*, int)
hkcdPlanarGeometry::checkPolygonConvexity(hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant> const&)
hkcdPlanarGeometry::VertexStorage::~VertexStorage()
hkcdPlanarGeometryPredicates::coplanar(hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const*, int)
hkcdPlanarGeometryPredicates::edgeOnPlane(hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&)
hkcdPlanarGeometryPredicates::orientation(hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&)
hkcdPlanarGeometryPredicates::estimateTriangleWinding(hkcdPlanarGeometryPrimitives::Plane const (&) [3], hkcdPlanarGeometryPrimitives::Plane const (&) [3], hkcdPlanarGeometryPrimitives::Plane const (&) [3], hkcdPlanarGeometryPrimitives::Plane const&, int, int, int)
hkcdPlanarSolid::buildTree2D(hkcdPlanarGeometry&, hkPseudoRandomGenerator&, hkArray<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, hkContainerHeapAllocator>&, hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator> const&, hkcdPlanarEntityDebugger*)
hkcdPlanarSolid::invertNodeLabels(hkHandle<unsigned int, 4294967295u, hkcdPlanarSolid::NodeIdDiscriminant>)
hkcdPlanarSolid::getPlaneIdsWithValidMaterial(hkArray<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, hkContainerHeapAllocator>&) const
hkcdPlanarGeometryPrimitives::Plane::simplify()
hkcdPlanarGeometry::appendGeometryPolygons(hkcdPlanarGeometry const&, hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator> const&, hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator>&)
hkcdConvexCellsTree3D::computeBoundaryGeometry(hkArray<hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>, hkContainerHeapAllocator> const&, hkGeometry&, hkArray<unsigned long, hkContainerHeapAllocator>*, hkArray<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, hkContainerHeapAllocator>*, hkArray<hkIntVector, hkContainerHeapAllocator>*) const
hkcdConvexCellsTree3D::reassignSolidGeomLabels(hkcdPlanarGeometry const&, hkcdPlanarSolid*, hkArray<hkHandle<unsigned int, 0u, hkcdPlanarGeometryPolygonCollection::PolygonIdDiscriminant>, hkContainerHeapAllocator> const&, hkcdPlanarEntityDebugger*)
hkcdConvexCellsTree3D::checkCellIntegrity(hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>) const
hkcdConvexCellsTree3D::Data::~Data()
hkcdConvexCellsTree<hkcdNewCellsCollection::Cell, hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>, hkcdNewCellsCollection>::~hkcdConvexCellsTree()
hkcdDynamicTree::DefaultTree48Storage::staticClass()
hkcdDynamicTree::DynamicStorage32::staticClass()
hkcdStaticPvs::BlockHeader::staticClass()
hkcdStaticMeshTreeBase::Section::Primitives::staticClass()
hkcdStaticTree::DefaultTreeStorage4::staticClass()
hkcdStaticTree::DynamicStorage4::staticClass()
hkcdDynamicSimdTree::refitAllLeaves(int, hkcdDynamicSimdTree::AabbProvider const*, int*)
hkcdDynamicSimdTree::initializeThreadContexts(hkcdDynamicSimdTree::ThreadContext*, int, int)
hkcdDynamicSimdTree::releaseThreadContexts(hkcdDynamicSimdTree::ThreadContext*, int)
hkcdDynamicSimdTree::updateLeaf(int, hkAabb const&, bool, hkcdDynamicSimdTree::ThreadContext*)
hkcdSimdTree::IParallelBuild::IRunnable::~IRunnable()
hkcdSimdTreeUtils::Build::Task::run()
hkcdSimdTreeUtils::Build::RefitT<hkcdSimdTreeUtils::Build::GetLeafAabbFromICustomRefit>::refitBranch(hkVector4f const*, int, hkcdSimdTree::Node*, int, int) const
hkcdSimdTreeUtils::Build::RefitT<hkcdSimdTreeUtils::Build::GetLeafAabbFromICustomRefit>::refitNode(hkVector4f const*, int, hkcdSimdTree::Node const*, hkcdSimdTree::Node*) const
hkcdSimdTreeUtils::Build::RefitT<hkcdSimdTreeUtils::Build::GetLeafAabbFromPoints>::refitNode(hkVector4f const*, int, hkcdSimdTree::Node const*, hkcdSimdTree::Node*) const
hkcdSimdTreeUtils::Build::RefitT<hkcdSimdTreeUtils::Build::GetLeafAabbFromSpheres>::refitNode(hkVector4f const*, int, hkcdSimdTree::Node const*, hkcdSimdTree::Node*) const
hkcdSimdTreeUtils::Build::RefitT<hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs>::refitNode(hkVector4f const*, int, hkcdSimdTree::Node const*, hkcdSimdTree::Node*) const
hkcdSimdTreeUtils::Build::RefitT<hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs16>::refitNode(hkVector4f const*, int, hkcdSimdTree::Node const*, hkcdSimdTree::Node*) const
hkcdSimdTreeUtils::Build::RefitT<hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs16>::refitBranch(hkVector4f const*, int, hkcdSimdTree::Node*, int, int) const
hkcdStaticMeshTreeBase::Connectivity::link(hkcdStaticMeshTreeBase::Edge const&) const
hkcdStaticMeshTreeBase::Connectivity::reset()
hkcdDynamicAabbTree::castSphere(hkVector4f const&, hkVector4f const&, hkSimdFloat32 const&, hkcdAabbTreeQueries::RaycastCollector*) const
hkcdDynamicAabbTree::getClosestPoint(hkVector4f const&, hkSimdFloat32 const&, hkcdAabbTreeQueries::ClosestPointCollector*, hkVector4f&) const
hkcdStaticAabbTree::castSphere(hkVector4f const&, hkVector4f const&, hkSimdFloat32 const&, hkcdAabbTreeQueries::RaycastCollector*) const
hkXmlParser::parse(hkTree<hkRefPtr<hkXmlParser::Node> >&, hkStreamReader*)
hkXmlObjectWriter::NameFromAddress::~NameFromAddress()
hkBinaryPackfileReader::SectionHeaderArray::isValid() const
hkObjectInspector::ObjectListener::~ObjectListener()
hkBinaryPackfileReader::BinaryPackfileData::~BinaryPackfileData()
hkMemoryMeshShape::Section::staticClass()
hkMultipleVertexBuffer::VertexBufferInfo::staticClass()
hkSkinnedMeshShape::BoneSet::staticClass()
hkMemoryMeshTexture::getData(unsigned char*&, int&, hkMeshTexture::Format&)
hkMemoryMeshTexture::Sampler::~Sampler()
hkMemoryMeshVertexBuffer::getElementIntArray(hkMeshVertexBuffer::LockedVertices const&, int, int*)
hkMemoryMeshVertexBuffer::lock(hkMeshVertexBuffer::LockInput const&, hkMeshVertexBuffer::LockedVertices&)
hkMeshPrimitiveUtil::getPrimitiveStyle(hkMeshSection::PrimitiveType)
hkMeshPrimitiveUtil::copyAndRemapPrimitives(void const*, hkMeshSection::PrimitiveType, hkMeshSection::MeshSectionIndexType, int, void*, hkMeshSection::PrimitiveType, hkMeshSection::MeshSectionIndexType, int const*)
hkVertexFormat::Element::getText(hkStringBuf&) const
hkVertexFormat::addElement(hkVertexFormat::ComponentUsage, hkVertexFormat::ComponentType, int, int)
hkMeshVertexBuffer::LockedVertices::findBufferIndex(hkVertexFormat::ComponentUsage, int) const
hkMeshVertexBufferUtil::getIndexedElementVectorArray(hkMeshVertexBuffer::LockedVertices::Buffer const&, int const*, float*, int)
hkMeshVertexBufferUtil::getElementIntArray(hkMeshVertexBuffer::LockedVertices const&, int, hkBitField const&, int*, int)
hkMeshVertexBufferUtil::setElementIntArray(hkMeshVertexBuffer::LockedVertices const&, int, int, int const*, int)
hkMeshVertexBufferUtil::setElementVectorArray(hkMeshVertexBuffer::LockedVertices const&, int, int, float const*, int)
hkMultipleVertexBuffer::getElementIntArray(hkMeshVertexBuffer::LockedVertices const&, int, int*)
hkMultipleVertexBuffer::unlock(hkMeshVertexBuffer::LockedVertices const&)
hkMultipleVertexBuffer::lock(hkMeshVertexBuffer::LockInput const&, hkMeshVertexBuffer::LockedVertices&)
hkStorageSkinnedMeshShape::getBoneSection(int, hkSkinnedMeshShape::BoneSection&) const
hkDefaultImage::getDescriptor(hkImage::Descriptor&) const
hkp3AxisSweep::castRay(hkpBroadPhase::hkpCastRayInput const&, hkpBroadPhaseCastCollector*, int) const
hkpBoxShape::calcSizeForSpu(hkpShape::CalcSizeForSpuInput const&, int) const
hkpBvTreeAgent::LinearCastAabbCastCollector::~LinearCastAabbCastCollector()
hkpCollideTriangleUtil::calcTrianglePlaneDirections(hkVector4f const*, hkpCollideTriangleUtil::PointTriangleDistanceCache const&, hkTransformf&, hkVector4f&)
hkpCompressedMeshShape::Chunk::staticClass()
hkpMoppBvTreeShape::calcSizeForSpu(hkpShape::CalcSizeForSpuInput const&, int) const
hkpShape::calcSizeForSpu(hkpShape::CalcSizeForSpuInput const&, int) const
hkpStorageExtendedMeshShape::ShapeSubpartStorage::~ShapeSubpartStorage()
hkpStorageExtendedMeshShape::ShapeSubpartStorage::~ShapeSubpartStorage()
hkpStorageMeshShape::SubpartStorage::~SubpartStorage()
hkpStorageMeshShape::SubpartStorage::~SubpartStorage()
hkpCompressedMeshShape::Chunk::getNumTriangles() const
hkpCompressedSampledHeightFieldShape::calcSizeForSpu(hkpShape::CalcSizeForSpuInput const&, int) const
hkpConvexPieceMeshShape::getStats(hkpConvexPieceMeshShape::Stats&)
hkpExtendedMeshShape::initWeldingInfo(hkpWeldingUtility::WeldingType)
hkpExtendedMeshShape::assertShapesSubpartValidity(hkpExtendedMeshShape::ShapesSubpart const&)
hkpWheelFrictionConstraintData::Atoms::staticClass()
hkpBallAndSocketConstraintData::setSolvingMethod(hkpConstraintAtom::SolvingMethod)
hkpCogWheelConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpFixedConstraintData::setSolvingMethod(hkpConstraintAtom::SolvingMethod)
hkpLinearClearanceConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpPointToPathConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpPointToPlaneConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpRackAndPinionConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpRackAndPinionConstraintData::setInWorldSpace(hkTransformf const&, hkTransformf const&, hkVector4f const&, hkVector4f const&, hkVector4f const&, float, hkpRackAndPinionConstraintData::Type)
hkpRagdollLimitsData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkMap<hkpPairCollisionFilter::PairFilterKey, unsigned long, hkpPairCollisionFilter::PairFilterPointerMapOperations, hkContainerHeapAllocator>::reserve(int)
hkpContinuousSimulation::resetCollisionInformationForEntities(hkpEntity**, int, hkpWorld*, hkpSimulation::ResetCollisionInformation)
hkpEntity::SmallArraySerializeOverrideType::staticClass()
hkpGenericConstraintDataScheme::ConstraintInfo::staticClass()
hkpMultiThreadedSimulation::MtPhantomBroadPhaseListener::addCollisionPair(hkpTypedBroadPhaseHandlePair&)
hkpMultiThreadedSimulation::MtBroadPhaseBorderListener::addCollisionPair(hkpTypedBroadPhaseHandlePair&)
hkpMultiThreadedSimulation::MtEntityEntityBroadPhaseListener::removeCollisionPair(hkpTypedBroadPhaseHandlePair&)
hkpMultiThreadedSimulation::MtEntityEntityBroadPhaseListener::addCollisionPair(hkpTypedBroadPhaseHandlePair&)
hkpMultiThreadedSimulation::processNextJob(hkJobQueue&, hkJobQueue::JobQueueEntry&)
hkpSimulation::collideEntitiesDiscrete(hkpEntity**, int, hkpWorld*, hkStepInfo const&, hkpSimulation::FindContacts)
hkpWorld::shiftBroadPhase(hkVector4f const&, hkVector4f&, hkpWorld::CachedAabbUpdate)
hkpWorld::setMultithreadedAccessChecking(hkpWorld::MtAccessChecking)
hkpWorldObject::editProperty(unsigned int, hkSimplePropertyValue, hkpWorldObject::MtChecks)
hkpBreakableConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpDefaultWorldMemoryWatchDog::reduceConstraintsInIsland(hkWorldMemoryAvailableWatchDog::MemUsageInfo const&, int)
hkpJobQueueUtils::finishIntegrateJob(hkJobQueue&, hkJobQueue::DynamicData*, hkJobQueue::JobQueueEntry const&, hkJobQueue::JobQueueEntryInput&)
hkpJobQueueUtils::finishCollideJob(hkJobQueue&, hkJobQueue::DynamicData*, hkJobQueue::JobQueueEntry const&, hkJobQueue::JobQueueEntryInput&)
hkpEndOfStepCallbackUtil::unregisterCollision(hkpSimpleConstraintContactMgr*, hkpContactListener*, hkpCollisionEvent::CallbackSource)
hkpGenericConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpMalleableConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpPoweredChainData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpReportContactMgr::Factory::~Factory()
hkpStaticCompoundShapeBreakableMaterial::getShapeKeysForSubShapes(hkcdShape const*, unsigned int const*, int, hkpBreakableMaterial::ShapeKeyCollector*) const
hkpSimpleContactConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpBreakableMaterial::ShapeKeyCollector::~ShapeKeyCollector()
hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::BuildGeometryProvider<hkpBvCompressedMeshShape_Internals::GeometryProvider>::~BuildGeometryProvider()
hkArrayBase<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::SAHBin>::_trySetSize(hkMemoryAllocator&, int)
hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::nextRightNode(unsigned int, unsigned int) const
hkArrayBase<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::SAHTask>::_clearAndDeallocate(hkMemoryAllocator&)
hkArrayBase<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStorage32>::SAHBin>::_clearAndDeallocate(hkMemoryAllocator&)
hkpConstraintProjectorInternal::compareError(hkpConstraintProjectorInternal::ConstraintData const&, hkpConstraintProjectorInternal::ConstraintData const&)
hkpDefaultToiResourceMgr::cannotSolve(hkArray<hkpToiResourceMgr::ConstraintViolationInfo, hkContainerHeapAllocator>&)
hkpStaticCompoundShape::hkpStaticCompoundShape(hkpShapeContainer::ReferencePolicy)
hkpTreeBroadPhase32::castAabb(hkpBroadPhase::hkpCastAabbInput const&, hkpBroadPhaseCastCollector&) const
hkpTreeBroadPhase32::castRay(hkpBroadPhase::hkpCastRayInput const&, hkpBroadPhaseCastCollector*, int) const
hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::CustomGeometryConverter::isKeyConvertionAllowed(unsigned int) const
hkgpConvexHull::SimplifyConfig::SimplifyConfig()
hkpDisplayBindingData::RigidBody::~RigidBody()
hkpDisplayBindingData::PhysicsSystem::~PhysicsSystem()
hkpDisplayBindingData::PhysicsSystem::~PhysicsSystem()
hkpKeyFrameUtility::AccelerationInfo::AccelerationInfo()
hkpKeyFrameUtility::applySoftKeyFrame(hkpKeyFrameUtility::KeyFrameInfo const&, hkpKeyFrameUtility::AccelerationInfo&, float, float, hkpRigidBody*)
hkpPhysicsSystem::clone(hkpPhysicsSystem::CloneConstraintMode) const
hkpSaveContactPointsUtil::saveContactPoints(hkpSaveContactPointsUtil::SavePointsInput const&, hkpAgentNnEntry const**, int, hkpPhysicsSystemWithContacts*)
hkpSaveContactPointsUtil::saveContactPoints(hkpSaveContactPointsUtil::SavePointsInput const&, hkpEntity const**, int, hkpPhysicsSystemWithContacts*)
hkpSaveContactPointsUtil::loadContactPoints(hkpSaveContactPointsUtil::LoadPointsInput const&, hkpPhysicsSystemWithContacts*, hkpEntity**, int)
hkpSaveContactPointsUtil::EntitySelector::~EntitySelector()
hkpVehicleData::init(hkArray<hkpVehicleSuspension::SuspensionWheelParameters, hkContainerHeapAllocator> const&, hkpRigidBody*)
hkpVehicleDefaultAnalogDriverInput::calcAcceleratorInput(float, hkpVehicleInstance const*, hkpVehicleDriverInputAnalogStatus const*, hkpVehicleDriverInput::FilteredDriverInputOutput&) const
hkpVehicleDefaultAnalogDriverInput::calcDriverInput(float, hkpVehicleInstance const*, hkpVehicleDriverInputStatus const*, hkpVehicleDriverInput::FilteredDriverInputOutput&)
hkpVehicleDefaultSteering::calcSteering(float, hkpVehicleInstance const*, hkpVehicleDriverInput::FilteredDriverInputOutput const&, hkpVehicleSteering::SteeringAnglesOutput&)
hkpVehicleDefaultTransmission::getCurrentRatio(hkpVehicleInstance const*, hkpVehicleTransmission::TransmissionOutput&) const
hkpVehicleDefaultTransmission::calcTransmission(float, hkpVehicleInstance const*, hkpVehicleTransmission::TransmissionOutput&)
hkpVehicleDefaultTransmission::updateCurrentGear(float, hkpVehicleInstance const*, hkpVehicleTransmission::TransmissionOutput&)
hkpVehicleLinearCastWheelCollide::wheelCollideCallback(hkpVehicleInstance const*, unsigned char, hkpVehicleWheelCollide::CollisionDetectionWheelOutput&)
hkxMaterial::TextureStage::staticClass()
hkxVertexBuffer::VertexData::setSize(int)
hkxVertexDescription::ElementDecl::staticClass()
hkClassPointerVtable::VtableRegistry::registerVtable(void const*, hkClass const*)
hkClassPointerVtable::TypeInfoRegistry::~TypeInfoRegistry()
ArrayOfTuplesImplementation::View::asVec(int) const
StructArrayImplementation::Object::isSet(_hkDataObject_MemberHandle const*)
StructArrayImplementation::Object::getHandle() const
StructArrayImplementation::Object::selfDestruct()
StructArrayImplementation::Object::~Object()
ArrayOfTuplesImplementation::View::~View()
ArrayOfTuplesImplementation::View::getSize() const
StructArrayImplementation::Object::assign(_hkDataObject_MemberHandle const*, int)
hkDataWorldNative::getTypeFromMemberType(hkClassMember::Type, hkClassMember::Type, hkClass const*, int)
hkMap<hkDataObject_Handle, Copier::LiveObjectInfo, hkMapOperations<hkDataObject_Handle>, hkContainerHeapAllocator>::reserve(int)
hkObjectResource::getImportsExports(hkArray<hkResource::Import, hkContainerHeapAllocator>&, hkArray<hkResource::Export, hkContainerHeapAllocator>&) const
hkPackfileData::getImportsExports(hkArray<hkResource::Import, hkContainerHeapAllocator>&, hkArray<hkResource::Export, hkContainerHeapAllocator>&) const
hkPlatformObjectWriter::Cache::~Cache()
hkRootLevelContainer::NamedVariant::staticClass()
hkSerializeDeprecated::loadOldPackfile(hkStreamReader&, hkSerializeUtil::FormatDetails const&, hkSerializeUtil::ErrorDetails*)
hkSerializeDeprecated::saveXmlPackfile(void const*, hkClass const&, hkStreamWriter*, hkPackfileWriter::Options const&, hkPackfileWriter::AddObjectListener*, hkSerializeUtil::ErrorDetails*)
hkSerializeDeprecated::readXmlPackfileHeader(hkStreamReader*, hkSerializeDeprecated::XmlPackfileHeader&, hkSerializeUtil::ErrorDetails*)
hkTypeManager::replaceTerminal(hkTypeManager::Type*, hkTypeManager::Type*)
hkTypeManager::appendTypeExpression(hkTypeManager::Type const*, hkOstream&)
hkXmlObjectWriter::SequentialNameFromAddress::~SequentialNameFromAddress()
hkXmlParser::Node::~Node()
hkXmlParser::Characters::~Characters()
hkXmlParser::StartElement::~StartElement()
hk1AxisSweep::collide(hk1AxisSweep::AabbInt const*, int, hk1AxisSweep::AabbInt const*, int, hkArray<hkKeyPair, hkContainerHeapAllocator>&)
hk1AxisSweep::collide(hk1AxisSweep::AabbInt const*, int, hkKeyPair*, int, hkPadSpu<int>&)
hkJobQueue::setSpuSchedulingPolicy(hkJobQueueHwSetup::SpuSchedulePolicy)
hkLineSegmentUtil::intersectionInfLinePlane(hkVector4f const&, hkVector4f const&, hkVector4f const&, hkLineSegmentUtil::IntersectionInfLinePlaneResult&)
hkcdGsk::getClosestPoint(void const*, hkcdVertex const*, int, void const*, hkcdVertex const*, int, hkcdGsk::GetClosestPointInput const&, hkcdGsk::Cache*, hkcdGsk::GetClosestPointOutput&)
hkcdGsk::linearCast(hkcdVertex const*, int, hkcdVertex const*, int, hkcdGsk::LinearCastInput const&, hkcdGsk::Cache*, hkcdGsk::LinearCastOutput&)
hkcdGskBase::ShapeInterface::~ShapeInterface()
hkcdRayCastTriangle::fastUsingZeroTolerance(hkcdRay const&, hkVector4f const&, hkVector4f const&, hkVector4f const&, hkFlags<hkcdRayQueryFlags::Enum, unsigned int>, hkSimdFloat32&, hkVector4f&)
hkGeometryUtils::createGrid(hkGeometryUtils::GridInput const&, hkGeometry*, int)
hkGeometryUtils::Node::operator=(hkGeometryUtils::Node const&)
hkGeometryUtils::Node::checkForNonManifoldGeometry() const
hkGeometryProcessing::SurfaceSampler::clear()
hkGeometryProcessing::SurfaceSampler::addGeometry(hkGeometry const&, int)
hkGeometryProcessing::SurfaceSampler::getSample(hkGeometryProcessing::Prng&, hkVector4f&) const
hkgpAbstractMesh<hkgpIndexedMeshDefinitions::Edge, hkgpIndexedMeshDefinitions::Vertex, hkgpIndexedMeshDefinitions::Triangle, hkContainerHeapAllocator>::~hkgpAbstractMesh()
hkgpConvexHull::getBoundingBox(hkgpConvexHull::Inputs, float, float) const
hkgpConvexHull::generateIndexedFaces(hkgpConvexHull::Inputs, hkArray<int, hkContainerHeapAllocator>&, hkArray<int, hkContainerHeapAllocator>&, hkBool) const
hkgpConvexHull::getNearestVertex(hkgpConvexHull::Inputs, hkVector4f const&, hkVector4f&) const
hkgpConvexHull::getNeighbour(hkgpConvexHull::Triangle*, int) const
hkgpAbstractMesh<hkgpConvexHullImpl::Edge, hkgpConvexHullImpl::Vertex, hkgpConvexHullImpl::Triangle, hkContainerHeapAllocator>::~hkgpAbstractMesh()
hkgpIndexedMesh::splitEdge(hkgpIndexedMeshDefinitions::Edge)
hkgpIndexedMesh::getSetVertices(int, hkArray<hkgpIndexedMeshDefinitions::Vertex*, hkContainerHeapAllocator>&) const
hkgpIndexedMesh::IVertexRemoval::~IVertexRemoval()
hkgpMesh::isConcave(hkgpMeshBase::Edge, float) const
hkgpMesh::findEdge(hkgpMeshBase::Vertex const*, hkgpMeshBase::Vertex const*) const
hkgpMesh::flipEdge(hkgpMeshBase::Edge) const
hkgpMesh::Location::Region::hasCommonSuperset(hkgpMesh::Location::Region const* const*, int)
hkgpMesh::extractAllLoops(hkArray<hkArray<hkgpMeshBase::Edge, hkContainerHeapAllocator>*, hkContainerHeapAllocator>&, int) const
hkgpMesh::splitEdge(hkgpMeshBase::Edge, hkVector4f const&, bool)
hkgpMesh::generateSurfaceSamples(hkgpMesh::SurfaceSamplingConfig const&, hkArray<hkVector4f, hkContainerHeapAllocator>&, bool) const
hkgpMesh::fillHoles(hkgpMesh::HoleFillingConfig const&)
hkgpMesh::IConvexOverlap::IConvexShape::~IConvexShape()
IConvexOverlapImpl::ShapeInterface::~ShapeInterface()
hkgpAbstractMesh<hkgpMeshBase::Edge, hkgpMeshBase::Vertex, hkgpMeshBase::Triangle, hkContainerHeapAllocator>::~hkgpAbstractMesh()
hkgpAbstractMesh<hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Edge, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Vertex, hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::Triangle, hkContainerHeapAllocator>::~hkgpAbstractMesh()
hkgpMesh::TriangleShape::getSupportingVertex(hkVector4f const&, hkVector4f&) const
hkgpTriangulatorType<hkContainerHeapAllocator, hkgpTriangulatorBase::VertexBase, hkgpTriangulatorBase::TriangleBase, hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkgpTriangulatorBase::SparseEdgeDataPolicy<hkgpTriangulatorBase::DefaultEdgeData<hkContainerHeapAllocator>, hkContainerHeapAllocator>, -1, 4, 15, false>::~hkgpTriangulatorType()
hkgpMesh::enumerateTriangleOverlaps(hkVector4f const&, hkVector4f const&, hkVector4f const&, hkArray<hkgpMeshBase::Triangle*, hkContainerHeapAllocator>&) const
hkgpMesh::IConvexOverlap::IConvexShape::getMaxIndex() const
hkgpCgoInternal::ICollapse::bind(hkgpIndexedMeshDefinitions::Edge, hkgpIndexedMeshDefinitions::Edge)
hkgpIndexedMesh::EdgeBarrier::~EdgeBarrier()
hkpWeldingUtility::calcScaledWeldingInfo(hkVector4f const*, unsigned short, hkpWeldingUtility::WeldingType, hkVector4f const&)
hkpMultiRayShape::hkpMultiRayShape(hkpMultiRayShape::Ray const*, int, float)
std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
rglMeta_mesh::merge_with(std::vector<rglMesh_lod*, std::allocator<rglMesh_lod*> >, int)
nv_dds::CSurface::~CSurface()
hkMemoryInitUtil::initHeapAllocator(hkMemoryAllocator*, hkMemoryAllocator*, hkMemoryAllocator::ExtendedInterface*, hkMemorySystem::FrameInfo const&)
hkContainerHeapAllocator::Allocator::getMemoryStatistics(hkMemoryAllocator::MemoryStatistics&) const
std::vector<SteamWorkshopItem, std::allocator<SteamWorkshopItem> >::~vector()
std::vector<rglManifold_face, std::allocator<rglManifold_face> >::reserve(unsigned long)
std::vector<unsigned char*, std::allocator<unsigned char*> >::~vector()
hkReferencedObject::lockInit(hkReferencedObject::LockMode)
hkFileSystem::TimeStamp::isValid() const
hkMap<unsigned long, unsigned long, hkMapOperations<unsigned long>, hkContainerHeapAllocator>::hkMap(hkMap<unsigned long, unsigned long, hkMapOperations<unsigned long>, hkContainerHeapAllocator>::InternalInitializer)
hkPosixStreamReader::seek(int, hkSeekableStreamReader::SeekWhence)
hkSocket::WriterAdapter::write(void const*, int)
hkStackTracer::CallTree::releaseCallStack(int)
hkFreeList::_getSortedBlockHeads(hkFreeList::Block const**, int)
hkFreeListMemorySystem::mainQuit(hkFlags<hkMemorySystem::FlagBits, int>)
hkLargeBlockAllocator::FixedMemoryBlockServer::blockFree(void*, int)
hkMonitorStreamStringMap::StringMap::StringMap()
hkFixedSizeAllocator::getMemoryStatistics(hkMemoryAllocator::MemoryStatistics&) const
hkcdPlanarGeometryPrimitives::Plane::staticClass()
hkcdPlanarGeometry::extractGeometry(hkGeometry&, hkArray<unsigned long, hkContainerHeapAllocator>&, hkArray<hkHandle<unsigned int, 268435455u, hkcdPlanarGeometryPrimitives::PlaneIdDiscriminant>, hkContainerHeapAllocator>*) const
hkcdPlanarGeometryPredicates::coplanar(hkVector4d const&, hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const*, int)
hkcdPlanarGeometryPredicates::computeExactTriangleWinding(hkcdPlanarGeometryPrimitives::Plane const (&) [3], hkcdPlanarGeometryPrimitives::Plane const (&) [3], hkcdPlanarGeometryPrimitives::Plane const (&) [3], hkcdPlanarGeometryPrimitives::Plane const&, int, int, int)
hkcdConvexCellsTree3D::computeSolidRegionIslands(hkArray<hkArray<hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant>, hkContainerHeapAllocator>, hkContainerHeapAllocator>&)
hkcdConvexCellsTree3D::collectCellVerticesWorld(hkHandle<unsigned int, 4294967295u, hkcdNewCellsCollection::CellIdDiscriminant> const*, int, hkArray<hkVector4f, hkContainerHeapAllocator>&) const
hkcdDynamicTree::DefaultTreeInt16Storage::staticClass()
hkcdDynamicTree::DynamicStorageInt16::staticClass()
hkcdStaticMeshTreeBase::Section::DataRuns::staticClass()
hkcdStaticTree::DefaultTreeStorage5::staticClass()
hkcdStaticTree::DynamicStorage5::staticClass()
hkcdSimdTree::buildFromPoints(hkcdSimdTree::BuildContext&, hkVector4f const*)
hkcdSimdTreeUtils::Build::EmptyRunnable::run()
hkcdSimdTreeUtils::Build::RefitT<hkcdSimdTreeUtils::Build::GetLeafAabbFromPoints>::refitBranch(hkVector4f const*, int, hkcdSimdTree::Node*, int, int) const
hkcdSimdTreeUtils::Build::RefitT<hkcdSimdTreeUtils::Build::GetLeafAabbFromSpheres>::refitBranch(hkVector4f const*, int, hkcdSimdTree::Node*, int, int) const
hkcdSimdTreeUtils::Build::RefitT<hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs>::refitBranch(hkVector4f const*, int, hkcdSimdTree::Node*, int, int) const
hkcdDynamicAabbTree::queryAabb(hkAabb const&, hkcdAabbTreeQueries::AabbCollector*) const
hkcdDynamicAabbTree::getAllPairs(hkcdAabbTreeQueries::AllPairsCollector*) const
hkcdStaticAabbTree::queryAabb(hkAabb const&, hkcdAabbTreeQueries::AabbCollector*) const
hkVersionRegistry::registerUpdateDescription(hkVersionRegistry::UpdateDescription&, char const*, char const*)
hkSerializeDeprecated2::readXmlPackfileHeader(hkStreamReader*, hkSerializeDeprecated::XmlPackfileHeader&, hkSerializeUtil::ErrorDetails*)
hkVersionRegistry::registerUpdater(hkVersionRegistry::Updater const*)
hkObjectInspector::ObjectListener::~ObjectListener()
hkMultipleVertexBuffer::ElementInfo::staticClass()
hkSkinnedMeshShape::BoneSection::staticClass()
hkMemoryMeshVertexBuffer::setElementVectorArray(hkMeshVertexBuffer::LockedVertices const&, int, float const*)
hkMeshPrimitiveUtil::calculateNumPrimitives(hkMeshSection::PrimitiveType, int)
hkMeshVertexBufferUtil::interpolate(hkVertexFormat::Element const&, void const*, void const*, hkSimdFloat32 const&, void*)
hkMeshVertexBufferUtil::convert(hkMeshVertexBuffer::LockedVertices const&, hkMeshVertexBuffer::LockedVertices const&)
hkMultipleVertexBuffer::setElementVectorArray(hkMeshVertexBuffer::LockedVertices const&, int, float const*)
hkp3AxisSweep::updateNodesAfterBatchTailInsert(hkp3AxisSweep::hkpBpNode*, int, int, int*)
hkpCapsuleShape::calcSizeForSpu(hkpShape::CalcSizeForSpuInput const&, int) const
hkpCompressedMeshShape::BigTriangle::staticClass()
std::ios_base::Init::~Init()
hkpShapeCollection::initWeldingInfo(hkpWeldingUtility::WeldingType)
hkpConvexTransformShape::calcSizeForSpu(hkpShape::CalcSizeForSpuInput const&, int) const
hkpConvexVerticesShape::calcSizeForSpu(hkpShape::CalcSizeForSpuInput const&, int) const
hkpExtendedMeshShape::ShapesSubpart::ShapesSubpart(hkpConvexShape const* const*, int, hkVector4f const&)
hkpExtendedMeshShape::ShapesSubpart::ShapesSubpart(hkpConvexShape const* const*, int, hkTransformf const&)
hkpMeshShape::addSubpart(hkpMeshShape::Subpart const&)
hkpMeshShape::assertSubpartValidity(hkpMeshShape::Subpart const&)
hkpLinearClearanceConstraintData::setInWorldSpace(hkpLinearClearanceConstraintData::Type, hkTransformf const&, hkTransformf const&, hkVector4f const&, hkVector4f const&, hkVector4f const&)
hkpPointToPathConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpPulleyConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpRackAndPinionConstraintData::setInBodySpace(hkVector4f const&, hkVector4f const&, hkVector4f const&, hkVector4f const&, float, hkpRackAndPinionConstraintData::Type)
hkpWheelFrictionConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpEntity::SpuCollisionCallback::staticClass()
hkpMultiThreadedSimulation::MtBroadPhaseBorderListener::~MtBroadPhaseBorderListener()
hkpPairCollisionFilter::MapPairFilterKeyOverrideType::staticClass()
hkpEndOfStepCallbackUtil::registerCollision(hkpSimpleConstraintContactMgr*, hkpContactListener*, hkpCollisionEvent::CallbackSource)
hkpBallSocketChainData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpJobQueueUtils::popCollideJob(hkJobQueue&, hkJobQueue::DynamicData*, hkJobQueue::JobQueueEntry&, hkJobQueue::JobQueueEntry&)
hkpGenericConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpPoweredChainData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkGeometryUtils::IVertices::~IVertices()
hkpConstraintProjectorInternal::compareDeterministic(hkpConstraintProjectorInternal::ConstraintData const&, hkpConstraintProjectorInternal::ConstraintData const&)
hkpStaticCompoundShape::calcSizeForSpu(hkpShape::CalcSizeForSpuInput const&, int) const
hkpStaticCompoundShape_Internals::AabbCastQuery::AabbCastCollectorWrapper::~AabbCastCollectorWrapper()
hkpTreeBroadPhase::castAabb(hkpBroadPhase::hkpCastAabbInput const&, hkpBroadPhaseCastCollector&) const
hkpTreeBroadPhase::castRay(hkpBroadPhase::hkpCastRayInput const&, hkpBroadPhaseCastCollector*, int) const
hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::CustomGeometryConverter::getScale() const
hkgpConvexHull::AbsoluteScaleConfig::AbsoluteScaleConfig()
hkpKeyFrameUtility::KeyFrameInfo::setUsingPositionOrientationPair(hkVector4f const&, hkQuaternionf const&, hkVector4f const&, hkQuaternionf const&, float)
hkpPhysicsData::splitPhysicsSystems(hkpPhysicsSystem const*, hkpPhysicsData::SplitPhysicsSystemsOutput&)
hkpSaveContactPointsUtil::EntitySelector::~EntitySelector()
hkpTriggerVolume::triggerEventCallback(hkpRigidBody*, hkpTriggerVolume::EventType)
hkpConstraintUtils::collectConstraints(hkArray<hkpEntity*, hkContainerHeapAllocator> const&, hkArray<hkpConstraintInstance*, hkContainerHeapAllocator>&, hkpConstraintUtils::CollectConstraintsFilter*)
hkpVehicleLinearCastWheelCollide::WheelState::staticClass()
hkpVehicleDefaultAnalogDriverInput::calcSteeringInput(float, hkpVehicleInstance const*, hkpVehicleDriverInputAnalogStatus const*, hkpVehicleDriverInput::FilteredDriverInputOutput&) const
hkpVehicleDefaultAnalogDriverInput::calcTryingToReverse(float, hkpVehicleInstance const*, hkpVehicleDriverInputAnalogStatus const*, hkpVehicleDriverInput::FilteredDriverInputOutput&)
hkpVehicleDefaultTransmission::calcMainTransmittedTorque(hkpVehicleInstance const*, hkpVehicleTransmission::TransmissionOutput&) const
hkpVehicleLinearCastWheelCollide::getCollisionOutputWithoutHit(hkpVehicleInstance const*, unsigned char, hkpVehicleWheelCollide::CollisionDetectionWheelOutput&) const
hkpVehicleLinearCastWheelCollide::getCollisionOutputFromCastResult(hkpVehicleInstance const*, unsigned char, hkpRootCdPoint const&, hkpVehicleWheelCollide::CollisionDetectionWheelOutput&) const
hkpVehiclePerWheelSimulation::simulateVehicle(hkpVehicleInstance*, hkStepInfo const&, hkpVehicleSimulation::SimulationInput const&, hkpVehicleJobResults*)
hkpVehicleRayCastWheelCollide::getCollisionOutputWithoutHit(hkpVehicleInstance const*, unsigned char, hkpVehicleWheelCollide::CollisionDetectionWheelOutput&) const
hkxMaterial::Property::staticClass()
hkClassPointerVtable::VtableRegistry::getClassFromVirtualInstance(void const*) const
ArrayOfTuplesImplementation::View::setVec(int, float const*)
StructArrayImplementation::Object::getMemberIterator() const
StructArrayImplementation::Object::destroy()
ArrayOfTuplesImplementation::View::getClass() const
StructArrayImplementation::Object::assign(_hkDataObject_MemberHandle const*, short)
hkMap<hkDataObject_Handle, hkDataObject_Handle, hkMapOperations<hkDataObject_Handle>, hkContainerHeapAllocator>::hkMap(hkMap<hkDataObject_Handle, hkDataObject_Handle, hkMapOperations<hkDataObject_Handle>, hkContainerHeapAllocator>::InternalInitializer)
hkMap<hkDataObject_Handle, int, hkMapOperations<hkDataObject_Handle>, hkContainerHeapAllocator>::hkMap(hkMap<hkDataObject_Handle, int, hkMapOperations<hkDataObject_Handle>, hkContainerHeapAllocator>::InternalInitializer)
hkTypeManager::makeArray(hkTypeManager::SubType)
hkXmlParser::Node::~Node()
hkXmlParser::Characters::~Characters()
hkMemoryStreamReader::seek(int, hkSeekableStreamReader::SeekWhence)
hkcdGskBase::RayCastShapeInterface<hkcdGsk_Vector4Shape>::~RayCastShapeInterface()
hkGeometryProcessing::IFunction<hkVector4f, float>::~IFunction()
hkgpConvexHull::generateIndexedFaces(hkgpConvexHull::Inputs, hkArray<unsigned char, hkContainerHeapAllocator>&, hkArray<unsigned short, hkContainerHeapAllocator>&, hkBool) const
hkgpConvexHull::absoluteScale(float, hkgpConvexHull::AbsoluteScaleConfig const&)
hkgpConvexHull::simplify(hkgpConvexHull::SimplifyConfig const&)
hkgpIndexedMesh::IVertexRemoval::~IVertexRemoval()
hkgpMesh::checkEdgeCollapseConvex(hkgpMeshBase::Edge) const
hkgpMesh::countFanPlanes(hkgpMeshBase::Edge) const
hkgpMesh::splitTriangle(hkgpMeshBase::Triangle*, hkVector4f const&, bool)
hkgpMesh::enumerateOverlaps(hkgpMesh::IConvexOverlap::IConvexShape*, hkArray<hkgpMeshBase::Triangle*, hkContainerHeapAllocator>&, float, bool) const
hkgpMesh::IConvexOverlap::~IConvexOverlap()
IConvexOverlapImpl::ShapeInterface::~ShapeInterface()
hkgpMesh::IConvexOverlap::~IConvexOverlap()
hkgpJobQueue::IJob::~IJob()
IConvexOverlapImpl::distance(hkgpMesh::IConvexOverlap::IConvexShape const*, hkgpMesh::IConvexOverlap::IConvexShape const*, bool) const
hkcdDynamicTree::DynamicStorage<0, hkcdDynamicTree::AnisotropicMetric, hkcdDynamicTree::CodecRawUlong>::tryAllocateNode(hkResult&)
hkgpIndexedMesh::EdgeBarrier::isBlocked(hkgpIndexedMeshDefinitions::Edge) const
hkpWrappedConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpAngularFrictionConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpSphereShape::calcSizeForSpu(hkpShape::CalcSizeForSpuInput const&, int) const
hkpSphereTriangleAgent::getClosestPoint(hkpCdBody const&, hkpCdBody const&, hkpCollisionInput const&, hkpCollideTriangleUtil::ClosestPointTriangleCache&, hkContactPoint&)
hkpWorld::queueCallback(hkWorldOperation::UserCallback*, unsigned long)
hkContainerHeapAllocator::Allocator::getAllocatedSize(void const*, int) const
hkClassEnum::Item::staticClass()
hkFileSystem::Entry::openReader(hkFileSystem::OpenFlags) const
hkPosixStreamWriter::seek(int, hkStreamWriter::SeekWhence)
hkMemoryAllocator::ExtendedInterface::~ExtendedInterface()
hkFreeListMemorySystem::threadInit(hkMemoryRouter&, char const*, hkFlags<hkMemorySystem::FlagBits, int>)
hkLargeBlockAllocator::FixedMemoryBlockServer::getAllocatedSize(void const*, int) const
hkcdPlanarGeometryPredicates::approximateEdgeDirectionFast(hkcdPlanarGeometryPrimitives::Plane const&, hkcdPlanarGeometryPrimitives::Plane const&, hkIntVector&)
hkcdDynamicTree::DefaultTreePtrStorage::staticClass()
hkcdDynamicTree::DynamicStoragePtr::staticClass()
hkcdStaticMeshTreeBase::Section::staticClass()
hkcdStaticTree::DefaultTreeStorage6::staticClass()
hkcdStaticTree::DynamicStorage6::staticClass()
hkcdSimdTree::buildFromSpheres(hkcdSimdTree::BuildContext&, hkVector4f const*)
hkcdSimdTreeUtils::Build::IRefit::~IRefit()
hkVersionPatchManager::ClassWrapper::~ClassWrapper()
hkSerializeDeprecated2::loadOldPackfileOnHeap(hkStreamReader&, hkSerializeUtil::FormatDetails const&, hkSerializeUtil::ErrorDetails*)
hkMultipleVertexBuffer::LockedElement::staticClass()
hkSkinnedMeshShape::Part::staticClass()
hkMemoryMeshVertexBuffer::getElementVectorArray(hkMeshVertexBuffer::LockedVertices const&, int, float*)
hkMergeMeshPrimitvesCalculator::add(int, hkMeshSection::PrimitiveType, hkMeshSection::MeshSectionIndexType)
hkMultipleVertexBuffer::getElementVectorArray(hkMeshVertexBuffer::LockedVertices const&, int, float*)
hkStorageSkinnedMeshShape::getPart(int, hkSkinnedMeshShape::Part&) const
hkpCompressedMeshShape::ConvexPiece::staticClass()
hkpSampledHeightFieldShape::castSphere(hkpHeightFieldShape::hkpSphereCastInput const&, hkpCdBody const&, hkpRayHitCollector&) const
hkpTransformShape::calcSizeForSpu(hkpShape::CalcSizeForSpuInput const&, int) const
hkpTriSampledHeightFieldCollection::calcSizeForSpu(hkpShape::CalcSizeForSpuInput const&, int) const
hkpTriSampledHeightFieldCollection::initWeldingInfo(hkpWeldingUtility::WeldingType)
hkpTriangleShape::calcSizeForSpu(hkpShape::CalcSizeForSpuInput const&, int) const
hkpCompressedMeshShape::initWeldingInfo(hkpWeldingUtility::WeldingType)
hkpCylinderShape::calcSizeForSpu(hkpShape::CalcSizeForSpuInput const&, int) const
hkpMeshShape::initWeldingInfo(hkpWeldingUtility::WeldingType)
hkpCogWheelConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpRackAndPinionConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpStiffSpringConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpWheelFrictionConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpEntity::ExtendedListeners::staticClass()
hkpMultiThreadedSimulation::MtPhantomBroadPhaseListener::removeCollisionPair(hkpTypedBroadPhaseHandlePair&)
hkpMultiThreadedSimulation::MtBroadPhaseBorderListener::~MtBroadPhaseBorderListener()
hkpStiffSpringChainData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpBreakableMaterial::ShapeKeyCollector::addShapeKeyBatch(unsigned int const*, int)
hkGeometryUtils::IVertices::~IVertices()
hkpStaticCompoundShape_Internals::AabbCastQuery::AabbCastCollectorWrapper::~AabbCastCollectorWrapper()
hkpBvCompressedMeshShape::calcSizeForSpu(hkpShape::CalcSizeForSpuInput const&, int) const
hkpSerializedDisplayRbTransforms::DisplayTransformPair::staticClass()
hkpTriggerVolume::triggerEventCallback(hkpCharacterProxy*, hkpTriggerVolume::EventType)
hkpVehicleDefaultBrake::WheelBrakingProperties::staticClass()
hkpVehicleDefaultSuspension::WheelSpringSuspensionParameters::staticClass()
hkpVehicleDefaultAerodynamics::calcAerodynamics(float, hkpVehicleInstance const*, hkpVehicleAerodynamics::AerodynamicsDragOutput&)
hkpVehicleRayCastWheelCollide::getCollisionOutputFromCastResult(hkpVehicleInstance const*, unsigned char, hkpWorldRayCastOutput const&, hkpVehicleWheelCollide::CollisionDetectionWheelOutput&) const
hkxSpline::ControlPoint::staticClass()
hkxVertexAnimation::UsageMap::staticClass()
hkClassPointerVtable::TypeInfoRegistry::finishLoadedObject(void*, char const*) const
hkClassPointerVtable::VtableRegistry::~VtableRegistry()
ArrayOfTuplesImplementation::View::asString(int) const
StructArrayImplementation::Object::isValid(int) const
StructArrayImplementation::Object::getMemberInfo(_hkDataObject_MemberHandle const*, hkDataClass_MemberInfo&)
StructArrayImplementation::Object::assign(_hkDataObject_MemberHandle const*, signed char)
hkSerializeDeprecated::isLoadable(hkSerializeUtil::FormatDetails const&)
hkcdGskBase::RayCastShapeInterface<hkcdGsk_Vector4Shape>::~RayCastShapeInterface()
hkGeometryProcessing::ConstFunction<hkGeometryProcessing::IFunction<hkVector4f, float> >::~ConstFunction()
hkgpAbstractMesh<hkgpConvexHullImpl::Edge, hkgpConvexHullImpl::Vertex, hkgpConvexHullImpl::Triangle, hkContainerHeapAllocator>::reset()
hkgpIndexedMesh::ITriangleRemoval::~ITriangleRemoval()
int hkcdDynamicTree::AnisotropicMetric::metricSelect<hkcdDynamicTree::CodecRawUlong>(hkcdDynamicTree::AnisotropicMetric::MetricData const&, hkcdDynamicTree::CodecRawUlong const*, hkcdDynamicTree::CodecRawUlong const*) const
IConvexOverlapImpl::checkOverlap(hkgpMesh::IConvexOverlap::IConvexShape const*, hkgpMesh::IConvexOverlap::IConvexShape const*, float) const
hkgpMesh::ExternShape::~ExternShape()
hkgpMesh::IConvexOverlap::IConvexShape::~IConvexShape()
hkgpCgoInternal::ICollapse::removeVertex(hkgpIndexedMeshDefinitions::Vertex*)
hkpCapsuleTriangleAgent::getClosestPointsPublic(hkpCdBody const&, hkpCdBody const&, hkpCollisionInput const&, hkpCollideTriangleUtil::PointTriangleDistanceCache&, int, hkContactPoint*)
hkFileSystem::Entry::openWriter(hkFileSystem::OpenFlags) const
hkMonitorStreamStringMap::StringMap::staticClass()
hkTraceStream::Title::staticClass()
hkMemoryTrackStreamWriter::seek(int, hkStreamWriter::SeekWhence)
hkcdStaticMeshTreeBase::Primitive::staticClass()
hkcdSimdTree::buildFromAabbs(hkcdSimdTree::BuildContext&, hkAabb const*)
hkcdSimdTreeUtils::Build::RefitT<hkcdSimdTreeUtils::Build::GetLeafAabbFromICustomRefit>::~RefitT()
hkVersionPatchManager::ClassWrapper::~ClassWrapper()
hkMemoryMeshVertexBuffer::partialLock(hkMeshVertexBuffer::LockInput const&, hkMeshVertexBuffer::PartialLockInput const&, hkMeshVertexBuffer::LockedVertices&)
hkMultipleVertexBuffer::_less(hkMultipleVertexBuffer::LockedElement const&, hkMultipleVertexBuffer::LockedElement const&)
hkpSimpleMeshShape::Triangle::staticClass()
hkpTriSampledHeightFieldBvTreeShape::calcSizeForSpu(hkpShape::CalcSizeForSpuInput const&, int) const
hkpCompressedMeshShape::calcSizeForSpu(hkpShape::CalcSizeForSpuInput const&, int) const
hkpCogWheelConstraintData::Atoms::staticClass()
hkpDeformableFixedConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpHingeConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpLimitedHingeConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpBreakableBody::Controller::staticClass()
hkpMultiThreadedSimulation::MtEntityEntityBroadPhaseListener::~MtEntityEntityBroadPhaseListener()
hkpSimpleShapePhantom::CollisionDetail::staticClass()
hkpStiffSpringChainData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpSimpleConstraintContactMgr::Factory::~Factory()
hkGeometryUtils::IVertices::isWeldingAllowed(int, int) const
hkpMoppCode::CodeInfo::staticClass()
hkpShapeKeyTable::Block::staticClass()
hkpStaticCompoundShape_Internals::AabbCastQuery::AabbCastCollectorWrapper::addHit(unsigned int)
hkpStaticCompoundShape::Instance::staticClass()
hkpVehicleWheelCollide::wheelCollideCallback(hkpVehicleInstance const*, unsigned char, hkpVehicleWheelCollide::CollisionDetectionWheelOutput&)
hkxEnvironment::Variable::staticClass()
hkClassPointerVtable::VtableRegistry::~VtableRegistry()
ArrayOfTuplesImplementation::View::setString(int, char const*)
StructArrayImplementation::Object::getNextMember(int) const
StructArrayImplementation::Object::createdDuringPatching() const
StructArrayImplementation::Object::assign(_hkDataObject_MemberHandle const*, float const*, int)
hkGeometryProcessing::ConstFunction<hkGeometryProcessing::IFunction<hkVector4f, float> >::evaluate(hkVector4f const&) const
hkgpIndexedMesh::ITriangleRemoval::~ITriangleRemoval()
hkArrayBase<hkcdDynamicTree::Tree<hkcdDynamicTree::DynamicStoragePtr>::SAHTask>::_reserve(hkMemoryAllocator&, int)
hkgpMesh::ExternShape::~ExternShape()
hkgpMesh::ExternShape::getBoundingBox() const
hkgpCgoInternal::ICollapse::~ICollapse()
hkpAngularFrictionConstraintData::setSolvingMethod(hkpConstraintAtom::SolvingMethod)
std::vector<rglMeta_mesh*, std::allocator<rglMeta_mesh*> >::_M_default_append(unsigned long)
hkpMultiRayShape::Ray::staticClass()
hkFileSystem::Entry::setPath(hkFileSystem*, char const*)
hkLargeBlockAllocator::FixedMemoryBlockServer::~FixedMemoryBlockServer()
hkcdStaticMeshTreeBase::Edge::staticClass()
hkcdSimdTree::buildFromAabbs(hkcdSimdTree::BuildContext&, hkIntSpaceUtil const&, hkAabb16 const*, int)
hkcdSimdTreeUtils::Build::RefitT<hkcdSimdTreeUtils::Build::GetLeafAabbFromPoints>::~RefitT()
hkMeshTexture::Sampler::~Sampler()
hkSkinnedMeshShape::addPart(hkSkinnedMeshShape::Part const&)
hkpListShape::ChildInfo::staticClass()
hkpSimpleMeshShape::initWeldingInfo(hkpWeldingUtility::WeldingType)
hkp6DofConstraintData::Blueprints::staticClass()
hkpRagdollConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpBallAndSocketConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpFixedConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpHingeConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpLimitedHingeConstraintData::getConstraintInfo(hkpConstraintData::ConstraintInfo&) const
hkpConstraintInstance::SmallArraySerializeOverrideType::staticClass()
hkpMultiThreadedSimulation::MtEntityEntityBroadPhaseListener::~MtEntityEntityBroadPhaseListener()
hkpStiffSpringChainData::ConstraintInfo::staticClass()
hkpBreakableMaterial::getShapeKeysForSubShapes(hkcdShape const*, unsigned int const*, int, hkpBreakableMaterial::ShapeKeyCollector*) const
hkpSimpleConstraintContactMgr::Factory::~Factory()
hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::BuildGeometryProvider<hkpBvCompressedMeshShape_Internals::GeometryProvider>::getVertex(int, hkVector4f&) const
hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::CustomGeometryConverter::~CustomGeometryConverter()
hkxNode::AnnotationData::staticClass()
ArrayOfTuplesImplementation::View::asReal(int) const
StructArrayImplementation::Object::getMemberName(int) const
StructArrayImplementation::Object::destroyMember(char const*)
StructArrayImplementation::Object::assign(_hkDataObject_MemberHandle const*, hkHalf)
hkDataWorldNative::newClass(hkDataClass::Cinfo const&)
hkGeometryProcessing::ConstFunction<hkGeometryProcessing::IFunction<hkVector4f, float> >::~ConstFunction()
hkgpIndexedMesh::IEdgeCollapse::~IEdgeCollapse()
hkgpMesh::TriangleShape::~TriangleShape()
hkgpMesh::TriangleShape::getBoundingBox() const
hkgpCgoInternal::ICollapse::~ICollapse()
hkFileSystem::Entry::getName() const
hkMapBase<unsigned long, unsigned long, hkMapOperations<unsigned long> >::hkMapBase(hkMapBase<unsigned long, unsigned long, hkMapOperations<unsigned long> >::InternalInitializer)
hkLargeBlockAllocator::FixedMemoryBlockServer::~FixedMemoryBlockServer()
hkcdStaticMeshTreeBase::Links::staticClass()
hkcdSimdTreeUtils::Build::RefitT<hkcdSimdTreeUtils::Build::GetLeafAabbFromSpheres>::~RefitT()
hkMeshTexture::RawBufferDescriptor::staticClass()
hkMeshTexture::Sampler::~Sampler()
hkpConvexTranslateShape::calcSizeForSpu(hkpShape::CalcSizeForSpuInput const&, int) const
hkpListShape::calcSizeForSpu(hkpShape::CalcSizeForSpuInput const&, int) const
hkpDeformableFixedConstraintData::Atoms::staticClass()
hkpPointToPlaneConstraintData::Atoms::staticClass()
hkpRotationalConstraintData::Atoms::staticClass()
hkpFixedConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpHingeConstraintData::setSolvingMethod(hkpConstraintAtom::SolvingMethod)
hkpLimitedHingeConstraintData::setSolvingMethod(hkpConstraintAtom::SolvingMethod)
hkpBreakableBody::Controller::~Controller()
hkpMultiThreadedSimulation::MtPhantomBroadPhaseListener::~MtPhantomBroadPhaseListener()
hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::BuildGeometryProvider<hkpBvCompressedMeshShape_Internals::GeometryProvider>::getNumVertices() const
hkpVehicleData::WheelComponentParams::staticClass()
ArrayOfTuplesImplementation::View::setReal(int, float)
StructArrayImplementation::Object::getMemberValue(int) const
StructArrayImplementation::Object::assign(_hkDataObject_MemberHandle const*, float)
hkMapBase<hkDataObject_Handle, hkDataObject_Handle, hkMapOperations<hkDataObject_Handle> >::hkMapBase(hkMapBase<hkDataObject_Handle, hkDataObject_Handle, hkMapOperations<hkDataObject_Handle> >::InternalInitializer)
hkMapBase<hkDataObject_Handle, int, hkMapOperations<hkDataObject_Handle> >::hkMapBase(hkMapBase<hkDataObject_Handle, int, hkMapOperations<hkDataObject_Handle> >::InternalInitializer)
hkGeometryProcessing::IFunction<hkVector4f, float>::~IFunction()
hkgpIndexedMesh::IEdgeCollapse::~IEdgeCollapse()
hkgpMesh::TriangleShape::~TriangleShape()
hkgpJobQueue::Box<hkgpCgoInternal::UpdateJob>::~Box()
hkContainerTempAllocator::Allocator::~Allocator()
hkcdSimdTree::Node::staticClass()
hkcdStaticMeshTreeBase::Connectivity::SectionHeader::staticClass()
hkcdSimdTreeUtils::Build::RefitT<hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs16>::~RefitT()
hkMemoryMeshTexture::setFilterMode(hkMeshTexture::FilterMode)
hkStorageSkinnedMeshShape::addPart(hkSkinnedMeshShape::Part const&)
hkpBallAndSocketConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpBreakableBody::Controller::~Controller()
hkpBreakableMultiMaterial::InverseMappingDescriptor::staticClass()
hkpMultiThreadedSimulation::MtPhantomBroadPhaseListener::~MtPhantomBroadPhaseListener()
hkpPoweredChainData::ConstraintInfo::staticClass()
hkpBreakableMultiMaterial::InverseMapping::~InverseMapping()
hkcdStaticMeshTree<hkcdStaticMeshTreeCommonConfig<unsigned int, unsigned long, 11, 21>, hkpBvCompressedMeshShapeTreeDataRun>::BuildGeometryProvider<hkpBvCompressedMeshShape_Internals::GeometryProvider>::~BuildGeometryProvider()
hkxMesh::UserChannelInfo::staticClass()
hkxEnum::Item::staticClass()
ArrayOfTuplesImplementation::View::asInt(int) const
StructArrayImplementation::Object::getAllMemberHandles(hkArrayBase<_hkDataObject_MemberHandle const*>&) const
StructArrayImplementation::Object::assign(_hkDataObject_MemberHandle const*, char const*)
hkRootLevelContainer::NamedVariant::NamedVariant(char const*, void*, hkClass const*)
hkgpAbstractMesh<hkgpIndexedMeshDefinitions::Edge, hkgpIndexedMeshDefinitions::Vertex, hkgpIndexedMeshDefinitions::Triangle, hkContainerHeapAllocator>::reset()
hkgpIndexedMeshInternals::DefaultEdgeCollapseInterface::bind(hkgpIndexedMeshDefinitions::Edge, hkgpIndexedMeshDefinitions::Edge)
hkgpMesh::ExternShape::getSupportingVertex(hkVector4f const&, hkVector4f&) const
hkContainerHeapAllocator::Allocator::~Allocator()
hkGeometry::Triangle::staticClass()
hkcdStaticMeshTreeBase::Connectivity::staticClass()
hkcdSimdTreeUtils::Build::RefitT<hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs>::~RefitT()
hkpBallSocketChainData::ConstraintInfo::staticClass()
hkpBreakableMultiMaterial::InverseMapping::staticClass()
hkpMultiThreadedSimulation::MtBroadPhaseBorderListener::removeCollisionPair(hkpTypedBroadPhaseHandlePair&)
hkpVehicleFrictionDescription::AxisDescription::staticClass()
ArrayOfTuplesImplementation::View::setInt(int, int)
StructArrayImplementation::Object::assign(_hkDataObject_MemberHandle const*, hkDataArrayImpl*)
hkgpIndexedMeshInternals::DefaultEdgeCollapseInterface::validTriangleSet(hkArrayBase<hkgpIndexedMeshDefinitions::Triangle*> const&, hkgpIndexedMeshDefinitions::Vertex const*, hkgpIndexedMeshDefinitions::Vertex const*)
hkContainerDebugAllocator::Allocator::~Allocator()
hkcdPlanarGeometryPrimitives::Collection<28>::~Collection()
hkcdSimdTreeUtils::Build::Task::~Task()
hkMemoryMeshTexture::setUsageHint(hkMeshTexture::TextureUsageType)
hkp6DofConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpVehicleSuspension::SuspensionWheelParameters::staticClass()
hkxMesh::UserChannelInfo::~UserChannelInfo()
ArrayOfTuplesImplementation::View::swizzleObjectMember(char const*) const
ArrayOfTuplesImplementation::View::asInt64(int) const
StructArrayImplementation::Object::assign(_hkDataObject_MemberHandle const*, hkDataObjectImpl*)
hkMemoryResourceHandle::ExternalLink::staticClass()
hkgpIndexedMeshInternals::DefaultEdgeCollapseInterface::removeVertex(hkgpIndexedMeshDefinitions::Vertex*)
hkContainerHeapAllocator::Allocator::~Allocator()
hkcdSimdTreeUtils::Build::Task::~Task()
hkp6DofConstraintData::setSolvingMethod(hkpConstraintAtom::SolvingMethod)
hkpVehicleFrictionStatus::AxisStatus::staticClass()
hkxMesh::UserChannelInfo::~UserChannelInfo()
ArrayOfTuplesImplementation::View::getType() const
ArrayOfTuplesImplementation::View::setInt64(int, long)
StructArrayImplementation::Object::assign(_hkDataObject_MemberHandle const*, hkDataObject_Value const&)
hkgpIndexedMeshInternals::DefaultEdgeCollapseInterface::removeTriangle(hkgpIndexedMeshDefinitions::Triangle*)
hkContainerDebugAllocator::Allocator::~Allocator()
hkContainerTempAllocator::Allocator::blockAlloc(int)
hkcdSimdTreeUtils::Build::EmptyRunnable::~EmptyRunnable()
hkpExtendedMeshShape::Subpart::staticClass()
hkpBallAndSocketConstraintData::Atoms::staticClass()
hkpTriggerVolume::EventInfo::staticClass()
hkDataWorld::addClassMember(hkDataClass&, char const*, hkTypeManager::Type*, void const*)
ArrayOfTuplesImplementation::View::getWorld() const
ArrayOfTuplesImplementation::View::asObject(int) const
StructArrayImplementation::Object::asObject(_hkDataObject_MemberHandle const*)
hkgpIndexedMeshInternals::DefaultEdgeCollapseInterface::~DefaultEdgeCollapseInterface()
hkContainerTempAllocator::Allocator::~Allocator()
hkContainerTempAllocator::Allocator::blockFree(void*, int)
hkcdPlanarSolid::NodeStorage::staticClass()
hkcdSimdTreeUtils::Build::EmptyRunnable::~EmptyRunnable()
hkVertexFormat::Element::staticClass()
hkMemoryMeshTexture::Sampler::sample(hkVector4f const&, hkVector4f&) const
hkpExtendedMeshShape::TrianglesSubpart::staticClass()
hkpFixedConstraintData::Atoms::staticClass()
hkpDisplayBindingData::RigidBody::staticClass()
ArrayOfTuplesImplementation::View::clear()
ArrayOfTuplesImplementation::View::setObject(int, hkDataObjectImpl*)
StructArrayImplementation::Object::asHalf(_hkDataObject_MemberHandle const*)
hkgpIndexedMeshInternals::DefaultEdgeCollapseInterface::~DefaultEdgeCollapseInterface()
hkContainerTempAllocator::Allocator::bufAlloc(int&)
hkcdPlanarSolid::Node::staticClass()
hkcdSimdTreeUtils::Build::RefitT<hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs>::~RefitT()
hkpExtendedMeshShape::ShapesSubpart::staticClass()
hkpDisplayBindingData::PhysicsSystem::staticClass()
ArrayOfTuplesImplementation::View::reserve(int)
ArrayOfTuplesImplementation::View::asArray(int) const
StructArrayImplementation::Object::asReal(_hkDataObject_MemberHandle const*)
hkContainerTempAllocator::Allocator::bufFree(void*, int)
hkcdSimdTreeUtils::Build::RefitT<hkcdSimdTreeUtils::Build::GetLeafAabbFromAabbs16>::~RefitT()
hkMemoryMeshTexture::Sampler::getImage(int) const
ArrayOfTuplesImplementation::View::setSize(int)
ArrayOfTuplesImplementation::View::setArray(int, hkDataArrayImpl*)
StructArrayImplementation::Object::asInt(_hkDataObject_MemberHandle const*)
hkCustomAttributes::Attribute::staticClass()
hkContainerTempAllocator::Allocator::bufRealloc(void*, int, int&)
hkcdPlanarSolid::NodeStorage::~NodeStorage()
hkcdSimdTreeUtils::Build::RefitT<hkcdSimdTreeUtils::Build::GetLeafAabbFromSpheres>::~RefitT()
hkpMeshShape::Subpart::staticClass()
hkpPrismaticConstraintData::Atoms::staticClass()
hkpStiffSpringConstraintData::Atoms::staticClass()
hkpDisplayBindingData::RigidBody::~RigidBody()
hkpPoweredChainMapper::Target::staticClass()
ArrayOfTuplesImplementation::View::setAll(unsigned char const*, int)
StructArrayImplementation::Object::asArray(_hkDataObject_MemberHandle const*)
hkContainerTempAllocator::Allocator::getMemoryStatistics(hkMemoryAllocator::MemoryStatistics&) const
hkcdStaticTree::Codec3Axis::staticClass()
hkcdSimdTreeUtils::Build::RefitT<hkcdSimdTreeUtils::Build::GetLeafAabbFromPoints>::~RefitT()
hkpPoweredChainMapper::LinkInfo::staticClass()
StructArrayImplementation::Object::asString(_hkDataObject_MemberHandle const*)
hkDefaultError::setMinimumMessageLevel(hkError::Message)
hkContainerTempAllocator::Allocator::getAllocatedSize(void const*, int) const
hkcdDynamicTree::Codec18::staticClass()
hkcdStaticTree::Codec3Axis4::staticClass()
hkcdSimdTreeUtils::Build::RefitT<hkcdSimdTreeUtils::Build::GetLeafAabbFromICustomRefit>::~RefitT()
StructArrayImplementation::Object::asVec(_hkDataObject_MemberHandle const*, int)
hkContainerDebugAllocator::Allocator::blockAlloc(int)
hkcdDynamicTree::Codec32::staticClass()
hkcdStaticTree::Codec3Axis5::staticClass()
hkcdSimdTreeUtils::Build::IRefit::~IRefit()
hkpHingeConstraintData::Atoms::staticClass()
hkContainerDebugAllocator::Allocator::blockFree(void*, int)
hkcdDynamicTree::CodecInt16::IntAabb::staticClass()
hkcdStaticTree::Codec3Axis6::staticClass()
hkContainerDebugAllocator::Allocator::bufAlloc(int&)
hkcdDynamicTree::CodecInt16::staticClass()
hkcdStaticTree::CodecRaw::staticClass()
hkContainerDebugAllocator::Allocator::bufFree(void*, int)
hkcdDynamicTree::CodecRawUint::staticClass()
hkpStorageMeshShape::SubpartStorage::staticClass()
hkpPulleyConstraintData::Atoms::staticClass()
StructArrayImplementation::Object::getClass() const
hkContainerDebugAllocator::Allocator::bufRealloc(void*, int, int&)
hkcdDynamicTree::CodecRawUlong::staticClass()
hkpStorageExtendedMeshShape::Material::staticClass()
StructArrayImplementation::Object::hasMember(char const*) const
hkContainerDebugAllocator::Allocator::getMemoryStatistics(hkMemoryAllocator::MemoryStatistics&) const
hkpStorageExtendedMeshShape::MeshSubpartStorage::staticClass()
hkContainerDebugAllocator::Allocator::getAllocatedSize(void const*, int) const
hkpStorageExtendedMeshShape::ShapeSubpartStorage::staticClass()
hkpHingeLimitsData::Atoms::staticClass()
hkpWheelConstraintData::Atoms::staticClass()
hkContainerHeapAllocator::Allocator::blockAlloc(int)
hkContainerHeapAllocator::Allocator::blockFree(void*, int)
hkContainerHeapAllocator::Allocator::bufAlloc(int&)
hkpRackAndPinionConstraintData::Atoms::staticClass()
hkpWheelFrictionConstraintAtom::Axle::staticClass()
hkcdDynamicTree::AnisotropicMetric::staticClass()
hkcdDynamicTree::BalanceMetric::staticClass()
hkcdDynamicTree::CentroidMetric::staticClass()
hkpLimitedHingeConstraintData::Atoms::staticClass()
hkpRagdollConstraintData::getRuntimeInfo(hkBool, hkpConstraintData::RuntimeInfo&) const
hkpRagdollConstraintData::setSolvingMethod(hkpConstraintAtom::SolvingMethod)
hkpLinearClearanceConstraintData::Atoms::staticClass()
hkpConstraintData::setSolvingMethod(hkpConstraintAtom::SolvingMethod)
